{"version":3,"sources":["webpack:///src/app/Component/wish/wish.component.html","webpack:///src/app/Component/wish/wish.component.ts","webpack:///src/app/Component/displaybook/displaybook.component.ts","webpack:///src/app/Component/displaybook/displaybook.component.html","webpack:///src/app/Component/auth/reset-password/reset-password.component.html","webpack:///src/app/Component/auth/reset-password/reset-password.component.ts","webpack:///src/app/Pipe/booksearchpipe.pipe.ts","webpack:///src/app/Component/update-book/update-book.component.ts","webpack:///src/app/Component/update-book/update-book.component.html","webpack:///src/app/Component/dashboard/dashboard.component.html","webpack:///src/app/Component/dashboard/dashboard.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/Service/user.service.ts","webpack:///src/app/Component/sidenavbar/sidenavbar.component.html","webpack:///src/app/Component/sidenavbar/sidenavbar.component.ts","webpack:///src/app/Component/toolbar/toolbar.component.ts","webpack:///src/app/Component/toolbar/toolbar.component.html","webpack:///src/app/Component/seller/seller/seller.component.ts","webpack:///src/app/Component/seller/seller/seller.component.html","webpack:///src/app/Component/auth/login-component/login-component.component.html","webpack:///src/app/Component/auth/login-component/login-component.component.ts","webpack:///src/app/Component/addbook/upload-book-image/upload-book-image.component.ts","webpack:///src/app/Component/addbook/upload-book-image/upload-book-image.component.html","webpack:///src/app/Service/httpservice.service.ts","webpack:///src/app/Component/orderstatus/orderstatus.component.ts","webpack:///src/app/Component/orderstatus/orderstatus.component.html","webpack:///src/app/Component/adminunverifiedbooks/adminunverifiedbooks.component.html","webpack:///src/app/Component/adminunverifiedbooks/adminunverifiedbooks.component.ts","webpack:///src/app/Component/auth/forget-password/forget-password.component.html","webpack:///src/app/Component/auth/forget-password/forget-password.component.ts","webpack:///src/app/Component/addbook/addbook.component.ts","webpack:///src/app/Component/addbook/addbook.component.html","webpack:///src/app/Component/spineer/spineer.component.ts","webpack:///src/app/Component/spineer/spineer.component.html","webpack:///src/app/Component/footer/footer.component.ts","webpack:///src/app/Component/footer/footer.component.html","webpack:///src/app/Service/cart.service.ts","webpack:///src/app/Component/ordergreeting/ordergreeting.component.ts","webpack:///src/app/Component/ordergreeting/ordergreeting.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/Service/admin.service.ts","webpack:///src/app/Model/address.model.ts","webpack:///src/app/Service/order.service.ts","webpack:///src/app/Component/admin/admin/admin.component.html","webpack:///src/app/Component/admin/admin/admin.component.ts","webpack:///src/app/Model/book/book.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/Model/customer.model.ts","webpack:///src/app/Component/giverate/giverate.component.html","webpack:///src/app/Component/giverate/giverate.component.ts","webpack:///src/app/Component/ratereview/ratereview.component.html","webpack:///src/app/Component/ratereview/ratereview.component.ts","webpack:///src/app/Component/ratedbooks/ratedbooks.component.ts","webpack:///src/app/Component/ratedbooks/ratedbooks.component.html","webpack:///src/app/Service/wishlist.service.ts","webpack:///src/app/Component/bookreviews/bookreviews.component.ts","webpack:///src/app/Component/bookreviews/bookreviews.component.html","webpack:///src/app/Service/book.service.ts","webpack:///src/app/Component/cart/cart.component.ts","webpack:///src/app/Component/cart/cart.component.html","webpack:///src/app/Component/auth/registration/registration.component.html","webpack:///src/app/Component/auth/registration/registration.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/Service/token.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["WishComponent","cartService","wishlistService","route","matSnackBar","books","WishListdetails","Array","booksFromWishList","BookCount","getWishllistBooks","subscribe","Response","console","log","obj","length","countbook","i","booksList","bookName","bookDetails","authorName","noOfBooks","image","price","bookId","p","push","getWishlistCount","bookcount","open","message","duration","error","BookId","removeFromWishList","response","window","location","reload","sessionStorage","removeItem","orderId","addToWishlist","localStorage","getItem","setItem","navigateByUrl","addToCart","data","handleResponse","handleError","DisplaybookComponent","service","selectedValue","orderBy","bookList","book","items","pageofItems","page","lengths","value","output","getallApprovedBooks","getSearchBookData","leng","key","deviceValue","approvedBookServiceMethod","order","sortby","getAllApprovedBookByPage","content","size","totalElements","CurrentPageNo","pageable","pageNumber","totalPage","totalPages","bookSearch","event","preventDefault","ngOnInit","wishdata","handleWishResponse","ResetPasswordComponent","user","matSnakeBar","activatedRoute","isLoading","form","email","newPassword","confirmPassword","paramMap","parameters","token","get","updatePassword","BooksearchpipePipe","searchTerm","filter","toLowerCase","indexOf","status","UpdateBookComponent","bookservice","activedRoute","router","http","dialogRef","required","updatebook","target","files","imageFile","name","setTimeout","updateBook","statusCode","close","DashboardComponent","titleService","opened","opened2","isUser","isSeller","isAdmin","isLogin","$event","role","setTitle","dashboard","nameEventHander","environment","production","BASE_URL","BookUrl","getallbooksurl","getbookbyIdurl","addandupdatecartUrl","sorting","SortNewestArrival","cusUrl","addbooks","deleteBook","editBook","verifyBook","addBookImage","CartUrl","addUrl","addtocart","getbookprice","getReview","quantity","addbooksquantity","USER_REGISTRATION","USER_LOGIN","USER_FORGET_PASSWORD","USER_RESETPASSWORD","ADDCART","COUNT_BOOKS_IN_CART","DEC_BOOKS_QUANTITY","INC_BOOKS_QUANTITY","REMOVE_BOOKS_FROM_CART","GET_BOOKS_FROM_CART","GET_ADDRESS_BY_ADDRES","UPDATE_ADDRESS","ADD_ADDRESS","PLACE_ORDER","WRITE_REVIEW","GET_REVIEWS","ratereview","adminUrl","approveBook","rejectBook","unVerifiedBooks","rejectedBooks","approvedBooks","avgrateofbook","getallOrderedBooks","changeOrderstatus","getOrdersByseller","getSortedBookByRate","WISHLIST_ADD","WISHLIST_GET","WISHLIST_COUNT","WISHLIST_REMOVE","UserService","baseUrl","httpOtions","headers","post","put","address","SidenavbarComponent","navigate","queryParams","ToolbarComponent","toggleEvent","isbudget","input","emit","autoRefresh$","getCartItemCount","setSearchBookData","remove","logedIn","wishlistLength","SellerComponent","dialog","_route","sellerBooks","orderBooks","params","param","getallBooks","getUserName","width","panelClass","afterClosed","result","height","LoginComponentComponent","hide","valideUser","tokenValue","password","signIn","handle","UploadBookImageComponent","bookService","snackbar","formBuilder","imageForm","group","setValue","formData","FormData","append","uploadBookImage","onSubmit","onSelectedFile","HttpserviceService","url","head","options","OrderstatusComponent","adminservice","sellerService","orderdetails","animalControl","selectFormControl","getallUserOrderedBooks","getAllOrderedBooks","orderedBooks","orderStatus","quantityOfBooks","totalprice","quantityOfBook","updateOrderStatus","AdminunverifiedbooksComponent","adminService","snakbar","noteId","getUnApprovedBooks","autoRefresh","getUnverifiedBooks","approveBooks","rejectBooks","ForgetPasswordComponent","forgetPassword","AddbookComponent","minLength","maxLength","pattern","addBook","bookForm","invalid","hasError","onSelectedImage","onClickaddBook","SpineerComponent","FooterComponent","CartService","httpService","bookApiUrl","httpOptions","_autoRefresh$","arr","pipe","next","CartInfo","OrdergreetingComponent","AppComponent","title","AdminService","subject","Address","OrderService","AddressId","AdminComponent","unverified","orders","review","BookModule","AppModule","Customer","GiverateComponent","snackBar","starCount","snackBarDuration","ratingArr","getRateOfBook","snapshot","getBookById","index","getColor","rating","getOneBook","bookImage","bookAuthor","ratingandreview","totalRate","color","getRateOfBookById","submitRate","RatereviewComponent","ratings","ratenumber","reviewList","getRatings","getOneBookById","rate","undefined","total","rev","userName","Number","parseFloat","toFixed","isAdded","RatedbooksComponent","rateList","getBookByRating","WishlistService","addwhistlistUrl","BookreviewsComponent","reviews","getReviews","BookService","searchBookData","notesList","getReviewUrl","imageName","Bookid","asObservable","tokens","CartComponent","userService","orderService","selected","isLinear","valueChanged","si","objecrtArry","customer","userAdreessDetails","type","num","select","addre","phoneNumber","Name","pincode","locality","city","landmark","Home","Work","Other","bookQuantityDetails","eachPrice","quantityId","getsession","booksFromCart","fun","getCartBooksFrom","quantityDeatils","quantity_id","increaseBooksQuantity","decreaseBooksQuantity","removeIteamFromCart","getAdress","addressType","selectedtype","setAddresToInput","adressId","addressId","adressuser","getUserAdress","bid","placeOrder","handleResponseOfPlaceOrder","addAdress","updateAdress","RegistrationComponent","isloading","mobileNumber","signUp","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","TokenService","loggedIn","set","clear","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOY;;AACI;;AAEI;;AACA;;AACI;;AAEI;;AACJ;;AAEA;;AACI;;AACJ;;AACA;;AAEI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAhB6B;;AAAA;;AAIb;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;;;;;;;AAhBpB;;AACI;;AAoBA;;AAoCI;;AAA0C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC9C;;AACF;;AACM;;AAAyC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC7C;;AACF;;AACE;;AACJ;;;;;;AA/DU;;AAAA;;;;UCILA,a;AAEX,+BAAqBC,WAArB,EAAuDC,eAAvD,EAAkGC,KAAlG,EACqBC,WADrB,EAC+C;AAAA;;AAD1B,eAAAH,WAAA,GAAAA,WAAA;AAAkC,eAAAC,eAAA,GAAAA,eAAA;AAA2C,eAAAC,KAAA,GAAAA,KAAA;AAC7E,eAAAC,WAAA,GAAAA,WAAA;AAKrB,eAAAC,KAAA,GAAQ,EAAR;AACA,eAAAC,eAAA,GAAkB,IAAIC,KAAJ,EAAlB;AANkD;;;;iBAYlD,oBAAQ;AACN,iBAAKC,iBAAL;AACA,iBAAKC,SAAL;AACD;;;iBAED,6BAAoB;AAAA;;AAClB,iBAAKP,eAAL,CAAqBQ,iBAArB,GAAyCC,SAAzC,CAAmD,UAACC,QAAD,EAAc;AAC/DC,qBAAO,CAACC,GAAR,CAAY,0BAA0BF,QAAQ,CAACG,GAAT,CAAaC,MAAnD;AACA,mBAAI,CAACC,SAAL,GAAiBL,QAAQ,CAACG,GAAT,CAAaC,MAA9B;AACAH,qBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA+BF,QAAQ,CAACG,GAAxC;AACAF,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,QAA3B;AACA,mBAAI,CAACP,KAAL,GAAaO,QAAQ,CAACG,GAAtB,CAL+D,CAO/D;;AACA,mBAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,QAAQ,CAACG,GAAT,CAAaC,MAAjC,EAAyCE,CAAC,EAA1C,EAA8C;AAE9CL,uBAAO,CAACC,GAAR,CAAY,gBAAiBF,QAAQ,CAACG,GAAT,CAAa,CAAb,EAAgBI,SAAhB,CAA0B,CAA1B,EAA6BC,QAA1D;AACAP,uBAAO,CAACC,GAAR,CAAY,mBAAoBF,QAAQ,CAACG,GAAT,CAAa,CAAb,EAAgBI,SAAhB,CAA0B,CAA1B,EAA6BE,WAA7D;AACAR,uBAAO,CAACC,GAAR,CAAY,kBAAmBF,QAAQ,CAACG,GAAT,CAAa,CAAb,EAAgBI,SAAhB,CAA0B,CAA1B,EAA6BG,UAA5D;AACAT,uBAAO,CAACC,GAAR,CAAY,iBAAkBF,QAAQ,CAACG,GAAT,CAAa,CAAb,EAAgBI,SAAhB,CAA0B,CAA1B,EAA6BI,SAA3D;AACAV,uBAAO,CAACC,GAAR,CAAY,aAAcF,QAAQ,CAACG,GAAT,CAAa,CAAb,EAAgBI,SAAhB,CAA0B,CAA1B,EAA6BK,KAAvD;AACAX,uBAAO,CAACC,GAAR,CAAY,aAAcF,QAAQ,CAACG,GAAT,CAAa,CAAb,EAAgBI,SAAhB,CAA0B,CAA1B,EAA6BM,KAAvD;AACAZ,uBAAO,CAACC,GAAR,CAAY,cAAeF,QAAQ,CAACG,GAAT,CAAa,CAAb,EAAgBI,SAAhB,CAA0B,CAA1B,EAA6BO,MAAxD;AAEAb,uBAAO,CAACC,GAAR,CAAY,eAAe,KAAI,CAACT,KAAhC;AAEA,oBAAMsB,CAAC,GAAG;AAACP,0BAAQ,EAAER,QAAQ,CAACG,GAAT,CAAaG,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BC,QAAxC;AAAmDC,6BAAW,EAAET,QAAQ,CAACG,GAAT,CAAaG,CAAb,EAAgBG,WAAhF;AACPC,4BAAU,EAAEV,QAAQ,CAACG,GAAT,CAAaG,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BG,UADlC;AAERC,2BAAS,EAAEX,QAAQ,CAACG,GAAT,CAAaG,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BI,SAFhC;AAGRC,uBAAK,EAAEZ,QAAQ,CAACG,GAAT,CAAaG,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BK,KAH5B;AAGoCC,uBAAK,EAAEb,QAAQ,CAACG,GAAT,CAAaG,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BM,KAHxE;AAIRC,wBAAM,EAAEd,QAAQ,CAACG,GAAT,CAAaG,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BO;AAJ7B,iBAAV;;AAOA,qBAAI,CAACpB,eAAL,CAAqBsB,IAArB,CAA0BD,CAA1B;;AACAd,uBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAI,CAACR,eAAhC;AACD;AAEC,aA/BF;AAiCD;;;iBACD,qBAAY;AAAA;;AACV,iBAAKJ,eAAL,CAAqB2B,gBAArB,GAAwClB,SAAxC,CACE,UAACC,QAAD,EAAmB;AACjBC,qBAAO,CAACC,GAAR,CAAY,kBAAkBF,QAAQ,CAACG,GAAvC;AACA,oBAAI,CAACe,SAAL,GAAiBlB,QAAQ,CAACG,GAA1B;;AACA,oBAAI,CAACX,WAAL,CAAiB2B,IAAjB,CAAsBnB,QAAQ,CAACoB,OAA/B,EAAwC,MAAxC,EAAgD;AAAEC,wBAAQ,EAAE;AAAZ,eAAhD;AACD,aALH,EAME,UAACC,KAAD,EAAgB;AACdrB,qBAAO,CAACqB,KAAR,CAAcA,KAAd;AACArB,qBAAO,CAACC,GAAR,CAAYoB,KAAK,CAACA,KAAN,CAAYF,OAAxB;;AACA,oBAAI,CAAC5B,WAAL,CAAiB2B,IAAjB,CAAsBG,KAAK,CAACA,KAAN,CAAYF,OAAlC,EAA2C,MAA3C,EAAmD;AAAEC,wBAAQ,EAAE;AAAZ,eAAnD;AACD,aAVH;AAYD;;;iBAED,yBAAgBE,MAAhB,EAA6B;AAAA;;AAC3BtB,mBAAO,CAACC,GAAR,CAAY,sBAAsBqB,MAAlC;AAEA,iBAAKjC,eAAL,CAAqBkC,kBAArB,CAAwCD,MAAxC,EAAgDxB,SAAhD,CACE,UAAC0B,QAAD,EAAmB;AAEjB,oBAAI,CAACjC,WAAL,CAAiB2B,IAAjB,CAAsB,6BAAtB,EAAqD,SAArD,EAAgE;AAACE,wBAAQ,EAAE;AAAX,eAAhE;;AACAK,oBAAM,CAACC,QAAP,CAAgBC,MAAhB;AACAC,4BAAc,CAACC,UAAf,CAA0BP,MAA1B;AACC,aANL,EAOE,UAACD,KAAD,EAAgB;AACd,oBAAI,CAAC9B,WAAL,CAAiB2B,IAAjB,CAAsBG,KAAK,CAACA,KAAN,CAAYF,OAAlC,EAA2C,QAA3C,EAAqD;AAACC,wBAAQ,EAAE;AAAX,eAArD;AACD,aATH;AAWD;;;iBAED,mBAAUU,OAAV,EAAwB;AAAA;;AACtB9B,mBAAO,CAACC,GAAR,CAAY,sBAAsB6B,OAAlC;AAEA,iBAAKzC,eAAL,CAAqB0C,aAArB,CAAmCD,OAAnC,EAA4ChC,SAA5C,CACE,UAAC0B,QAAD,EAAmB;AACjB,oBAAI,CAACjC,WAAL,CAAiB2B,IAAjB,CAAsB,6BAAtB,EAAqD,SAArD,EAAgE;AAACE,wBAAQ,EAAE;AAAX,eAAhE;AAEC,aAJL,EAKE,UAACC,KAAD,EAAgB;AACd,oBAAI,CAAC9B,WAAL,CAAiB2B,IAAjB,CAAsBG,KAAK,CAACA,KAAN,CAAYF,OAAlC,EAA2C,QAA3C,EAAqD;AAACC,wBAAQ,EAAE;AAAX,eAArD;AACD,aAPH;AASD;;;iBAGD,kBAAUP,MAAV,EAAuB;AAAA;;AACrB,gBAAImB,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,IAAtC,EAA4C;AAC1C,mBAAK1C,WAAL,CAAiB2B,IAAjB,CAAsB,oBAAtB,EAA4C,IAA5C,EAAkD;AAChDE,wBAAQ,EAAE;AADsC,eAAlD;AAGAQ,4BAAc,CAACM,OAAf,CAAuBrB,MAAvB,EAA+BA,MAA/B;AACA,mBAAKvB,KAAL,CAAW6C,aAAX,CAAyB,OAAzB;AACD;;AAEDP,0BAAc,CAACM,OAAf,CAAuBrB,MAAvB,EAA+BA,MAA/B;AAEA,iBAAKzB,WAAL,CAAiBgD,SAAjB,CAA2BvB,MAA3B,EAAmCf,SAAnC,CACE,UAAAuC,IAAI;AAAA,qBAAI,MAAI,CAACC,cAAL,CAAoBD,IAApB,CAAJ;AAAA,aADN,EAEE,UAAAhB,KAAK;AAAA,qBAAI,MAAI,CAACkB,WAAL,CAAiBlB,KAAjB,CAAJ;AAAA,aAFP;AAID;;;iBACD,wBAAegB,IAAf,EAA0B;AACxBrC,mBAAO,CAACC,GAAR,CAAYoC,IAAZ;AACAZ,kBAAM,CAACC,QAAP,CAAgBC,MAAhB;AACA,iBAAKpC,WAAL,CAAiB2B,IAAjB,CAAsB,mCAAtB,EAA4D,IAA5D,EAAkE;AAClEE,sBAAQ,EAAE;AADwD,aAAlE;AAGH;;;iBAED,qBAAYC,KAAZ,EAAwB;AACtB,iBAAKA,KAAL,GAAaA,KAAK,CAACA,KAAN,CAAYF,OAAzB;AACAnB,mBAAO,CAACC,GAAR,CAAYoB,KAAZ;AACAI,kBAAM,CAACC,QAAP,CAAgBC,MAAhB;AACA,iBAAKpC,WAAL,CAAiB2B,IAAjB,CAAsB,KAAKG,KAA3B,EAAkC,IAAlC,EAAwC;AACxCD,sBAAQ,EAAE;AAD8B,aAAxC;AAGD;;;;;;;yBApIYjC,a,EAAa,yI,EAAA,iJ,EAAA,uH,EAAA,wI;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA,iB;AAAA,e;AAAA,woB;AAAA;AAAA;ADX1B;;AACA;;AAAI;;AACJ;;AACI;;AACI;;AAAK;;AAAwC;;AAAM;;AAAI;;AAEvD;;AAiEJ;;AACJ;;AACA;;AAAI;;AACJ;;AACI;;AACJ;;;;AAxEa;;AAAA;;AAEiB;;AAAA;;;;;;;;;;;;;;;;;;;;;AEN9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEQ;;AACI;;AAAmB;;AACf;;AACF;;AACA;;AACF;;AACA;;AACI;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAKhD;;AAA0B;;AAAiB;;AAC7B;;AAAqB;;AAAkB;;AACvC;;AAAqB;;AAAkB;;AACvC;;AAAqB;;AAAe;;AAClD;;AACA;;AACJ;;;;;;AAfM;;AAAA;;AAIoB;;AAAA;;;;;;AAa1B;;AAAwE;;AAAsE;;;;;;AAY9H;;AAAoD;;AAAY;;;;;;AAWhE;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAGA;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAEJ;;;;;;AAHA;;AAGA;;;;;;AAH2D;;AAG9B;;AAAA;;;;;;;;AAEjC;;AACI;;AACI;;AAA0B;AAAA;;AAAA;;AAAA;AAAA,aAAkC,OAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAAlC;;AAA0F;;AAAU;;AAClI;;AACA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAKW;;AAAQ;;AAC/B;;AACJ;;;;;;AACA;;AACI;;AAEA;;AACR;;AACI;;;;;;;;AACA;;AAAuB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACnB;;AAIyB;;AAAO;;AACpC;;;;;;;;AArDZ;;AAEI;;AACI;;AAAwC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpC;;AAEJ;;AACA;;AACI;;AACA;;AAAuB;;AAAmB;;AAG1C;;AACE;;AAAmD;;AAAO;;AAC1D;;AACF;;AAEA;;AAAyB;;AAAwB;;AACjD;;AAAoB;;AAAoB;;AACxC;;AAGA;;AAMA;;AAaA;;AAMA;;AAOJ;;AACJ;;AACJ;;;;;;;;;;AApDiB;;AAAA;;AAIuB;;AAAA;;AACL;;AAAA;;AAKrB;;AAAA;;AAGuB;;AAAA;;AACL;;AAAA;;AACwC;;AAAA,uHAA4C,UAA5C,EAA4C,GAA5C;;AAShC;;AAAA;;AAaJ;;AAAA;;AAMiC;;AAAA;;;;;;;;;;;;;;AAgB7D;;AAA0E;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2D;;AAAO;;;;;;;;AAAtC;;AAA+B;;AAAA;;;;;;;;AAHjJ;;AACI;;AAAI;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAE;;AACE;;AACA;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AAA4I;;AAAC;;AAC5J;;;;;;AAF6B;;AAAA;;;;UD5ExBqD,oB;AA0BX,sCAAqBC,OAArB,EACqBlD,WADrB,EAEqBD,KAFrB,EAGqBF,WAHrB,EAIqBC,eAJrB,EAIuD;AAAA;;AAJlC,eAAAoD,OAAA,GAAAA,OAAA;AACA,eAAAlD,WAAA,GAAAA,WAAA;AACA,eAAAD,KAAA,GAAAA,KAAA;AACA,eAAAF,WAAA,GAAAA,WAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AA5BrB,eAAAqD,aAAA,GAAgB,WAAhB;AACA,eAAAC,OAAA,GAAU,KAAV;AAEA,eAAAtB,KAAA,GAAQ,IAAR;AACA,eAAAuB,QAAA,GAAWlD,KAAK,EAAhB;AACA,eAAAmD,IAAA,GAAmB,IAAI,yEAAJ,EAAnB;AACA,eAAAC,KAAA,GAAQ,EAAR;AACA,eAAAC,WAAA,GAAiC,IAAIrD,KAAJ,EAAjC;AAMA,eAAAsD,IAAA,GAAO,CAAP;AACA,eAAA7C,MAAA,GAAcyB,cAAc,CAACzB,MAA7B;AAEA,eAAA8C,OAAA,GAAU,CAAV;AAKA,eAAAC,KAAA,GAAa,EAAb;AACU,eAAAC,MAAA,GAA4B,IAAI,0DAAJ,EAA5B;AAMgD;;;;iBAE1D,oBAAW;AACT,iBAAKC,mBAAL;AACA,iBAAKC,iBAAL;AACA,iBAAKC,IAAL,GAAY1B,cAAc,CAACzB,MAA3B;;AACA,iBAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,cAAc,CAACzB,MAAnC,EAA2CE,CAAC,EAA5C,EAAgD;AAC9C,kBAAMkD,GAAG,GAAG3B,cAAc,CAAC2B,GAAf,CAAmBlD,CAAnB,CAAZ;AACA,mBAAK6C,KAAL,CAAWtB,cAAc,CAACK,OAAf,CAAuBsB,GAAvB,CAAX,IAA0C3B,cAAc,CAACK,OAAf,CAAuBsB,GAAvB,CAA1C;AACAvD,qBAAO,CAACC,GAAR,CAAY,WAAWsD,GAAvB;AACD;;AACDvD,mBAAO,CAACC,GAAR,CAAY,KAAKiD,KAAjB;AACD;;;iBAED,kBAASM,WAAT,EAAsB;AACpB,iBAAKd,aAAL,GAAqBc,WAArB;AACAxD,mBAAO,CAACC,GAAR,CAAY,sCAAsCuD,WAAlD;;AACA,oBAAQ,KAAKd,aAAb;AACE,mBAAK,MAAL;AACG1C,uBAAO,CAACC,GAAR,CAAY,eAAZ;AACA,qBAAKwD,yBAAL,CAA+B,KAAKT,IAApC,EAA0C,OAA1C,EAAmD,KAAnD;AACAhD,uBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAK2C,QAAvC;AACA;;AACH,mBAAK,MAAL;AACE,qBAAKa,yBAAL,CAA+B,KAAKT,IAApC,EAA0C,OAA1C,EAAmD,KAAnD;AACAhD,uBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAK2C,QAAvC;AACA;;AACF,mBAAK,MAAL;AACE,qBAAKa,yBAAL,CAA+B,KAAKT,IAApC,EAA0C,uBAA1C,EAAmE,KAAnE;AACAhD,uBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAK2C,QAAvC;AACA;AAbJ;AAeH;;;iBAEC,+BAAsB;AACpB,iBAAKa,yBAAL,CAA+B,KAAKT,IAApC,EAA0C,SAA1C,EAAqD,KAArD;AACD;;;iBAED,mCAA0BA,IAA1B,EAA0CU,KAA1C,EAA0DC,MAA1D,EAA2E;AAAA;;AACzE,iBAAKlB,OAAL,CAAamB,wBAAb,CAAsCZ,IAAtC,EAA4CU,KAA5C,EAAmDC,MAAnD,EAA2D7D,SAA3D,CAAqE,UAAC0B,QAAD,EAAmB;AACtFxB,qBAAO,CAACC,GAAR,CAAYuB,QAAZ;AACAxB,qBAAO,CAACC,GAAR,CAAY,kBAAkBuB,QAAQ,CAACtB,GAAvC;AACA,oBAAI,CAAC0C,QAAL,GAAgBpB,QAAQ,CAACtB,GAAT,CAAa2D,OAA7B;AACA,oBAAI,CAACC,IAAL,GAAYtC,QAAQ,CAACtB,GAAT,CAAa6D,aAAzB;AACA,oBAAI,CAACC,aAAL,GAAqBxC,QAAQ,CAACtB,GAAT,CAAa+D,QAAb,CAAsBC,UAA3C;AACA,oBAAI,CAACC,SAAL,GAAiB,IAAIzE,KAAJ,CAAU8B,QAAQ,CAACtB,GAAT,CAAakE,UAAvB,CAAjB;AACApE,qBAAO,CAACC,GAAR,CAAY,qBAAqB,MAAI,CAACkE,SAAtC;AACAnE,qBAAO,CAACC,GAAR,CAAY,qBAAqB,MAAI,CAAC6D,IAAtC;AACA9D,qBAAO,CAACC,GAAR,CAAY,2BAA2B,MAAI,CAAC+D,aAA5C;AACAhE,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,MAAI,CAAC2C,QAAL,CAAczC,MAAzC;AACD,aAXD;AAYD;;;iBACH,6BAAoB;AAAA;;AAChB,iBAAKsC,OAAL,CAAaY,iBAAb,GAAiCvD,SAAjC,CAA2C,UAACqB,OAAD,EAAa;AACtDnB,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BkB,OAAO,CAAC3B,KAAnC;AACA,oBAAI,CAAC6E,UAAL,GAAkBlD,OAAO,CAAC3B,KAA1B;AACD,aAHD;AAID;;;iBAGD,iBAAQa,CAAR,EAAWiE,KAAX,EAAuB;AACrBA,iBAAK,CAACC,cAAN;AACA,iBAAKvB,IAAL,GAAY3C,CAAZ;AACAL,mBAAO,CAACC,GAAR,CAAY,4BAA4BI,CAAxC;AACA,iBAAK+C,mBAAL;AACD;;;iBAEA,iBAAQkB,KAAR,EAAoB;AACnBA,iBAAK,CAACC,cAAN;AACA,iBAAKvB,IAAL,GAAY,KAAKA,IAAL,GAAY,CAAxB;AACAhD,mBAAO,CAACC,GAAR,CAAY,+BAA+B,MAA/B,GAAwC,KAAK+C,IAAzD;AACA,iBAAKI,mBAAL;AACA;;;iBAED,cAAKkB,KAAL,EAAiB;AAChBA,iBAAK,CAACC,cAAN;AACA,iBAAKvB,IAAL,GAAY,KAAKA,IAAL,GAAY,CAAxB;AACAhD,mBAAO,CAACC,GAAR,CAAY,4BAA4B,MAA5B,GAAqC,KAAK+C,IAAtD;AACA,iBAAKI,mBAAL;AACA;;;iBAEF,kBAAUvC,MAAV,EAAuB;AAAA;;AACvB,gBAAImB,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,IAAtC,EAA4C;AAC1C,mBAAK1C,WAAL,CAAiB2B,IAAjB,CAAsB,oBAAtB,EAA4C,IAA5C,EAAkD;AAChDE,wBAAQ,EAAE;AADsC,eAAlD;AAGA,mBAAK9B,KAAL,CAAW6C,aAAX,CAAyB,OAAzB;AACA;AACD;;AACDP,0BAAc,CAACM,OAAf,CAAuBrB,MAAvB,EAA+BA,MAA/B;AACA,iBAAK2D,QAAL;AACA,iBAAKpF,WAAL,CAAiBgD,SAAjB,CAA2BvB,MAA3B,EAAmCf,SAAnC,CACE,UAAAuC,IAAI;AAAA,qBAAI,MAAI,CAACC,cAAL,CAAoBD,IAApB,CAAJ;AAAA,aADN,EAEE,UAAAhB,KAAK;AAAA,qBAAI,MAAI,CAACkB,WAAL,CAAiBlB,KAAjB,CAAJ;AAAA,aAFP;AAID;;;iBAEC,wBAAegB,IAAf,EAA0B;AACxBrC,mBAAO,CAACC,GAAR,CAAYoC,IAAZ;AACA,iBAAK9C,WAAL,CAAiB2B,IAAjB,CAAsB,mCAAtB,EAA4D,IAA5D,EAAkE;AAClEE,sBAAQ,EAAE;AADwD,aAAlE;AAGH;;;iBACD,4BAAmBqD,QAAnB,EAAkC;AAChCzE,mBAAO,CAACC,GAAR,CAAYwE,QAAZ;AACA,iBAAKlF,WAAL,CAAiB2B,IAAjB,CAAsB,wCAAtB,EAAiE,IAAjE,EAAuE;AACvEE,sBAAQ,EAAE;AAD6D,aAAvE;AAGD;;;iBAGC,qBAAYC,KAAZ,EAAwB;AACtB,iBAAKA,KAAL,GAAaA,KAAK,CAACA,KAAN,CAAYF,OAAzB;AACAnB,mBAAO,CAACC,GAAR,CAAYoB,KAAZ;AACA,iBAAK9B,WAAL,CAAiB2B,IAAjB,CAAsB,KAAKG,KAA3B,EAAkC,IAAlC,EAAwC;AACxCD,sBAAQ,EAAE;AAD8B,aAAxC;AAGD;;;iBACD,qBAAY,CACX;;;iBACD,kBAASP,MAAT,EAAiB;AACfb,mBAAO,CAACC,GAAR,CAAY,2BAA2BY,MAAvC;AACA,iBAAKvB,KAAL,CAAW6C,aAAX,CAAyB,gBAAgBtB,MAAzC;AAED;;;iBACD,yBAAgByD,KAAhB,EAAuB;AACrB,iBAAKE,QAAL;AACC;;;iBAED,mBAAW3D,MAAX,EAAwB;AAAA;;AACtB,gBAAImB,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,IAAtC,EAA4C;AAC1C,mBAAK1C,WAAL,CAAiB2B,IAAjB,CAAsB,oBAAtB,EAA4C,IAA5C,EAAkD;AAChDE,wBAAQ,EAAE;AADsC,eAAlD;AAGA,mBAAK9B,KAAL,CAAW6C,aAAX,CAAyB,OAAzB;AACD;;AACD,iBAAK9C,eAAL,CAAqB0C,aAArB,CAAmClB,MAAnC,EAA2Cf,SAA3C,CACE,UAAA2E,QAAQ;AAAA,qBAAI,MAAI,CAACC,kBAAL,CAAwBD,QAAxB,CAAJ;AAAA,aADV,EAEE,UAAApD,KAAK;AAAA,qBAAI,MAAI,CAACkB,WAAL,CAAiBlB,KAAjB,CAAJ;AAAA,aAFP;AAID;;;;;;;yBA1KQmB,oB,EAAoB,yI,EAAA,wI,EAAA,uH,EAAA,yI,EAAA,iJ;AAAA,O;;;cAApBA,oB;AAAoB,wC;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,q2F;AAAA;AAAA;ACbjC;;AACI;;AACI;;AAmBA;;AACA;;AAEA;;AAEI;;;;AAyDJ;;AACJ;;AACA;;AACI;;AAMJ;;AACJ;;;;AA3Fc;;AAAA;;AAoBwC;;AAAA;;AAIpB;;AAAA;;AA4DD;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtFjC;;AACI;;AACJ;;;;;;AAgBgB;;AACI;;AAAO;;AAAW;;AAAkC;;AAAY;;AACpE;;;;;;AACA;;AACI;;AAAO;;AAAW;;AAAwF;;AAAY;;AAC1H;;;;;;AANJ;;AACI;;AAGA;;AAGJ;;;;;;;;AANU;;AAAA;;AAGA;;AAAA;;;;;;AAKN;;AACI;;AAAO;;AAAW;;AAAkC;;AAAY;;AACpE;;;;;;AACA;;AACI;;AAAO;;AAAW;;AAA2C;;AAAY;;AAC7E;;;;;;AANJ;;AACI;;AAGA;;AAGJ;;;;;;;;AANU;;AAAA;;AAGA;;AAAA;;;;;;;;AA1BtB;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAAkB;;AAAS;;AAE/B;;AACA;;AACA;;AACI;;AAAI;;AAAoB;;AAC5B;;AACA;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAClB;;AAQA;;AAQA;;AACI;;AAA+D;;AAAS;;AAC5E;;AACA;;AACI;;AAAW;;AAAgB;;AAC3B;;AAAgE;AAAA;;AAAA;;AAAA;AAAA;;AAAhE;;AACA;;AAAoB;;AAAK;;AAEzB;;AAAW;;AAAoB;;AACnC;;AACA;;AACI;;AACI;;AAAW;;AAAc;;AACzB;;AAA2E;AAAA;;AAAA;;AAAA;AAAA;;AAA3E;;AACA;;AAAW;;AAA4B;;AAE3C;;AACA;;AACI;;AAAW;;AAAgB;;AAC3B;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AAEA;;AAAoB;;AAA2B;;AACnD;;AACJ;;AACA;;AACI;;AASqF;;AAAM;;AAC/F;;AACJ;;AACJ;;AACJ;;;;;;;;;;;;AAtDkB;;AAAA;;AAQA;;AAAA;;AAS2C;;AAAA;;AAAkB;;AAAA;;AAIC;;AAAA;;AAQe;;AAAA;;AAMsE;;AAAA;;AAA1I;;AAeT;;AAAA;;;;UCzDLmC,sB;AASX,wCAAoBC,IAApB,EACoBtF,KADpB,EAEoBuF,WAFpB,EAGoBC,cAHpB,EAGkD;AAAA;;AAH9B,eAAAF,IAAA,GAAAA,IAAA;AACA,eAAAtF,KAAA,GAAAA,KAAA;AACA,eAAAuF,WAAA,GAAAA,WAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AAXb,eAAAzD,KAAA,GAAQ,IAAR;AACA,eAAA0D,SAAA,GAAY,KAAZ;AAEA,eAAAC,IAAA,GAAO;AACZC,iBAAK,EAAE,IADK;AAEZC,uBAAW,EAAE,IAFD;AAGZC,2BAAe,EAAE;AAHL,WAAP;AAUR;;;;iBACD,oBAAW;AAAA;;AACT,iBAAKL,cAAL,CAAoBM,QAApB,CAA6BtF,SAA7B,CAAuC,UAACuF,UAAD,EAA0B;AACjE,qBAAI,CAACC,KAAL,GAAaD,UAAU,CAACE,GAAX,CAAe,OAAf,CAAb;AACAvF,qBAAO,CAACC,GAAR,CAAY,OAAI,CAACqF,KAAjB;AACC,aAHD;AAIC;;;iBACH,qBAAYjE,KAAZ,EAAmB;AACjB,iBAAK0D,SAAL,GAAiB,KAAjB;AACA,iBAAK1D,KAAL,GAAaA,KAAK,CAACA,KAAN,CAAYF,OAAzB;AACAnB,mBAAO,CAACC,GAAR,CAAYoB,KAAZ;AACA,iBAAKwD,WAAL,CAAiB3D,IAAjB,CAAsB,KAAKG,KAA3B,EAAkC,IAAlC,EAAwC;AACxCD,sBAAQ,EAAE;AAD8B,aAAxC;AAGD;;;iBACD,oBAAW;AAAA;;AACT,iBAAK2D,SAAL,GAAiB,IAAjB;AACA,iBAAKH,IAAL,CAAUY,cAAV,CAAyB,KAAKR,IAA9B,EAAoC,KAAKM,KAAzC,EAAgDxF,SAAhD,CACA,UAAAuC,IAAI;AAAA,qBAAI,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAJ;AAAA,aADJ,EAEA,UAAAhB,KAAK;AAAA,qBAAI,OAAI,CAACkB,WAAL,CAAiBlB,KAAjB,CAAJ;AAAA,aAFL;AAID;;;iBACD,wBAAegB,IAAf,EAAqB;AACnB,iBAAK0C,SAAL,GAAiB,KAAjB;AACA,iBAAKF,WAAL,CAAiB3D,IAAjB,CAAsB,6BAAtB,EAAqD,IAArD,EAA2D;AAC3DE,sBAAQ,EAAE;AADiD,aAA3D;AAGA,iBAAK9B,KAAL,CAAW6C,aAAX,CAAyB,QAAzB;AACD;;;;;;;yBA1CYwC,sB,EAAsB,yI,EAAA,uH,EAAA,wI,EAAA,+H;AAAA,O;;;cAAtBA,sB;AAAsB,2C;AAAA,gB;AAAA,e;AAAA,+mD;AAAA;AAAA;ADVnC;;AAGA;;;;AAHM;;AAGyC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEGlCc,kB;;;;;;;iBAEX,mBAAU5C,IAAV,EAA8B6C,UAA9B,EAAkD;AAChD,gBAAI,CAAC7C,IAAD,IAAS,CAAC6C,UAAd,EAA0B;AACxB1F,qBAAO,CAACC,GAAR,CAAY,mBAAmByF,UAA/B;AACA,qBAAO7C,IAAP;AACD,aAHD,MAGO;AACL;AACA,qBAAOA,IAAI,CAAC8C,MAAL,CAAY,UAAA9C,IAAI,EAAI;AACrB,oBAAI6C,UAAU,IAAI7C,IAAI,CAACtC,QAAL,CAAcqF,WAAd,GAA4BC,OAA5B,CAAoCH,UAAU,CAACE,WAAX,EAApC,MAAkE,CAAC,CAArF,EAAwF;AACpF,yBAAO,IAAP;AACH;;AACD,oBAAIF,UAAU,IAAI7C,IAAI,CAACpC,UAAL,CAAgBmF,WAAhB,GAA8BC,OAA9B,CAAsCH,UAAU,CAACE,WAAX,EAAtC,MAAoE,CAAC,CAAvF,EAA0F;AACtF,yBAAO,IAAP;AACH;;AACD,oBAAIF,UAAU,IAAI7C,IAAI,CAACiD,MAAL,CAAYF,WAAZ,GAA0BC,OAA1B,CAAkCH,UAAU,CAACE,WAAX,EAAlC,MAAgE,CAAC,CAAnF,EAAsF;AAClF,yBAAO,IAAP;AACH;;AACD,uBAAO,KAAP;AACJ,eAXK,CAAP;AAaD;AACF;;;;;;;yBAtBUH,kB;AAAkB,O;;;;cAAlBA,kB;AAAkB;;;;;;;;;;;;;;;;;ACJ/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaM,mB;AAQX,qCAA6C1D,IAA7C,EACqB2D,WADrB,EAEqBC,YAFrB,EAGqBC,MAHrB,EAIqB3G,WAJrB,EAKqB4G,IALrB,EAMoBC,SANpB,EAMgE;AAAA;;AANnB,eAAA/D,IAAA,GAAAA,IAAA;AACxB,eAAA2D,WAAA,GAAAA,WAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAA3G,WAAA,GAAAA,WAAA;AACA,eAAA4G,IAAA,GAAAA,IAAA;AACD,eAAAC,SAAA,GAAAA,SAAA;AAbpB,eAAA7F,QAAA,GAAW,IAAI,0DAAJ,CAAgB,KAAK8B,IAAL,CAAU9B,QAA1B,EAAoC,CAAC,0DAAW8F,QAAZ,CAApC,CAAX;AACA,eAAA5F,UAAA,GAAa,IAAI,0DAAJ,CAAgB,KAAK4B,IAAL,CAAU5B,UAA1B,EAAsC,CAAC,0DAAW4F,QAAZ,CAAtC,CAAb;AACA,eAAAzF,KAAA,GAAQ,IAAI,0DAAJ,CAAgB,KAAKyB,IAAL,CAAUzB,KAA1B,EAAiC,CAAC,0DAAWyF,QAAZ,CAAjC,CAAR;AACA,eAAA3F,SAAA,GAAY,IAAI,0DAAJ,CAAgB,KAAK2B,IAAL,CAAU3B,SAA1B,EAAqC,CAAC,0DAAW2F,QAAZ,CAArC,CAAZ;AACA,eAAA7F,WAAA,GAAc,IAAI,0DAAJ,CAAgB,KAAK6B,IAAL,CAAU7B,WAA1B,EAAuC,CAAC,0DAAW6F,QAAZ,CAAvC,CAAd;AAUA,eAAAC,UAAA,GAAyB,IAAI,yEAAJ,EAAzB;AADuE;;;;iBAEvE,oBAAQ,CACP;;;iBAED,yBAAgBhC,KAAhB,EAAuB;AACrB,gBAAIA,KAAK,CAACiC,MAAN,CAAaC,KAAb,CAAmBrG,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,kBAAMQ,KAAK,GAAG2D,KAAK,CAACiC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAd;AACA,mBAAKC,SAAL,GAAiB9F,KAAK,CAAC+F,IAAvB;AACD;AACF;;;iBACD,sBAAa;AAAA;;AAEX,iBAAKJ,UAAL,CAAgB/F,QAAhB,GAA2B,KAAK8B,IAAL,CAAU9B,QAArC;AACA,iBAAK+F,UAAL,CAAgB7F,UAAhB,GAA6B,KAAK4B,IAAL,CAAU5B,UAAvC;AACA,iBAAK6F,UAAL,CAAgB1F,KAAhB,GAAwB,KAAKyB,IAAL,CAAUzB,KAAlC;AACA,iBAAK0F,UAAL,CAAgB5F,SAAhB,GAA4B,KAAK2B,IAAL,CAAU3B,SAAtC;AACA,iBAAK4F,UAAL,CAAgB9F,WAAhB,GAA8B,KAAK6B,IAAL,CAAU7B,WAAxC,CANW,CAOX;;AAEAmG,sBAAU,CAAC,YAAM;AACf,qBAAI,CAACX,WAAL,CAAiBY,UAAjB,CAA4B,OAAI,CAACvE,IAAL,CAAUxB,MAAtC,EAA8C,OAAI,CAACyF,UAAnD,EAA+DxG,SAA/D,CACE,UAAC0B,QAAD,EAAmB;AACjB,oBAAIA,QAAQ,CAACqF,UAAT,KAAwB,GAA5B,EAAiC;AAC/B,yBAAI,CAACT,SAAL,CAAeU,KAAf,CAAqB;AAAEzE,wBAAI,EAAE,OAAI,CAACiE;AAAb,mBAArB;;AACA,yBAAI,CAAC/G,WAAL,CAAiB2B,IAAjB,CAAsBM,QAAQ,CAACA,QAA/B,EAAyC,MAAzC,EAAiD;AAC/CJ,4BAAQ,EAAE;AADqC,mBAAjD;AAGD,iBALD,MAKO;AACL,yBAAI,CAACgF,SAAL,CAAeU,KAAf;;AACA,yBAAI,CAACvH,WAAL,CAAiB2B,IAAjB,CAAsB,8BAAtB,EAAsD,MAAtD,EAA8D;AAC5DE,4BAAQ,EAAE;AADkD,mBAA9D;AAGD;AACF,eAbH,EAcE,UAACC,KAAD,EAAgB;AACd,uBAAI,CAAC+E,SAAL,CAAeU,KAAf;;AACA,uBAAI,CAACvH,WAAL,CAAiB2B,IAAjB,CAAsB,4BAAtB,EAAoD,MAApD,EAA4D;AAC1DE,0BAAQ,EAAE;AADgD,iBAA5D;AAGD,eAnBH;AAqBD,aAtBS,EAsBP,IAtBO,CAAV,CATW,CA+BD;AACX;;;;;;;yBAzDU2E,mB,EAAmB,gEAQT,wEARS,C,EAQM,yI,EAAA,+H,EAAA,uH,EAAA,wI,EAAA,gI,EAAA,sI;AAAA,O;;;cARzBA,mB;AAAmB,wC;AAAA,iB;AAAA,gB;AAAA,oxD;AAAA;AAAA;ACdhC;;AACI;;AACI;;AAAgE;;AAAW;;AAC/E;;AACA;;AACA;;AAEM;;AACI;;AAAW;;AAAS;;AACpB;;AAAuG;AAAA;AAAA;;AAAvG;;AACA;;AAAyC;;AAAI;;AACjD;;AAEA;;AACI;;AAAY;;AAAM;;AAClB;;AAAmF;AAAA;AAAA;;AAAnF;;AACA;;AAAyC;;AAAM;;AACnD;;AAEA;;AACI;;AAAY;;AAAK;;AACjB;;AAA8D;AAAA;AAAA;;AAA9D;;AACA;;AACI;;AAAA;;AACE;;AACJ;;AACF;;AACJ;;AAEA;;AAAA;;AACI;;AAAW;;AAAa;;AACxB;;AAAyE;AAAA;AAAA;;AAAzE;;AACA;;AAAyC;;AAAI;;AACjD;;AAEA;;AACI;;AAAW;;AAAW;;AACtB;;AAA6E;AAAA;AAAA;;AAA7E;;AACA;;AAAyC;;AAAI;;AACjD;;AAIN;;AAEA;;AACI;;AAAgE;AAAA,qBAAS,IAAAa,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAQ;;AACnG;;AACJ;;;;AAvC0F;;AAAA,kGAAwB,SAAxB,EAAwB,iBAAxB;;AAMO;;AAAA,qGAA6B,aAA7B,EAA6B,cAA7B;;AAMrB;;AAAA,gGAAwB,aAAxB,EAAwB,SAAxB;;AAUW;;AAAA,oGAA4B,aAA5B,EAA4B,aAA5B;;AAMI;;AAAA,sGAA8B,aAA9B,EAA8B,eAA9B;;AASnD;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BxB;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AAdZ;;AACI;;AAEI;;AAAa;AAAA;;AAAA;;AAAA;AAAA;;AACT;;AACJ;;AAEA;;AAEI;;AAGA;;AASJ;;AACJ;;AACJ;;;;;;AApBqB;;AAAA;;AAMH;;AAAA;;AAGA;;AAAA;;;;;;AA+BlB;;AACI;;AACA;;AACJ;;;;UC5CSG,kB;AAaX,oCACUC,YADV,EAC6B;AAAA;;AAAnB,eAAAA,YAAA,GAAAA,YAAA;AAVV,eAAAC,MAAA,GAAS,IAAT;AACO,eAAAC,OAAA,GAAU,KAAV;AAEP,eAAAC,MAAA,GAAS,KAAT;AACA,eAAAC,QAAA,GAAW,KAAX;AACA,eAAAC,OAAA,GAAU,KAAV;AAEA,eAAAC,OAAA,GAAU,KAAV;AAIK;;;;iBACL,yBAAgBC,MAAhB,EAA6B;AAC3B,iBAAKL,OAAL,GAAeK,MAAf;AACAvH,mBAAO,CAACC,GAAR,CAAY,GAAZ,EAAiB,KAAKiH,OAAtB;AACD;;;iBAED,oBAAQ;AACN,iBAAKM,IAAL,GAAYxF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAZ;AACA,iBAAKwF,QAAL,CAAc,WAAd;AACAzH,mBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAKuH,IAAvC;;AACA,gBAAI,KAAKA,IAAL,KAAc,OAAlB,EAA2B;AAC1B,mBAAKH,OAAL,GAAe,IAAf;AACA,mBAAKC,OAAL,GAAe,IAAf;AACD;;AACA,gBAAI,KAAKE,IAAL,KAAc,QAAlB,EAA4B;AAC3B,mBAAKJ,QAAL,GAAgB,IAAhB;AACA,mBAAKE,OAAL,GAAe,IAAf;AACD;;AACA,gBAAI,KAAKE,IAAL,KAAc,MAAlB,EAA0B;AACzB,mBAAKL,MAAL,GAAc,IAAd;AACA,mBAAKG,OAAL,GAAe,IAAf;AACAtH,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKkH,MAA7B;AACD;AACD;;;iBACM,kBAAUO,SAAV,EAA6B;AAClC,iBAAKV,YAAL,CAAkBS,QAAlB,CAA4BC,SAA5B;AACC;;;;;;;yBAzCQX,kB,EAAkB,gI;AAAA,O;;;cAAlBA,kB;AAAkB,sC;AAAA,gB;AAAA,e;AAAA,qY;AAAA;AAAA;ADR/B;;AACI;;AAA8B;AAAA,qBAAe,IAAAY,eAAA,QAAf;AAAsC,aAAtC;;AAC9B;;AAEJ;;AACA;;AACI;;AA2CA;;AAKJ;;AAEA;;;;AAlD8B;;AAAA;;AA2CpB;;AAAA;;;;;;;;;;;;;;;;;;;;;AEjDV;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMC,WAAW,GAAG;AACzBC,kBAAU,EAAE,IADa;AAIzB;AACA;AACA;AACAC,gBAAQ,EAAE,uBAPe;AAQzBC,eAAO,EAAE,uBARgB;AASzBC,sBAAc,EAAE,QATS;AAYzB;AACA;AACA;AACA;AACA;AACA;AAGAC,sBAAc,EAAE,QApBS;AAqBzBC,2BAAmB,EAAE,wBArBI;AAsBzBC,eAAO,EAAE,eAtBgB;AAuBzBC,yBAAiB,EAAE,iBAvBM;AAwBzBC,cAAM,EAAG,gBAxBgB;AA0BzBC,gBAAQ,EAAE,OA1Be;AA2BzBC,kBAAU,EAAE,OA3Ba;AA4BzBC,gBAAQ,EAAE,OA5Be;AA6BzBC,kBAAU,EAAE,OA7Ba;AA8BzBC,oBAAY,EAAE,iBA9BW;AA+BzBC,eAAO,EAAE,wBA/BgB;AAgCzBC,cAAM,EAAE,uBAhCiB;AAiCzBC,iBAAS,EAAE,eAjCc;AAkCzBC,oBAAY,EAAE,cAlCW;AAmCzBC,iBAAS,EAAE,sBAnCc;AAqCzBC,gBAAQ,EAAE,wBArCe;AAsCzBC,wBAAgB,EAAE,kBAtCO;AAuCzBC,yBAAiB,EAAE,cAvCM;AAwCzBC,kBAAU,EAAE,OAxCa;AAyCzBC,4BAAoB,EAAE,gBAzCG;AA0CzBC,0BAAkB,EAAE,QA1CK;AA2CzBC,eAAO,EAAE,iCA3CgB;AA4CzBC,2BAAmB,EAAE,8BA5CI;AA6CzBC,0BAAkB,EAAE,kDA7CK;AA8CzBC,0BAAkB,EAAE,kDA9CK;AA+CzBC,8BAAsB,EAAE,oCA/CC;AAgDzBC,2BAAmB,EAAE,iCAhDI;AAiDzBC,6BAAqB,EAAE,gBAjDE;AAkDzBC,sBAAc,EAAE,wBAlDS;AAmDzBC,mBAAW,EAAE,cAnDY;AAoDzBC,mBAAW,EAAE,kCApDY;AAqDzBC,oBAAY,EAAE,4BArDW;AAsDzBC,mBAAW,EAAE,8BAtDY;AAwDzBC,kBAAU,EAAE,+BAxDa;AA0DzBC,gBAAQ,EAAE,wBA1De;AA2DzBC,mBAAW,EAAE,eA3DY;AA4DzBC,kBAAU,EAAE,eA5Da;AA6DzBC,uBAAe,EAAE,aA7DQ;AA8DzBC,qBAAa,EAAE,aA9DU;AA+DzBC,qBAAa,EAAE,aA/DU;AAgEzBC,qBAAa,EAAE,uBAhEU;AAiEzBC,0BAAkB,EAAE,4BAjEK;AAkEzBC,yBAAiB,EAAE,8BAlEM;AAmEzBC,yBAAiB,EAAE,6BAnEM;AAoEzBC,2BAAmB,EAAE,kBApEI;AAsEzBC,oBAAY,EAAE,uCAtEW;AAuEzBC,oBAAY,EAAE,oCAvEW;AAwEzBC,sBAAc,EAAE,qCAxES;AAyEzBC,uBAAe,EAAE;AAzEQ,OAApB;;;;;;;;;;;;;;;;ACHP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,W;AAEX,6BAAoB/E,IAApB,EAAoC;AAAA;;AAAhB,eAAAA,IAAA,GAAAA,IAAA;AADX,eAAAgF,OAAA,GAAU,yEAAYrD,QAAtB;AAGD,eAAAsD,UAAA,GAAa;AACnBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,8BAAgB;AAAlB,aAAhB;AADU,WAAb;AAFkC;;;;iBAKpC,gBAAOhJ,IAAP,EAAkB;AACtB,mBAAO,KAAK8D,IAAL,CAAUmF,IAAV,WAAkB,KAAKH,OAAvB,oBAA+C9I,IAA/C,CAAP;AACD;;;iBACM,gBAAOA,IAAP,EAAkB;AACvB,mBAAO,KAAK8D,IAAL,CAAUmF,IAAV,WAAkB,KAAKH,OAAvB,kBAA6C9I,IAA7C,CAAP;AACD;;;iBACD,2BAAkBiD,KAAlB,EAAyB;AACvB,mBAAO,KAAKa,IAAL,CAAUmF,IAAV,WAAkB,KAAKH,OAAvB,oBAA+C7F,KAA/C,CAAP;AACD;;;iBACD,wBAAejD,IAAf,EAAqB;AACnB,mBAAO,KAAK8D,IAAL,CAAUmF,IAAV,WAAkB,KAAKH,OAAvB,2BAAsD9I,IAAtD,CAAP;AACD;;;iBACM,wBAAemD,eAAf,EAAoCF,KAApC,EAAiD;AACtD,mBAAO,KAAKa,IAAL,CAAUoF,GAAV,WAAiB,KAAKJ,OAAtB,0BAA6C7F,KAA7C,GACLE,eADK,CAAP;AAGD;;;iBACM,qBAAS;AACd,mBAAO,KAAKW,IAAL,CAAUZ,GAAV,WAAiB,KAAK4F,OAAtB,cAAiC,yEAAYvB,qBAA7C,GAAsE;AAACyB,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aAAtE,CAAP;AACD;;;iBACM,mBAAUkG,OAAV,EAAwB;AAC7B,mBAAO,KAAKrF,IAAL,CACNmF,IADM,WACE,yEAAYxD,QADd,cAC0B,yEAAYgC,WADtC,GACqD0B,OADrD,EAC8D;AAACH,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aAD9D,CAAP;AAED;;;iBACM,sBAAakG,OAAb,EAA2B;AAChC,mBAAO,KAAKrF,IAAL,CACNoF,GADM,WACC,yEAAYzD,QADb,cACyB,yEAAY+B,cADrC,GACuD2B,OADvD,EACgE;AAACH,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aADhE,CAAP;AAEA;;;;;;;yBAlCS4F,W,EAAW,uH;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNd;;AACE;;AAEE;;AAAuD;AAAA;;AAAA;;AAAA;AAAA;;AAErD;;AAA2B;;AAAK;;AAChC;;AACF;;AAAwD;AAAA;;AAAA;;AAAA;AAAA;;AAGrD;;AAA2B;;AAAM;;AACjC;;AAGA;;AAA6D;AAAA;;AAAA;;AAAA;AAAA;;AAG1D;;AAAyB;;AAAM;;AAChC;;AAMT;;AACA;;;;;;;;AACA;;AACI;;AACI;;AAA6C;AAAA;;AAAA;;AAAA;AAAA;;AAC7C;;AAAK;;AACP;;AACA;;AACE;;AAA8C;AAAA;;AAAA;;AAAA;AAAA;;AAC9C;;AAAK;;AACP;;AACN;;;;UCrBaO,mB;AAMX,qCAAoBvF,MAApB,EAA0C5G,KAA1C,EAA8D;AAAA;;AAA1C,eAAA4G,MAAA,GAAAA,MAAA;AAAsB,eAAA5G,KAAA,GAAAA,KAAA;AAJ1C,eAAA8H,QAAA,GAAW,KAAX;AACA,eAAAC,OAAA,GAAQ,KAAR;AAGoE;;;;iBAKpE,oBAAW;AACV,iBAAKG,IAAL,GAAWxF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;AACAjC,mBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiC,KAAKuH,IAAtC;;AACA,gBAAI,KAAKA,IAAL,KAAc,OAAlB,EACA;AACE,mBAAKH,OAAL,GAAa,IAAb;AACD;;AACD,gBAAI,KAAKG,IAAL,KAAc,QAAlB,EACA;AACE,mBAAKJ,QAAL,GAAc,IAAd;AACD;AACD;;;iBACD,uBAAW;AAET,iBAAKlB,MAAL,CAAYwF,QAAZ,CAAqB,CAAC,OAAD,CAArB,EAA+B;AAACC,yBAAW,EAAC;AAAC9I,oBAAI,EAAC;AAAN;AAAb,aAA/B;AACD;;;iBAED,kBAAM;AAEJ,iBAAKqD,MAAL,CAAYwF,QAAZ,CAAqB,CAAC,OAAD,CAArB,EAA+B;AAACC,yBAAW,EAAC;AAAC9I,oBAAI,EAAC;AAAN;AAAb,aAA/B;AACD;;;iBAED,mBAAO;AAEL,iBAAKqD,MAAL,CAAYwF,QAAZ,CAAqB,CAAC,OAAD,CAArB,EAA+B;AAACC,yBAAW,EAAC;AAAC9I,oBAAI,EAAC;AAAN;AAAb,aAA/B;AACD;;;iBAED,iBAAK;AAEH,iBAAKqD,MAAL,CAAYwF,QAAZ,CAAqB,CAAC,OAAD,CAArB,EAA+B;AAACC,yBAAW,EAAC;AAAC9I,oBAAI,EAAC;AAAN;AAAb,aAA/B;AACD;;;iBAGD,sBAAU;AAEN,iBAAKqD,MAAL,CAAYwF,QAAZ,CAAqB,CAAC,OAAD,CAArB,EAA+B;AAACC,yBAAW,EAAC;AAAC9I,oBAAI,EAAC;AAAN;AAAb,aAA/B;AACH;;;iBAED,uBAAW;AAEb,iBAAKqD,MAAL,CAAYwF,QAAZ,CAAqB,CAAC,OAAD,CAArB,EAA+B;AAACC,yBAAW,EAAC;AAAC9I,oBAAI,EAAC;AAAN;AAAb,aAA/B;AACG;;;;;;;yBApDU4I,mB,EAAmB,uH,EAAA,+H;AAAA,O;;;cAAnBA,mB;AAAmB,uC;AAAA;AAAA;;;;;;;;;;;;;;;ADdhC;;AA0BA;;;;AA1BwB;;AA0BA;;AAAA;;;;;;;;;;;;;;;;;;;;;AEzBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAE;;AACE;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAEnC;;AAAiC;;AAAI;;AACvC;;AACJ;;;;;;AAgCE;;AACE;;AACA;;AACA;;AAA8D;;AAAe;;AAC7E;;AACA;;;;;;AAFU;;AAAA;;;;;;AAIZ;;AACE;;AAA6C;;AAAI;;AACzC;;AACM;;AAAuD;;AAAiB;;AAC7E;;AACL;;;;;;AAFoB;;AAAA;;;;;;AAkBJ;;AACI;;AAAI;;AAAU;;AAClB;;;;;;AADQ;;AAAA;;;;;;;;;;;;AAER;;AACI;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAAqH;;AAC7H;;AACJ;;AACJ;;;;AAH0F;;AAAA;;;;;;;;;;AAI1F;;AACI;;AACI;;AAA0G;;AACzG;;AACL;;AACJ;;;;AAHgB;;AAAA;;;;UDhE3BG,gB;AACX,kCAAqBnJ,OAArB,EACqB6C,KADrB,EAEqBhG,KAFrB,EAGqBF,WAHrB,EAIqBC,eAJrB,EAKqBE,WALrB,EAK6C;AAAA;;AALxB,eAAAkD,OAAA,GAAAA,OAAA;AACA,eAAA6C,KAAA,GAAAA,KAAA;AACA,eAAAhG,KAAA,GAAAA,KAAA;AACA,eAAAF,WAAA,GAAAA,WAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AACA,eAAAE,WAAA,GAAAA,WAAA;AAGX,eAAAsM,WAAA,GAAc,IAAI,0DAAJ,EAAd;AAGV,eAAA5E,MAAA,GAAS,KAAT;AAOA,eAAAE,MAAA,GAAS,KAAT;AACA,eAAAC,QAAA,GAAW,KAAX;AACA,eAAAC,OAAA,GAAU,KAAV;AAKA,eAAAyE,QAAA,GAAW,KAAX;AACA,eAAAxE,OAAA,GAAU,KAAV;AApBO;;;;iBA2BP,kBAASyE,KAAT,EAAqB;AACnB/L,mBAAO,CAACC,GAAR,CAAY,UAAU8L,KAAtB;AACA,iBAAKF,WAAL,CAAiBG,IAAjB,CAAsBD,KAAtB;AACA,iBAAK9E,MAAL,GAAc,CAAC,KAAKA,MAApB;AACD;;;iBAED,oBAAW;AAAA;;AACT,iBAAK5H,eAAL,CAAqB4M,YAArB,CAAkCnM,SAAlC,CAA4C,YAAM;AAEhD,qBAAI,CAAEkB,gBAAN;AACD,aAHD;AAMA,iBAAMA,gBAAN;AAEA,iBAAK5B,WAAL,CAAiB6M,YAAjB,CAA8BnM,SAA9B,CAAwC,YAAM;AAC5C,qBAAI,CAACoM,gBAAL;AAED,aAHD;AAKA,iBAAKA,gBAAL;AACA,iBAAKxF,IAAL,GAAY1E,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAZ;AACA,iBAAKuF,IAAL,GAAYxF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAZ;AACAjC,mBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAKuH,IAAvC;;AACA,gBAAI,KAAKA,IAAL,KAAc,OAAlB,EAA2B;AAC1B,mBAAKH,OAAL,GAAe,IAAf;AACA,mBAAKC,OAAL,GAAe,IAAf;AACD;;AACA,gBAAI,KAAKE,IAAL,KAAc,QAAlB,EAA4B;AAC3B,mBAAKJ,QAAL,GAAgB,IAAhB;AACA,mBAAKE,OAAL,GAAe,IAAf;AACD;;AACA,gBAAI,KAAKE,IAAL,KAAc,MAAlB,EAA0B;AACzB,mBAAKL,MAAL,GAAc,IAAd;AACA,mBAAKG,OAAL,GAAe,IAAf;AACAtH,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKkH,MAA7B;AACD;AACD;;;iBAED,4BAAmB;AAAA;;AACjB,iBAAK/H,WAAL,CAAiB8M,gBAAjB,GAAoCpM,SAApC,CAA8C,UAAC0B,QAAD,EAAmB;AAC/D,qBAAI,CAACrB,MAAL,GAAcqB,QAAQ,CAACtB,GAAvB;AACAF,qBAAO,CAACC,GAAR,CAAY,+BAA+BuB,QAAQ,CAACtB,GAApD;AACA,aAHF;AAID;;;iBACD,sBAAa;AACX;AACA,iBAAKuC,OAAL,CAAa0J,iBAAb,CAA+B,KAAK5L,QAApC;AACD;;;iBACD,gBAAO+D,KAAP,EAA0B;AACxBtE,mBAAO,CAACC,GAAR,CAAY,yBAAZ;AACAqE,iBAAK,CAACC,cAAN;AACA,iBAAKe,KAAL,CAAW8G,MAAX;AACA,iBAAK9G,KAAL,CAAW+G,OAAX,CAAmB,KAAnB;AACA,iBAAK/M,KAAL,CAAW6C,aAAX,CAAyB,QAAzB;AACD;;;iBACD,yBAAgBmC,KAAhB,EAAuB;AACvB,iBAAKE,QAAL;AACC;;;iBACD,4BAAmB;AAAA;;AACjB,iBAAKnF,eAAL,CAAqB2B,gBAArB,GAAwClB,SAAxC,CAAkD,UAAC0B,QAAD,EAAmB;AACnE,qBAAI,CAAC8K,cAAL,GAAsB9K,QAAQ,CAACtB,GAA/B;AACAF,qBAAO,CAACC,GAAR,CAAY,8BAA8BuB,QAAQ,CAACtB,GAAnD;AACA,aAHF;AAID;;;;;;;yBAlGU0L,gB,EAAgB,yI,EAAA,2I,EAAA,uH,EAAA,yI,EAAA,iJ,EAAA,wI;AAAA,O;;;cAAhBA,gB;AAAgB,oC;AAAA;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,uoE;AAAA;AAAA;ACb7B;;AACE;;AAOE;;AAEA;;AACI;;AACI;;AACA;;AAAyC;;AAA2B;;AAE5E;;AACF;;AAGA;;AAOA;;AACE;;AACG;;AAAM;;AAEX;;AACE;;AAIE;AAAA;AAAA,eAAsB,OAAtB,EAAsB;AAAA,qBACb,IAAAvH,UAAA,EADa;AACD,aADrB;;AAJF;;AAMF;;AACA;;AAOA;;AAOM;;AAEA;;AACI;;AAEN;;AAAyC;;AAAc;;AACzD;;AACQ;;AACI;;AAEI;;AACI;;AACI;;AACJ;;AACA;;AAGA;;AAMA;;AAMJ;;AACJ;;AACJ;;AACJ;;AACR;;;;;;AApFS;;AAAA;;AAW2E;;AAAA;;AAuB9E;;AAAA;;AAGmC;;AAAA;;AAOL;;AAAA;;AAUA;;AAAA;;AAWe;;AAAA;;AAGD;;AAAA;;AAMA;;AAAA;;;;;;;;;;;;;;;;;;;;;ACpElD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACHQ;;AACI;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AAA0C;;AAAG;;AAC5F;;;;;;AACA;;AAAqE;;AAAkE;;;;;;AAanH;;AAAkD;;AAAY;;;;;;AAK9D;;AAAoD;;AAAS;;AAA8B;;AAAiB;;AAAS;;;;;;AAA1B;;AAAA;;;;;;AAC3F;;AAAsD;;AAAS;;AAA6B;;AAAiB;;AAAS;;;;;;AAA1B;;AAAA;;;;;;AAC5F;;AAAsD;;AAAS;;AAA2B;;AAAiB;;AAAS;;;;;;AAA1B;;AAAA;;;;;;;;AActF;;AACI;;AAA8J;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1J;;AACJ;;AACJ;;;;;;;;AAnCpB;;AACI;;AAEI;;AACI;;AAAuC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACnC;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAAsB;;AAA+B;;AACrD;;AAAwB;;AAAmC;;AAC3D;;AAAmB;;AAAoB;;AACvC;;AAAuB;;AAAkC;;AACzD;;AACA;;AACA;;AACA;;AAAyB;;AAAoC;;AAE7D;;AACI;;AACI;;AAAwJ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpJ;;AACJ;;AACJ;;AACA;;AACI;;AAA8J;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1J;;AACJ;;AACJ;;AACA;;AAKJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAvCqF;;AAAA;;AAIhE;;AAAA;;AAKsB;;AAAA;;AACL;;AAAA;;AACE;;AAAA;;AACL;;AAAA;;AACI;;AAAA;;AACF;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACI;;AAAA;;AAaY;;AAAA;;;;;;AAzCjE;;AAEA;;AACI;;AACI;;AAGA;;AAEA;;AACI;;;;AAyCJ;;AACJ;;AACJ;;AACA;;;;;;AAlDsG;;AAAA;;AAGhD;;AAAA;;AAGlB;;AAAA;;;;;;AA8CpC;;AACI;;AACJ;;;;UDzCakI,e;AACX,iCAAoB9J,OAApB,EAAmD+J,MAAnD,EACoBjN,WADpB,EACqDkN,MADrD,EAC0E;AAAA;;AADtD,eAAAhK,OAAA,GAAAA,OAAA;AAA+B,eAAA+J,MAAA,GAAAA,MAAA;AAC/B,eAAAjN,WAAA,GAAAA,WAAA;AAAiC,eAAAkN,MAAA,GAAAA,MAAA;AAIrD,eAAA/F,IAAA,GAAe,IAAf;AAIA,eAAAgG,WAAA,GAAoB,KAApB;AACA,eAAAC,UAAA,GAAmB,KAAnB;AAPK;;;;iBAWL,oBAAQ;AAAA;;AACN,iBAAKlK,OAAL,CAAawJ,YAAb,CAA0BnM,SAA1B,CAAoC,YAAM;AACxC,qBAAI,CAAC2M,MAAL,CAAYd,WAAZ,CAAwB7L,SAAxB,CACD,UAAA8M,MAAM,EAAE;AACN,uBAAI,CAACC,KAAL,GAAWD,MAAM,CAAC,MAAD,CAAjB;;AACD,oBAAI,OAAI,CAACC,KAAL,IAAc,YAAlB,EACA;AACA,yBAAI,CAACH,WAAL,GAAiB,IAAjB;AACA,yBAAI,CAACC,UAAL,GAAgB,KAAhB;AAEC;;AACD,oBAAG,OAAI,CAACE,KAAL,IAAc,OAAjB,EACA;AACE,yBAAI,CAACH,WAAL,GAAiB,KAAjB;AACA,yBAAI,CAACC,UAAL,GAAgB,IAAhB;AACD;AACF,eAdC;;AAeC,qBAAI,CAACG,WAAL;AACF,aAjBD;;AAmBA,iBAAKL,MAAL,CAAYd,WAAZ,CAAwB7L,SAAxB,CACC,UAAA8M,MAAM,EAAE;AACN,qBAAI,CAACC,KAAL,GAAWD,MAAM,CAAC,MAAD,CAAjB;;AACD,kBAAI,OAAI,CAACC,KAAL,IAAc,YAAlB,EACA;AACA,uBAAI,CAACH,WAAL,GAAiB,IAAjB;AACA,uBAAI,CAACC,UAAL,GAAgB,KAAhB;AAEC;;AACD,kBAAG,OAAI,CAACE,KAAL,IAAc,OAAjB,EACA;AACE,uBAAI,CAACH,WAAL,GAAiB,KAAjB;AACA,uBAAI,CAACC,UAAL,GAAgB,IAAhB;AACD;AACF,aAdD;;AAgBA,iBAAKI,WAAL;AACA,iBAAKD,WAAL;AACA,iBAAKzJ,iBAAL;AACD;;;iBAED,uBAAc;AAAA;;AACZ,iBAAKqJ,WAAL,GAAiB,IAAjB;AACA,iBAAKC,UAAL,GAAgB,KAAhB;AACA3M,mBAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,iBAAKwC,OAAL,CAAaqK,WAAb,GAA2BhN,SAA3B,CAAsC,UAAA0B,QAAQ,EAAI;AAChD,qBAAI,CAAChC,KAAL,GAAagC,QAAQ,CAACtB,GAAtB;AACAF,qBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,OAAI,CAACT,KAA/B;AACD,aAHD;AAKD;;;iBAED,oBAAWqB,MAAX,EAAmB;AAAA;;AACjB,iBAAK4B,OAAL,CAAa8F,UAAb,CAAwB1H,MAAxB,EAAgCf,SAAhC,CAA0C,UAACqB,OAAD,EAAa;AACrD,kBAAIA,OAAO,CAAC0F,UAAR,KAAuB,GAA3B,EAAgC;AAC9B,uBAAI,CAACtH,WAAL,CAAiB2B,IAAjB,CAAsB,2BAAtB,EAAmD,IAAnD,EAAyD;AACvDE,0BAAQ,EAAE;AAD6C,iBAAzD;AAGH,eAJC,MAIK;AACL,uBAAI,CAAC7B,WAAL,CAAiB2B,IAAjB,CAAsB,wBAAtB,EAAgD,IAAhD,EAAsD;AAAEE,0BAAQ,EAAE;AAAZ,iBAAtD;AACD;AACA,aARD;AASD;;;iBAGD,yBAAgBP,MAAhB,EAAsB;AACpB,gBAAMuF,SAAS,GAAG,KAAKoG,MAAL,CAAYtL,IAAZ,CAAiB,+GAAjB,EAA2C;AAC3D8L,mBAAK,EAAE,OADoD;AAE3DC,wBAAU,EAAE,yBAF+C;AAG3D5K,kBAAI,EAAE;AAAExB,sBAAM,EAANA;AAAF;AAHqD,aAA3C,CAAlB;AAKAuF,qBAAS,CAAC8G,WAAV,GAAwBpN,SAAxB,CAAkC,UAACqN,MAAD,EAAY;AAC5CnN,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aAFD;AAGD;;;iBAED,kBAAS4C,IAAT,EAAkB;AAChB,gBAAMuD,SAAS,GAAG,KAAKoG,MAAL,CAAYtL,IAAZ,CAAiB,sFAAjB,EAAsC;AACtD8L,mBAAK,EAAE,OAD+C;AAEtDI,oBAAM,EAAE,MAF8C;AAGtDH,wBAAU,EAAE,yBAH0C;AAItD5K,kBAAI,EAAE;AACJ9B,wBAAQ,EAAEsC,IAAI,CAACtC,QADX;AAEJE,0BAAU,EAAEoC,IAAI,CAACpC,UAFb;AAGJG,qBAAK,EAAEiC,IAAI,CAACjC,KAHR;AAIJF,yBAAS,EAAEmC,IAAI,CAACnC,SAJZ;AAKJF,2BAAW,EAAEqC,IAAI,CAACrC,WALd;AAMJK,sBAAM,EAAEgC,IAAI,CAAChC;AANT;AAJgD,aAAtC,CAAlB;AAaAuF,qBAAS,CAAC8G,WAAV,GAAwBpN,SAAxB,CAAkC,UAACqN,MAAD,EAAY;AAC5CnN,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aAFD;AAGD;;;iBAED,mBAAU;AACR,gBAAMmG,SAAS,GAAG,KAAKoG,MAAL,CAAYtL,IAAZ,CAAiB,2EAAjB,EAAmC;AACnD8L,mBAAK,EAAE,OAD4C;AAEnDC,wBAAU,EAAE;AAFuC,aAAnC,CAAlB;AAIA7G,qBAAS,CAAC8G,WAAV,GAAwBpN,SAAxB,CAAkC,UAACqN,MAAD,EAAY;AAC5CnN,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aAFD;AAGD;;;iBAED,oBAAWY,MAAX,EAAwB;AAAA;;AACxB,iBAAKiF,MAAL,GAAc,QAAd;AACA,iBAAKrD,OAAL,CAAagG,UAAb,CAAwB5H,MAAxB,EAAgC,KAAKiF,MAArC,EAA6ChG,SAA7C,CAAuD,UAACqB,OAAD,EAAa;AAChE,kBAAIA,OAAO,CAAC0F,UAAR,KAAuB,GAA3B,EAAgC;AAC9B,uBAAI,CAACtH,WAAL,CAAiB2B,IAAjB,CAAsB,2BAAtB,EAAmD,IAAnD,EAAyD;AACvDE,0BAAQ,EAAE;AAD6C,iBAAzD;AAGH,eAJC,MAIK;AACL,uBAAI,CAAC7B,WAAL,CAAiB2B,IAAjB,CAAsB,wBAAtB,EAAgD,IAAhD,EAAsD;AAAEE,0BAAQ,EAAE;AAAZ,iBAAtD;AACD;AACA,aARH;AASC;;;iBAED,uBAAc;AACb,iBAAKsF,IAAL,GAAY1E,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAZ;AACA;;;iBAED,6BAAoB;AAAA;;AAClB,iBAAKQ,OAAL,CAAaY,iBAAb,GAAiCvD,SAAjC,CAA2C,UAACqB,OAAD,EAAa;AACtDnB,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BkB,OAAO,CAAC3B,KAAnC;AACA,qBAAI,CAAC6E,UAAL,GAAkBlD,OAAO,CAAC3B,KAA1B;AACD,aAHD;AAID;;;;;;;yBA9IU+M,e,EAAe,yI,EAAA,mI,EAAA,wI,EAAA,+H;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA,u3D;AAAA;AAAA;ACjB5B;;AAwDA;;;;AAxDM;;AAwDA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDF;;AACI;;AACJ;;;;;;;;;;;;;;;;AAeI;;AAAgF;AAAA;;AAAA;;AAAA;AAAA;;AAE5E;;AACI;;AAAW;;AAAgB;;AAC3B;;AAA8F;AAAA;;AAAA;;AAAA;AAAA;;AAA9F;;AACA;;AAA4C;;AAAK;;AAErD;;AACA;;AACI;;AAAW;;AAAc;;AACzB;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAA5C;;AACA;;AAAkC;AAAA;;AAAA;;AAAA;AAAA;;AACxC;;AAAkC;;AAA0C;;AACtE;;AACJ;;AACA;;AAAkF;;AAAiB;;AACnG;;AAA6E;;AAAkB;;AAC/F;;AACA;;AACI;;AAAI;;AAAQ;;AACZ;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAC3C;;AAAsE;;AAAK;;AAAoB;;AAC/F;;AAAyE;;AAAO;;AAAoB;;AACpG;;AAAwE;;AAAM;;AAClF;;AACJ;;AACA;;AACA;;AACI;;AASwD;;AAAK;;AACjE;;AACJ;;;;;;;;AAnCsG;;AAAA;;AAMlD;;AAAA,oGAA2B,MAA3B,EAA2B,iCAA3B;;AACa;;AAAA,mGAAmC,cAAnC,EAAmC,WAAnC;;AAC7B;;AAAA;;AAGa;;AAAA;;AACE;;AAAA;;AAII;;AAAA;;AAiBjD;;AAAA;;;;;;AAnDV;;AAEI;;AAEI;;AACI;;AACI;;AACJ;;AACA;;AAAkB;;AAAS;;AAC/B;;AACA;;AAAI;;AAAO;;AACX;;AAAG;;AAA0B;;AACjC;;AACA;;AAA+D;;AAAS;;AACxE;;AAwCJ;;;;;;AAzCiD;;AAAA;;AAAkB;;AAAA;;AAC0C;;AAAA;;;;UCNpGc,uB;AAYX,yCAAoBzI,IAApB,EACoBU,KADpB,EAEoBhG,KAFpB,EAGoBC,WAHpB,EAIoByH,YAJpB,EAIuC;AAAA;;AAJnB,eAAApC,IAAA,GAAAA,IAAA;AACA,eAAAU,KAAA,GAAAA,KAAA;AACA,eAAAhG,KAAA,GAAAA,KAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAyH,YAAA,GAAAA,YAAA;AAfb,eAAA3F,KAAA,GAAQ,IAAR;AACA,eAAAiM,IAAA,GAAO,IAAP;AACA,eAAAC,UAAA,GAAa,KAAb;AACA,eAAAC,UAAA,GAAa,IAAb;AACA,eAAAzI,SAAA,GAAY,KAAZ;AACA,eAAAC,IAAA,GAAO;AACZC,iBAAK,EAAE,IADK;AAEZwI,oBAAQ,EAAE,IAFE;AAGZjG,gBAAI,EAAE;AAHM,WAAP;AAYH,eAAKC,QAAL,CAAc,mBAAd;AAEH;;;;iBACD,qBAAYpG,KAAZ,EAAoC;AAClC,iBAAK0D,SAAL,GAAiB,KAAjB;AACA,iBAAK1D,KAAL,GAAaA,KAAK,CAACA,KAAN,CAAYF,OAAzB;;AACA,gBAAKE,KAAK,CAACA,KAAN,CAAYyE,MAAZ,KAAuB,CAA5B,EAA+B;AAC7B9F,qBAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;;AACD,iBAAKV,WAAL,CAAiB2B,IAAjB,CAAsB,KAAKG,KAA3B,EAAkC,IAAlC,EAAwC;AACtCD,sBAAQ,EAAE;AAD4B,aAAxC;AAGApB,mBAAO,CAACC,GAAR,CAAYoB,KAAZ;AACD;;;iBACD,oBAAW,CACV;;;iBACD,oBAAW;AAAA;;AACT,iBAAK0D,SAAL,GAAiB,IAAjB;AACA,iBAAKH,IAAL,CAAU8I,MAAV,CAAiB,KAAK1I,IAAtB,EAA4BlF,SAA5B,CACC,UAAAuC,IAAI;AAAA,qBAAI,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAJ;AAAA,aADL,EAEC,UAAAhB,KAAK;AAAA,qBAAI,OAAI,CAACkB,WAAL,CAAiBlB,KAAjB,CAAJ;AAAA,aAFN;AAID;;;iBAED,wBAAegB,IAAf,EAAqB;AACnB,iBAAKiD,KAAL,CAAWqI,MAAX,CAAkBtL,IAAlB;AACArC,mBAAO,CAACC,GAAR,CAAYoC,IAAZ;AACA,iBAAK0C,SAAL,GAAiB,KAAjB;AACA,iBAAKO,KAAL,CAAW+G,OAAX,CAAmB,IAAnB;AACArM,mBAAO,CAACC,GAAR,CAAY,iBAAiBoC,IAA7B;AACA,iBAAK9C,WAAL,CAAiB2B,IAAjB,CAAsB,mBAAtB,EAA2C,IAA3C,EAAiD;AAC/CE,sBAAQ,EAAE;AADqC,aAAjD;;AAGA,gBAAI,KAAK4D,IAAL,CAAUwC,IAAV,KAAmB,OAAvB,EAAgC;AAC9BxF,0BAAY,CAACE,OAAb,CAAqB,MAArB,EAA6B,OAA7B;AACA,mBAAK5C,KAAL,CAAW6C,aAAX,CAAyB,OAAzB;AACA;AACD;;AACD,gBAAI,KAAK6C,IAAL,CAAUwC,IAAV,KAAmB,QAAvB,EAAiC;AAC/BxF,0BAAY,CAACE,OAAb,CAAqB,MAArB,EAA6B,QAA7B;AACA,mBAAK5C,KAAL,CAAW6C,aAAX,CAAyB,OAAzB;AACA;AACD;;AACD,gBAAI,KAAK6C,IAAL,CAAUwC,IAAV,KAAmB,MAAvB,EAA+B;AAC7BxF,0BAAY,CAACE,OAAb,CAAqB,MAArB,EAA6B,MAA7B;AACA,mBAAK5C,KAAL,CAAW6C,aAAX,CAAyB,OAAzB;AACA;AACD;AACJ;;;iBAEQ,kBAAUuF,SAAV,EAA6B;AAClC,iBAAKV,YAAL,CAAkBS,QAAlB,CAA4BC,SAA5B;AACC;;;;;;;yBAtEQ2F,uB,EAAuB,yI,EAAA,2I,EAAA,uH,EAAA,wI,EAAA,gI;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA,gB;AAAA,e;AAAA,m6D;AAAA;AAAA;ADZpC;;AACI;;AAGA;;AAuDJ;;;;AA1DU;;AAAA;;AAGiB;;AAAA;;;;;;;;;;;;;;;;;;;;;AEH3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaO,wB;AAEX,0CAAoBxH,SAApB,EAC6C/D,IAD7C,EAEqBwL,WAFrB,EAGqBC,QAHrB,EAIqBC,WAJrB,EAI+C;AAAA;;AAJ3B,eAAA3H,SAAA,GAAAA,SAAA;AACyB,eAAA/D,IAAA,GAAAA,IAAA;AACxB,eAAAwL,WAAA,GAAAA,WAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AAA6B;;;;iBAElD,oBAAQ;AACN,iBAAKC,SAAL,GAAiB,KAAKD,WAAL,CAAiBE,KAAjB,CAAuB;AACtCvH,kBAAI,EAAE,CAAC,EAAD,CADgC;AAEtCD,uBAAS,EAAE,CAAC,EAAD;AAF2B,aAAvB,CAAjB;AAID;;;iBACD,wBAAenC,KAAf,EAAsB;AACpB,gBAAIA,KAAK,CAACiC,MAAN,CAAaC,KAAb,CAAmBrG,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,kBAAMsG,SAAS,GAAGnC,KAAK,CAACiC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;AACA,mBAAKwH,SAAL,CAAezI,GAAf,CAAmB,WAAnB,EAAgC2I,QAAhC,CAAyCzH,SAAzC;AACD;AACF;;;iBAED,oBAAW;AAAA;;AACT,iBAAKL,SAAL,CAAeU,KAAf;AACA,gBAAMqH,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,oBAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6B,KAAKL,SAAL,CAAezI,GAAf,CAAmB,WAAnB,EAAgCrC,KAA7D;AACA,iBAAK2K,WAAL,CAAiBS,eAAjB,CAAiC,KAAKjM,IAAL,CAAUxB,MAA3C,EAAmDsN,QAAnD,EACGrO,SADH,CAEI,UAACqB,OAAD,EAAa;AACX,qBAAI,CAAC2M,QAAL,CAAc5M,IAAd,CAAmBC,OAAO,CAACK,QAA3B,EAAqC,IAArC,EAA2C;AACzCJ,wBAAQ,EAAE;AAD+B,eAA3C;;AAGA,qBAAI,CAACgF,SAAL,CAAeU,KAAf,CAAqB,CAArB;AACD,aAPL,EAQI,UAACzF,KAAD,EAAgB;AACdrB,qBAAO,CAACC,GAAR,CAAYoB,KAAZ;AACD,aAVL;AAYD;;;;;;;yBArCUuM,wB,EAAwB,sI,EAAA,gEAGd,wEAHc,C,EAGC,yI,EAAA,wI,EAAA,2H;AAAA,O;;;cAHzBA,wB;AAAwB,8C;AAAA,iB;AAAA,e;AAAA,8V;AAAA;AAAA;ACVrC;;AACI;;AACI;;AACI;;AAA4D;;AAAY;;AAC5E;;AACF;;AAA8B;AAAA,qBAAY,IAAAW,QAAA,EAAZ;AAAsB,aAAtB;;AAC5B;;AACE;;AAAgC;AAAA,qBAAU,IAAAC,cAAA,QAAV;AAAgC,aAAhC;;AAAhC;;AACF;;AACA;;AACE;;AAAiC;;AAAM;;AACzC;;AACF;;AACF;;AACF;;;;AATU;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCECC,kB;AAEX,oCAAoBtI,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;iBAClC,cAAKuI,GAAL,EAAerM,IAAf,EAA0BsM,IAA1B,EAAmC;AACxC,mBAAO,KAAKxI,IAAL,CAAUmF,IAAV,CAAeoD,GAAf,EAAoBrM,IAApB,EAA0BsM,IAA1B,CAAP;AACD;;;iBACM,aAAID,GAAJ,EAAcrM,IAAd,EAAyBsM,IAAzB,EAAkC;AACvC,mBAAO,KAAKxI,IAAL,CAAUoF,GAAV,CAAcmD,GAAd,EAAmBrM,IAAnB,EAAyBsM,IAAzB,CAAP;AACD;;;iBAEM,iBAAOD,GAAP,EAAiBE,OAAjB,EAA6B;AAClC,mBAAO,KAAKzI,IAAL,WAAiBuI,GAAjB,EAAsBE,OAAtB,CAAP;AACD;;;iBAGM,aAAIF,GAAJ,EAAcE,OAAd,EAA0B;AAC/B,mBAAO,KAAKzI,IAAL,CAAUZ,GAAV,CAAcmJ,GAAd,EAAmBE,OAAnB,CAAP;AACD;;;iBACM,oBAAWF,GAAX,EAAmB;AACxB,mBAAO,KAAKvI,IAAL,CAAUZ,GAAV,CAAcmJ,GAAd,CAAP;AACD;;;;;;;yBApBUD,kB,EAAkB,uH;AAAA,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB,K;AAAA,oBAFjB;;;;;;;;;;;;;;;;;ACAd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACsBgC;;AACI;;AAC0Q;AAAA;;AAAA;;AAAA;;AAAA,4DAAuC,aAAvC;AAAoD,WAApD;;AAChR;;AACJ;;AAEM;;;;;;AALsC;;AAAA,sMAAyH,QAAzH,EAAyH,qHAAzH;;;;;;AAxBtD;;AACA;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAEI;;AAAuB;;AAAiC;;AACxD;;AAAsB;;AAA+B;;AACrD;;AAAwB;;AAAmC;;AAC3D;;AAAyB;;AAAoC;;AAC7D;;AAAyB;;AAA4C;;AACrE;;AAAmB;;AAAuC;;AAE1D;;AAAqB;;AAAe;;AAA6B;;AAAsB;;AAAS;;AAEhG;;AAGI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;AAjC0E;;AAAA;;AAIrD;;AAAA;;AAMkB;;AAAA;;AACD;;AAAA;;AACE;;AAAA;;AACC;;AAAA;;AACA;;AAAA;;AACN;;AAAA;;AAE8C;;AAAA;;AAKvD;;AAAA;;;;;;;;AAqCN;;AACI;;AACI;;AAAW;;AAAmB;;AAC9B;;AACA;;AAAgG;AAAA;;AAAA;;AAAA;;AAAA,8DAAwC,aAAxC;AAAqD,WAArD;;AAAyD;;AAAW;;AACpK;;AAAkG;AAAA;;AAAA;;AAAA;;AAAA,8DAAwC,WAAxC;AAAmD,WAAnD;;AAAsD;;AAAS;;AACjK;;AACJ;;AACJ;;;;;;AAJoB;;AAAA;;AACA;;AAAA;;;;;;AA5BpC;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAEI;;AAAuB;;AAAiC;;AACxD;;AAAsB;;AAA+B;;AACrD;;AAAwB;;AAAmC;;AAC3D;;AAAyB;;AAAoC;;AAC7D;;AAAyB;;AAA4C;;AACrE;;AAAmB;;AAAuC;;AAE1D;;AAAqB;;AAAe;;AAA6B;;AAAsB;;AAAS;;AAEhG;;AAII;;AASJ;;AACJ;;AACJ;;AACJ;;;;;;AAnC6I;;AAI5H;;AAAA;;AAMkB;;AAAA;;AACD;;AAAA;;AACE;;AAAA;;AACC;;AAAA;;AACA;;AAAA;;AACN;;AAAA;;AAE8C;;AAAA;;AAMvD;;AAAA;;;;;;AAxB1B;;AACI;;AAoCJ;;;;;;AApCe;;AAAA;;;;;;AAtCf;;AACI;;AAoCJ;;AAsCJ;;;;;;AA1Ec;;AAAA;;AAoCJ;;AAAA;;;;UDlBLI,oB;AAEX,sCAAoBpM,OAApB,EAAkDqM,YAAlD,EAAqFtC,MAArF,EACUjN,WADV,EAC2CwP,aAD3C,EACoE;AAAA;;AADhD,eAAAtM,OAAA,GAAAA,OAAA;AAA8B,eAAAqM,YAAA,GAAAA,YAAA;AAAmC,eAAAtC,MAAA,GAAAA,MAAA;AAC3E,eAAAjN,WAAA,GAAAA,WAAA;AAAiC,eAAAwP,aAAA,GAAAA,aAAA;AAI7C,eAAArI,IAAA,GAAe,IAAf;AAIA,eAAAsI,YAAA,GAAe,IAAItP,KAAJ,EAAf;AAEA,eAAAuP,aAAA,GAAgB,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAW5I,QAA/B,CAAhB;AACE,eAAA6I,iBAAA,GAAoB,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAW7I,QAA/B,CAApB;AAKF,eAAAgB,OAAA,GAAgB,KAAhB;AACA,eAAAD,QAAA,GAAiB,KAAjB;AAfK;;;;iBAgBL,oBAAQ;AAAA;;AAEN,iBAAKI,IAAL,GAAYxF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAZ;;AACA,gBAAG,KAAKuF,IAAL,KAAY,OAAf,EAAuB;AACrB,mBAAKH,OAAL,GAAa,IAAb;AACA,mBAAKD,QAAL,GAAc,KAAd;AACA,mBAAK+H,sBAAL;AACD,aAJD,MAKK,IAAG,KAAK3H,IAAL,KAAY,QAAf,EAAwB;AAC3B,mBAAKH,OAAL,GAAa,KAAb;AACA,mBAAKD,QAAL,GAAc,IAAd;AACA,mBAAK+H,sBAAL;AACD;;AAED,iBAAKL,YAAL,CAAkB7C,YAAlB,CAA+BnM,SAA/B,CAAyC,YAAM;AAC7C,kBAAG,OAAI,CAAC0H,IAAL,KAAY,OAAf,EAAuB;AACrB,uBAAI,CAAC2H,sBAAL;AACD,eAFD,MAGK,IAAG,OAAI,CAAC3H,IAAL,KAAY,QAAf,EAAwB;AAC3B,uBAAI,CAAC2H,sBAAL;AACD;AACH,aAPA;AASD;;;iBAGD,kCAAyB;AAAA;;AACvBnP,mBAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,iBAAK6O,YAAL,CAAkBM,kBAAlB,GAAuCtP,SAAvC,CAAkD,UAAA0B,QAAQ,EAAI;AAC9D,qBAAI,CAAC6N,YAAL,GAAoB7N,QAAQ,CAACtB,GAA7B;AACAF,qBAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoD,OAAI,CAACoP,YAAzD;AACArP,qBAAO,CAACC,GAAR,CAAY,kBAAgBuB,QAAQ,CAACtB,GAAT,CAAaC,MAAzC;;AAEA,mBAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,QAAQ,CAACtB,GAAT,CAAaC,MAAjC,EAAyCE,CAAC,EAA1C,EAA8C;AAC5CL,uBAAO,CAACC,GAAR,CAAa,kCAAkCI,CAA/C;AACAL,uBAAO,CAACC,GAAR,CAAY,eAAauB,QAAQ,CAACtB,GAAT,CAAaG,CAAb,EAAgByB,OAAzC;AACA9B,uBAAO,CAACC,GAAR,CAAY,mBAAiBuB,QAAQ,CAACtB,GAAT,CAAaG,CAAb,EAAgBiP,WAA7C;AACAtP,uBAAO,CAACC,GAAR,CAAY,gBAAcuB,QAAQ,CAACtB,GAAT,CAAaG,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BC,QAAvD;AACAP,uBAAO,CAACC,GAAR,CAAY,mBAAiBuB,QAAQ,CAACtB,GAAT,CAAaG,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BE,WAA1D;AACAR,uBAAO,CAACC,GAAR,CAAY,kBAAgBuB,QAAQ,CAACtB,GAAT,CAAaG,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BG,UAAzD;AACAT,uBAAO,CAACC,GAAR,CAAY,aAAWuB,QAAQ,CAACtB,GAAT,CAAaG,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BK,KAApD;AACAX,uBAAO,CAACC,GAAR,CAAY,iBAAeuB,QAAQ,CAACtB,GAAT,CAAaG,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BM,KAAxD;AACAZ,uBAAO,CAACC,GAAR,CAAY,kBAAgBuB,QAAQ,CAACtB,GAAT,CAAaG,CAAb,EAAgBkP,eAAhB,CAAgC,CAAhC,EAAmCC,UAA/D;AACAxP,uBAAO,CAACC,GAAR,CAAY,sBAAoBuB,QAAQ,CAACtB,GAAT,CAAaG,CAAb,EAAgBkP,eAAhB,CAAgC,CAAhC,EAAmCE,cAAnE;AAGA,oBAAI3O,CAAC,GAAG;AAACgB,yBAAO,EAACN,QAAQ,CAACtB,GAAT,CAAaG,CAAb,EAAgByB,OAAzB;AAAkCwN,6BAAW,EAAC9N,QAAQ,CAACtB,GAAT,CAAaG,CAAb,EAAgBiP,WAA9D;AAA2E/O,0BAAQ,EAACiB,QAAQ,CAACtB,GAAT,CAAaG,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BC,QAAjH;AACNC,6BAAW,EAACgB,QAAQ,CAACtB,GAAT,CAAaG,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BE,WADnC;AACgDC,4BAAU,EAACe,QAAQ,CAACtB,GAAT,CAAaG,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BG,UADxF;AAENE,uBAAK,EAACa,QAAQ,CAACtB,GAAT,CAAaG,CAAb,EAAgBC,SAAhB,CAA0B,CAA1B,EAA6BK,KAF7B;AAEqC6O,4BAAU,EAAChO,QAAQ,CAACtB,GAAT,CAAaG,CAAb,EAAgBkP,eAAhB,CAAgC,CAAhC,EAAmCC,UAFnF;AAGNC,gCAAc,EAACjO,QAAQ,CAACtB,GAAT,CAAaG,CAAb,EAAgBkP,eAAhB,CAAgC,CAAhC,EAAmCE;AAH5C,iBAAR;;AAME,uBAAI,CAACT,YAAL,CAAkBjO,IAAlB,CAAuBD,CAAvB;;AACAd,uBAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B,OAAI,CAAC+O,YAA/B;AACH;AACA,aA3BD;AA4BD;;;iBAID,0BAAiBlN,OAAjB,EAA6BgE,MAA7B,EAAyC;AAAA;;AACvC9F,mBAAO,CAACC,GAAR,CAAY,UAAZ,EAAuB6B,OAAvB;AACA9B,mBAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B6F,MAA3B;AACA,iBAAKgJ,YAAL,CAAkBY,iBAAlB,CAAoC5N,OAApC,EAA4CgE,MAA5C,EAAoDhG,SAApD,CACE,UAAC0B,QAAD,EAAmB;AACjB,qBAAI,CAACjC,WAAL,CAAiB2B,IAAjB,CAAsB,wBAAtB,EAAgD,SAAhD,EAA2D;AAACE,wBAAQ,EAAE;AAAX,eAA3D;AAEC,aAJL,EAKE,UAACC,KAAD,EAAgB;AACd,qBAAI,CAAC9B,WAAL,CAAiB2B,IAAjB,CAAsBG,KAAK,CAACA,KAAN,CAAYF,OAAlC,EAA2C,QAA3C,EAAqD;AAACC,wBAAQ,EAAE;AAAX,eAArD;AACD,aAPH;AASD;;;iBAED,2BAAkBU,OAAlB,EAA8BgE,MAA9B,EAA0C;AAAA;;AACxC9F,mBAAO,CAACC,GAAR,CAAY,UAAZ,EAAuB6B,OAAvB;AACA9B,mBAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B6F,MAA3B;AACA,iBAAKgJ,YAAL,CAAkBY,iBAAlB,CAAoC5N,OAApC,EAA4CgE,MAA5C,EAAoDhG,SAApD,CACE,UAAC0B,QAAD,EAAmB;AACjB,qBAAI,CAACjC,WAAL,CAAiB2B,IAAjB,CAAsB,yBAAtB,EAAiD,SAAjD,EAA4D;AAACE,wBAAQ,EAAE;AAAX,eAA5D;AAEC,aAJL,EAKE,UAACC,KAAD,EAAgB;AACd,qBAAI,CAAC9B,WAAL,CAAiB2B,IAAjB,CAAsBG,KAAK,CAACA,KAAN,CAAYF,OAAlC,EAA2C,QAA3C,EAAqD;AAACC,wBAAQ,EAAE;AAAX,eAArD;AACD,aAPH;AASD;;;;;;;yBA3GYyN,oB,EAAoB,yI,EAAA,2I,EAAA,mI,EAAA,wI,EAAA,yI;AAAA,O;;;cAApBA,oB;AAAoB,wC;AAAA,gB;AAAA,e;AAAA,4kC;AAAA;AAAA;ACtBjC;;AACI;;AACI;;AACI;;;;AA4ER;;AACJ;;AAhFA;;;;AAGoC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACChC;;AACI;;AACI;;AACI;;AACI;;AAEA;;AACI;;AACI;;AACJ;;AAEA;;AACI;;AACJ;;AAEA;;AAMI;;AACJ;;AAEJ;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AAAgC;;AAAoB;;AAIpD;;AACI;;AAA0D;AAAA;;AAAA;;AAAA;;AAAA,uDAAkC,UAAlC;AAA4C,WAA5C;;AAChE;;AACF;;AACQ;;AAA2F;AAAA;;AAAA;;AAAA;;AAAA,sDAAiC,UAAjC;AAA2C,WAA3C;;AACjG;;AACF;;AAGI;;AAEJ;;AACA;;AACJ;;AACJ;;;;;;AA3CqC;;AAAA;;AAIb;;AAAA;;AAIA;;AAAA;;AASA;;AAAA;;AAQoB;;AAAA;;;;UCvBnCc,6B;AAEX,+CAAoBC,YAApB,EAAyDC,OAAzD,EAA+E;AAAA;;AAA3D,eAAAD,YAAA,GAAAA,YAAA;AAAqC,eAAAC,OAAA,GAAAA,OAAA;AAEzD,eAAAhN,IAAA,GAAO,EAAP;AACA,eAAArD,KAAA,GAAQ,IAAIE,KAAJ,EAAR;AACA,eAAAoQ,MAAA,GAAS,CAAT;AAJkF;;;;iBAOlF,oBAAQ;AAAA;;AAEN,iBAAKC,kBAAL,CAAwBjK,MAAxB,EAFM,CAIN;;AACA9F,mBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKT,KAA3B;AACA,iBAAKoQ,YAAL,CAAkBI,WAAlB,CAA8BlQ,SAA9B,CAAwC,YAAM;AAC5C,qBAAI,CAACiQ,kBAAL,CAAwBjK,MAAxB;AACD,aAFD;AAGD;;;iBAGD,4BAAmBA,MAAnB,EAAmC;AAAA;;AACjC9F,mBAAO,CAACC,GAAR,CAAY,eAAZ;AACA,iBAAK2P,YAAL,CAAkBK,kBAAlB,CAAqC,QAArC,EAA+CnQ,SAA/C,CAEE,UAAC0B,QAAD,EAAmB;AACjBxB,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBuB,QAAxB;AACAxB,qBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBuB,QAAQ,CAACtB,GAA/B;AACA,qBAAI,CAACV,KAAL,GAAagC,QAAQ,CAACtB,GAAtB;AACC,aANL,EAOE,UAACmB,KAAD,EAAgB;AACd,qBAAI,CAACwO,OAAL,CAAa3O,IAAb,CAAkBG,KAAK,CAACA,KAAN,CAAYF,OAA9B,EAAuC,QAAvC,EAAiD;AAACC,wBAAQ,EAAE;AAAX,eAAjD;AACD,aATH;AAaD;;;iBAED,sBAAaP,MAAb,EAA6BiF,MAA7B,EAA6C;AAAA;;AAC3C9F,mBAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CY,MAA3C;AACA,iBAAK+O,YAAL,CAAkBM,YAAlB,CAA+BrP,MAA/B,EAAuCiF,MAAvC,EAA+ChG,SAA/C,CAEE,UAAC0B,QAAD,EAAmB;AACjBxB,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBuB,QAAxB;;AACA,qBAAI,CAACqO,OAAL,CAAa3O,IAAb,CAAkB,kBAAlB,EAAsC,SAAtC,EAAiD;AAACE,wBAAQ,EAAE;AAAX,eAAjD;AAEC,aANL,EAOE,UAACC,KAAD,EAAgB;AACd,qBAAI,CAACwO,OAAL,CAAa3O,IAAb,CAAkBG,KAAK,CAACA,KAAN,CAAYF,OAA9B,EAAuC,QAAvC,EAAiD;AAACC,wBAAQ,EAAE;AAAX,eAAjD;AACD,aATH;AAaD;;;iBAEH,qBAAYP,MAAZ,EAA4BiF,MAA5B,EAA4C;AAAA;;AAC1C9F,mBAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CY,MAA1C;AACA,iBAAK+O,YAAL,CAAkBO,WAAlB,CAA8BtP,MAA9B,EAAsCiF,MAAtC,EAA8ChG,SAA9C,CAEI,UAAC0B,QAAD,EAAmB;AACjBxB,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBuB,QAAxB;AACAxB,qBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBuB,QAAQ,CAACtB,GAA/B;;AACA,qBAAI,CAAC2P,OAAL,CAAa3O,IAAb,CAAkB,kBAAlB,EAAsC,SAAtC,EAAiD;AAACE,wBAAQ,EAAE;AAAX,eAAjD;AAEC,aAPP,EAQI,UAACC,KAAD,EAAgB;AACd,qBAAI,CAACwO,OAAL,CAAa3O,IAAb,CAAkBG,KAAK,CAACA,KAAN,CAAYF,OAA9B,EAAuC,QAAvC,EAAiD;AAACC,wBAAQ,EAAE;AAAX,eAAjD;AACD,aAVL;AAYD;;;;;;;yBArEYuO,6B,EAA6B,2I,EAAA,wI;AAAA,O;;;cAA7BA,6B;AAA6B,iD;AAAA,gB;AAAA,e;AAAA,0wB;AAAA;AAAA;ADV1C;;AAII;;AAiDJ;;;;AAjD0B;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEJ1B;;AACI;;AACJ;;;;;;;;AACA;;AACI;;AAEI;;AACI;;AAEI;;AACI;;AACJ;;AAEA;;AAAkB;;AAAS;;AAC/B;;AACA;;AAA+D;;AAAS;;AACxE;;AAAkE;;AAAW;;AAC7E;;AACA;;AAAwB;;AAAe;;AACvC;;AAAG;;AAAuB;;AAC9B;;AACA;;AAAqF;AAAA;;AAAA;;AAAA;AAAA;;AACjF;;AACI;;AAAW;;AAAgB;;AAC3B;;AAAgE;AAAA;;AAAA;;AAAA;AAAA;;AAAhE;;AACA;;AAA4C;;AAAK;;AACjD;;AAAmC;;AAAmB;;AAC1D;;AACA;;AAGA;;AAUuG;;AAAI;;AAC/G;;AACJ;;AACJ;;;;;;;;AA7ByD;;AAAA;;AAAkB;;AAAA;;AACjB;;AAAA;;AAAoB;;AAAA;;AAQE;;AAAA;;AAiBhD;;AAAA;;;;UC/BnBS,uB;AAQX,yCACUxL,IADV,EAEUtF,KAFV,EAGUC,WAHV,EAGkC;AAAA;;AAFxB,eAAAqF,IAAA,GAAAA,IAAA;AACA,eAAAtF,KAAA,GAAAA,KAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AAVH,eAAAwF,SAAA,GAAY,KAAZ;AACA,eAAA1D,KAAA,GAAQ,IAAR;AACP,eAAAF,OAAA,GAAU,IAAV;AACO,eAAA6D,IAAA,GAAO;AACZC,iBAAK,EAAE;AADK,WAAP;AAQF;;;;iBAEL,oBAAW,CACV;;;iBACD,oBAAW;AAAA;;AACT,iBAAKF,SAAL,GAAiB,IAAjB;AACA,iBAAKH,IAAL,CAAUyL,cAAV,CAAyB,KAAKrL,IAA9B,EAAoClF,SAApC,CACE,UAAAuC,IAAI;AAAA,qBAAI,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAJ;AAAA,aADN,EAEE,UAAAhB,KAAK;AAAA,qBAAI,OAAI,CAACkB,WAAL,CAAiBlB,KAAjB,CAAJ;AAAA,aAFP;AAGD;;;iBACD,qBAAYA,KAAZ,EAAoC;AAClC,iBAAK0D,SAAL,GAAiB,KAAjB;AACA,iBAAK1D,KAAL,GAAaA,KAAK,CAACA,KAAN,CAAYF,OAAzB;AACAnB,mBAAO,CAACC,GAAR,CAAYoB,KAAZ;AACA,iBAAK9B,WAAL,CAAiB2B,IAAjB,CAAsB,KAAKG,KAA3B,EAAkC,IAAlC,EAAwC;AACtCD,sBAAQ,EAAE;AAD4B,aAAxC;AAGD;;;iBACD,wBAAeiB,IAAf,EAAqB;AACnB,iBAAK0C,SAAL,GAAiB,KAAjB;AACA,iBAAKxF,WAAL,CAAiB2B,IAAjB,CAAsB,0BAAtB,EAAkD,IAAlD,EAAwD;AACtDE,sBAAQ,EAAE;AAD4C,aAAxD;AAGA,iBAAK9B,KAAL,CAAW6C,aAAX,CAAyB,QAAzB;AACD;;;;;;;yBApCUiO,uB,EAAuB,yI,EAAA,uH,EAAA,wI;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA,gB;AAAA,e;AAAA,krC;AAAA;AAAA;ADVpC;;AAGA;;;;AAHM;;AAGyC;;AAAA;;;;;;;;;;;;;;;;;;;;;AEF/C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWgB;;AAAqC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AASrC;;AAAuC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAUvC;;AAAkC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAWlC;;AAAsC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAStC;;AAAwC;;AAA+B;;;;;;AAA/B;;AAAA;;;;UDxC3CE,gB;AAGX,kCAAqB/Q,WAArB,EACqBwO,WADrB,EAEqBF,WAFrB,EAGqBrB,MAHrB,EAIqBpG,SAJrB,EAIgE;AAAA;;AAJ3C,eAAA7G,WAAA,GAAAA,WAAA;AACA,eAAAwO,WAAA,GAAAA,WAAA;AACA,eAAAF,WAAA,GAAAA,WAAA;AACA,eAAArB,MAAA,GAAAA,MAAA;AACA,eAAApG,SAAA,GAAAA,SAAA;AAIrB,eAAAkC,QAAA,GAAuB,IAAI,yEAAJ,EAAvB;AACA,eAAA/H,QAAA,GAAW,IAAI,0DAAJ,CAAgB,KAAK+H,QAAL,CAAc/H,QAA9B,EAAwC,CACjD,0DAAW8F,QADsC,EAEjD,0DAAWkK,SAAX,CAAqB,CAArB,CAFiD,EAGjD,0DAAWC,SAAX,CAAqB,EAArB,CAHiD,EAIjD,0DAAWC,OAAX,CAAmB,YAAnB,CAJiD,CAAxC,CAAX;AAMA,eAAAhQ,UAAA,GAAa,IAAI,0DAAJ,CAAgB,KAAK6H,QAAL,CAAc7H,UAA9B,EAA0C,CACrD,0DAAW4F,QAD0C,EAErD,0DAAWkK,SAAX,CAAqB,CAArB,CAFqD,EAGrD,0DAAWC,SAAX,CAAqB,EAArB,CAHqD,EAIrD,0DAAWC,OAAX,CAAmB,YAAnB,CAJqD,CAA1C,CAAb;AAMA,eAAA7P,KAAA,GAAQ,IAAI,0DAAJ,CAAgB,KAAK0H,QAAL,CAAc1H,KAA9B,EAAqC,CAC3C,0DAAWyF,QADgC,EAE3C,0DAAWkK,SAAX,CAAqB,CAArB,CAF2C,EAG3C,0DAAWE,OAAX,CAAmB,SAAnB,CAH2C,CAArC,CAAR;AAKA,eAAA/P,SAAA,GAAY,IAAI,0DAAJ,CAAgB,KAAK4H,QAAL,CAAc5H,SAA9B,EAAyC,CACnD,0DAAW2F,QADwC,EAEnD,0DAAWkK,SAAX,CAAqB,CAArB,CAFmD,EAGnD,0DAAWE,OAAX,CAAmB,QAAnB,CAHmD,CAAzC,CAAZ;AAKA,eAAAjQ,WAAA,GAAc,IAAI,0DAAJ,CAAgB,KAAK8H,QAAL,CAAc9H,WAA9B,EAA2C,CACvD,0DAAW6F,QAD4C,EAEvD,0DAAWkK,SAAX,CAAqB,EAArB,CAFuD,EAGvD,0DAAWE,OAAX,CAAmB,YAAnB,CAHuD,CAA3C,CAAd;AA3BmE;;;;iBAEnE,oBAAQ,CAAW;;;iBAgCnB,yBAAgBnM,KAAhB,EAAuB;AACrB,gBAAIA,KAAK,CAACiC,MAAN,CAAaC,KAAb,CAAmBrG,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,kBAAMQ,KAAK,GAAG2D,KAAK,CAACiC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAd;AACA,mBAAKC,SAAL,GAAiB9F,KAAK,CAAC+F,IAAvB;AACD;AACF;;;iBACC,0BAAiB;AAAA;;AACf,iBAAKmH,WAAL,CAAiB6C,OAAjB,CAAyB,KAAKpI,QAA9B,EAAwC,KAAK7B,SAA7C,EAAwD3G,SAAxD,CACE,UAAC8E,IAAD,EAAU;AACR,kBAAIA,IAAI,CAACiC,UAAL,KAAoB,GAAxB,EAA6B;AAC3B,uBAAI,CAACtH,WAAL,CAAiB2B,IAAjB,CAAsB0D,IAAI,CAACpD,QAA3B,EAAqC,IAArC,EAA2C;AAACJ,0BAAQ,EAAE;AAAX,iBAA3C;;AACA,uBAAI,CAACgF,SAAL,CAAeU,KAAf,CAAqB,CAArB;AACD;AACF,aANH,EAOE,UAACzF,KAAD,EAAgB;AACd,qBAAI,CAAC9B,WAAL,CAAiB2B,IAAjB,CAAsBG,KAAK,CAACA,KAA5B,EAAmC,IAAnC,EAAyC;AAAED,wBAAQ,EAAE;AAAZ,eAAzC;;AACApB,qBAAO,CAACC,GAAR,CAAYoB,KAAZ;AACD,aAVH;;AAYA,gBAAI,KAAKsP,QAAL,CAAcC,OAAlB,EAA2B;AACzB;AACD;AACF;;;iBAED,8BAAqB;AACnB,mBAAO,KAAKrQ,QAAL,CAAcsQ,QAAd,CAAuB,UAAvB,IAAqC,4BAArC,GACA,KAAKtQ,QAAL,CAAcsQ,QAAd,CAAuB,WAAvB,IAAsC,qCAAtC,GACA,KAAKtQ,QAAL,CAAcsQ,QAAd,CAAuB,WAAvB,IAAsC,8BAAtC,GAAuE,EAF9E;AAGD;;;iBACD,gCAAuB;AACrB,mBAAO,KAAKpQ,UAAL,CAAgBoQ,QAAhB,CAAyB,UAAzB,IAAuC,8BAAvC,GACA,KAAKpQ,UAAL,CAAgBoQ,QAAhB,CAAyB,WAAzB,IAAwC,qCAAxC,GACA,KAAKpQ,UAAL,CAAgBoQ,QAAhB,CAAyB,WAAzB,IAAwC,8BAAxC,GAAyE,EAFhF;AAGD;;;iBACD,+BAAsB;AACpB,mBAAO,KAAKjQ,KAAL,CAAWiQ,QAAX,CAAoB,UAApB,IAAkC,wBAAlC,GACA,KAAKjQ,KAAL,CAAWiQ,QAAX,CAAoB,SAApB,IAAgC,sBAAhC,GACA,KAAKjQ,KAAL,CAAWiQ,QAAX,CAAoB,WAApB,IAAmC,+BAAnC,GAAoE,EAF3E;AAGD;;;iBACD,+BAAsB;AACpB,mBAAO,KAAKnQ,SAAL,CAAemQ,QAAf,CAAwB,UAAxB,IAAsC,kCAAtC,GACA,KAAKnQ,SAAL,CAAemQ,QAAf,CAAwB,SAAxB,IAAoC,sBAApC,GACA,KAAKnQ,SAAL,CAAemQ,QAAf,CAAwB,WAAxB,IAAuC,+BAAvC,GAAwE,EAF/E;AAGD;;;iBACD,qCAA4B;AAC1B,mBAAO,KAAKrQ,WAAL,CAAiBqQ,QAAjB,CAA0B,UAA1B,IAAwC,gCAAxC,GACA,KAAKrQ,WAAL,CAAiBqQ,QAAjB,CAA0B,WAA1B,IAAyC,sCAAzC,GAAiF,EADxF;AAED;;;;;;;yBAxFQP,gB,EAAgB,wI,EAAA,2H,EAAA,yI,EAAA,mI,EAAA,sI;AAAA,O;;;cAAhBA,gB;AAAgB,oC;AAAA,iB;AAAA,gB;AAAA,+xD;AAAA;AAAA;ACX7B;;AAGI;;AACI;;AAAgE;;AAAQ;;AAC5E;;AAGA;;AACI;;AACI;;AACI;;AAAW;;AAAS;;AACpB;;AACA;;AAAuG;AAAA;AAAA;;AAAvG;;AACA;;AAAyC;;AAAI;;AACjD;;AACJ;;AAEA;;AACI;;AACI;;AAAY;;AAAY;;AACxB;;AACA;;AAAkF;AAAA;AAAA;;AAAlF;;AACA;;AAAyC;;AAAM;;AACnD;;AACJ;;AAGA;;AACI;;AACI;;AAAY;;AAAU;;AACtB;;AACA;;AAA8D;AAAA;AAAA;;AAA9D;;AACA;;AACI;;AAAA;;AACI;;AACJ;;AACJ;;AACJ;;AAEA;;AAAA;;AACI;;AAAW;;AAAa;;AACxB;;AACA;;AAAiE;AAAA;AAAA;;AAAjE;;AACA;;AAAyC;;AAAI;;AACjD;;AACJ;;AAEA;;AACI;;AACI;;AAAW;;AAAgB;;AAC3B;;AACA;;AAAgF;AAAA;AAAA;;AAAhF;;AACA;;AAAyC;;AAAI;;AACjD;;AACJ;;AAEA;;AACI;;AAAgC;AAAA,qBAAU,IAAAQ,eAAA,QAAV;AAAiC,aAAjC;;AAAhC;;AACJ;;AACA;;AACI;;AAAgM;AAAA,qBAAS,IAAAC,cAAA,EAAT;AAAyB,aAAzB;;AAC5L;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAtD4B;;AAAA;;AACgE;;AAAA,kGAAwB,SAAxB,EAAwB,qBAAxB;;AAQhE;;AAAA;;AACsE;;AAAA,yGAAiC,aAAjC,EAAiC,cAAjC;;AAStE;;AAAA;;AACkD;;AAAA,oGAA4B,aAA5B,EAA4B,SAA5B;;AAUlD;;AAAA;;AACqD;;AAAA,wGAAgC,aAAhC,EAAgC,aAAhC;;AAQrD;;AAAA;;AACoE;;AAAA,0GAAkC,aAAlC,EAAkC,eAAlC;;AASrD;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCtD9BC,gB;AAEX,oCAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,gB;AAAgB,O;;;cAAhBA,gB;AAAgB,oC;AAAA,iB;AAAA,e;AAAA,4F;AAAA;AAAA;ACP7B;;AACI;;AACI;;AACI;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACJ;;AACJ;;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCPaC,e;AAEX,mCAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,e;AAAe,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA,kD;AAAA;AAAA;ACP5B;;AACI;;AACJ;;;;;;;;;;;;;;;;;;;;ACDA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaC,W;AAWX,6BAAoB/K,IAApB,EAA8CgL,WAA9C,EAA+E;AAAA;;AAA3D,eAAAhL,IAAA,GAAAA,IAAA;AAA0B,eAAAgL,WAAA,GAAAA,WAAA;AAVtC,eAAAC,UAAA,GAAa,yEAAYrJ,OAAzB;AACA,eAAAoD,OAAA,GAAU,yEAAYrD,QAAtB;AACA,eAAAuJ,WAAA,GAAc;AAAChG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC,8BAAgB;AAAjB,aAAhB;AAAV,WAAd,CAQuE,CAP/E;;AACQ,eAAAiG,aAAA,GAAgB,IAAI,4CAAJ,EAAhB;AAQA,eAAAlG,UAAA,GAAa;AACnBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,8BAAgB;AAAlB,aAAhB;AADU,WAAb;AAF0E;;;;eAJlF,eAAmB;AACjB,mBAAO,KAAKiG,aAAZ;AACD;;;iBAQD,cAAMC,GAAN,EAAc;AACZvR,mBAAO,CAACC,GAAR,CAAYsR,GAAZ,EAAiB,gBAAjB;AACA,mBAAO,KAAKJ,WAAL,CAAiB7F,IAAjB,CAAsB,yEAAY3C,OAAZ,GAAsB,yEAAYC,MAAxD,EAAgE2I,GAAhE,EAAqE,EAArE,CAAP;AACD;;;iBACD,mBAAU1Q,MAAV,EAAqB;AAAA;;AACnB,mBAAO,KAAKsQ,WAAL,CACJ7F,IADI,WACI,yEAAYvD,OADhB,cAC2B,yEAAYuB,OADvC,cACkDzI,MADlD,GAC4D,EAD5D,EACgE;AAACwK,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aADhE,EAEJkM,IAFI,CAGH,2DAAI,YAAM;AACR,qBAAI,CAACF,aAAL,CAAmBG,IAAnB;AACD,aAFD,CAHG,CAAP;AAOD;;;iBACD,+BAAsB5Q,MAAtB,EAA8B6Q,QAA9B,EAAwC;AAAA;;AACtC1R,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCyR,QAAjC;AACA,mBAAO,KAAKP,WAAL,CACP;AADO,aAEN5F,GAFM,WAEC,yEAAYxD,OAFb,cAEwB,yEAAY0B,kBAFpC,SAEyD5I,MAFzD,GAEmE6Q,QAFnE,EAE8E;AAACrG,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aAF9E,EAGNkM,IAHM,CAIL,2DAAI,YAAM;AACR,qBAAI,CAACF,aAAL,CAAmBG,IAAnB;AACD,aAFD,CAJK,CAAP;AAQD;;;iBAEF,+BAAsB5Q,MAAtB,EAA8B6Q,QAA9B,EAAwC;AAAA;;AACrC1R,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCyR,QAAjC;AACA,mBAAO,KAAKP,WAAL,CACP;AADO,aAEN5F,GAFM,WAEC,yEAAYxD,OAFb,cAEwB,yEAAYyB,kBAFpC,SAEyD3I,MAFzD,GAEmE6Q,QAFnE,EAE8E;AAACrG,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aAF9E,EAGNkM,IAHM,CAIL,2DAAI,YAAM;AACR,qBAAI,CAACF,aAAL,CAAmBG,IAAnB;AACD,aAFD,CAJK,CAAP;AAQD;;;iBAKD,6BAAoB5Q,MAApB,EAAoC;AAAA;;AAClC,mBAAO,KAAKsQ,WAAL,CACP;AADO,iCAEI,yEAAYpJ,OAFhB,cAE2B,yEAAY2B,sBAFvC,cAEiE7I,MAFjE,GAE2E;AAACwK,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aAF3E,EAGNkM,IAHM,CAIL,2DAAI,YAAM;AACR,qBAAI,CAACF,aAAL,CAAmBG,IAAnB;AACD,aAFD,CAJK,CAAP;AAQD;;;iBAED,4BAAmB;AACjB;AACA,mBAAO,KAAKN,WAAL,CAAiB5L,GAAjB,WAAwB,KAAK4F,OAA7B,cAAwC,yEAAYxB,mBAApD,GAA2E;AAAC0B,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aAA3E,CAAP;AACD;;;iBAED,4BAAgB;AACdtF,mBAAO,CAACC,GAAR,CAAY,qBAAZ,EADc,CAEd;;AACA,mBAAO,KAAKkR,WAAL,CAAiB5L,GAAjB,WAAwB,KAAK4F,OAA7B,cAAwC,yEAAY5B,mBAApD,GAA2E;AAAC8B,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aAA3E,CAAP;AACD;;;iBAGD,qBAAYhE,MAAZ,EAAyB0H,QAAzB,EAAsC;AACpC,mBAAO,KAAKmI,WAAL,CAAiB7F,IAAjB,CAAsB,yEAAYtC,QAAZ,GAAuB,yEAAYC,gBAAnC,GAAsD,GAAtD,GAA4D3H,MAA5D,GAAqE,GAArE,GAA2E0H,QAAjG,EAA2G,EAA3G,EAA+G,EAA/G,CAAP;AAA6H;;;;;;;yBAjFpHkI,W,EAAW,uH,EAAA,+H;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCADS,sB;AAEX,0CAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,sB;AAAsB,O;;;cAAtBA,sB;AAAsB,0C;AAAA,iB;AAAA,e;AAAA,miB;AAAA;AAAA;ACPnC;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAwB;;AAAM;;AAC9B;;AAAuC;;AAAa;;AACpD;;AAAyB;;AAAmB;;AAChD;;AACA;;AACI;;AAAM;;AAA+B;;AACzC;;AACA;;AACI;;AAAM;;AAAuB;;AACjC;;AACA;;AACI;;AAAO;;AAA4B;;AACvC;;AACA;;AAA6B;;AAAM;;AAAU;;AAAO;;AACpD;;AACI;;AACI;;AACI;;AAA2H;;AAAQ;;AACnI;;AAAuF;;AAA8B;;AACzH;;AACJ;;AACA;;AACI;;AACI;;AAA+H;;AAAU;;AACzI;;AAAuF;;AAAc;;AACzG;;AACJ;;AACA;;AACI;;AACI;;AAAoI;;AAAO;;AAC3I;;AAAuF;;AAAoC;;AAC/H;;AACJ;;AACJ;;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCjCaC,Y,GALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,WAAR;AACD,O;;;yBAFYD,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACPzB;;;;;;;;;;;;;;;;;;;;;ACCA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaE,Y;AAEX,8BAAoB3L,IAApB,EAA8CgL,WAA9C,EAA+E;AAAA;;AAA3D,eAAAhL,IAAA,GAAAA,IAAA;AAA0B,eAAAgL,WAAA,GAAAA,WAAA;AAEtC,eAAAhH,QAAA,GAAW,yEAAYA,QAAvB;AACA,eAAAC,WAAA,GAAc,yEAAYA,WAA1B;AACA,eAAAC,UAAA,GAAa,yEAAYA,UAAzB;AACA,eAAAC,eAAA,GAAkB,yEAAYA,eAA9B;AACA,eAAAC,aAAA,GAAgB,yEAAYA,aAA5B;AACA,eAAAC,aAAA,GAAgB,yEAAYA,aAA5B;AAEA,eAAAlF,KAAA,GAAQtD,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAR;AAEA,eAAAyI,kBAAA,GAAqB,yEAAYA,kBAAjC;AACA,eAAAC,iBAAA,GAAoB,yEAAYA,iBAAhC,CAZuE,CAa/E;;AACQ,eAAA2G,aAAA,GAAgB,IAAI,4CAAJ,EAAhB,CAduE,CAoB/E;;AAMQ,eAAAS,OAAA,GAAU,IAAI,4CAAJ,EAAV;AAKA,eAAAV,WAAA,GAAc;AACpBhG,mBAAO,EAAE,IAAI,gEAAJ,CAAiB;AAAC,8BAAgB,kBAAjB;AAAsC/F,mBAAK,EAAE,KAAKA;AAAlD,aAAjB;AADW,WAAd;AA/B0E;;;;eAgBlF,eAAmB;AACjB,mBAAO,KAAKgM,aAAZ;AACD;;;eASD,eAAyB;AACvB,mBAAO,KAAKS,OAAZ;AACD;;;iBAMC,4BAAmBjM,MAAnB,EAAmC;AACjC;AACA9F,mBAAO,CAACC,GAAR,CAAY,sBAAsB,KAAKkK,QAA3B,GAAsC,KAAKG,eAA3C,GAA6D,UAA7D,GAA0ExE,MAAtF;AACA,mBAAO,KAAKqL,WAAL,CAAiB5L,GAAjB,CAAqB,KAAK4E,QAAL,GAAgB,KAAKG,eAArB,GAAuC,UAAvC,GAAoDxE,MAAzE,EAAiF,KAAKuL,WAAtF,CAAP;AACD;;;iBAED,4BAAmB;AAEjB,mBAAO,KAAKF,WAAL,CAAiB5L,GAAjB,CAAqB,KAAK4E,QAAL,GAAgB,KAAKI,aAA1C,EAAyD,KAAK8G,WAA9D,CAAP;AACD;;;iBAED,0BAAiBvL,MAAjB,EAAiC;AAE/B,mBAAO,KAAKqL,WAAL,CAAiB5L,GAAjB,CAAqB,KAAK4E,QAAL,GAAgB,KAAKK,aAArB,GAAqC,UAArC,GAAkD1E,MAAvE,EAA+E,KAAKuL,WAApF,CAAP;AACD;;;iBAED,sBAAavB,MAAb,EAA6BhK,MAA7B,EAA2C;AAAA;;AAEzC;AACA,mBAAO,KAAKqL,WAAL,CAAiB5F,GAAjB,CAAqB,KAAKpB,QAAL,GAAgB,KAAKC,WAArB,GAAmC0F,MAAnC,GAA4C,GAA5C,GAAkD,SAAlD,GAA8DhK,MAAnF,EAA2F,EAA3F,EAA+F,KAAKuL,WAApG,EAAiHG,IAAjH,CAAsH,2DAAI,YAAM;AAAE,qBAAI,CAACO,OAAL,CAAaN,IAAb;AAAsB,aAAlC,CAAtH,CAAP;AACD;;;iBAED,qBAAY3B,MAAZ,EAA4BhK,MAA5B,EAA0C;AAAA;;AAExC;AACA,mBAAO,KAAKqL,WAAL,CAAiB5F,GAAjB,CAAqB,KAAKpB,QAAL,GAAgB,KAAKE,UAArB,GAAkCyF,MAAlC,GAA2C,GAA3C,GAAiD,SAAjD,GAA6DhK,MAAlF,EAA0F,EAA1F,EAA8F,KAAKuL,WAAnG,EAAgHG,IAAhH,CAAqH,2DAAI,YAAM;AAAE,qBAAI,CAACO,OAAL,CAAaN,IAAb;AAAsB,aAAlC,CAArH,CAAP;AACD;;;iBAED,8BAAkB;AAChBzR,mBAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,mBAAO,CAACC,GAAR,CAAY,KAAKkR,WAAL,CAAiB5L,GAAjB,CAAqB,KAAK4E,QAAL,GAAgB,KAAKO,kBAA1C,EAA8D,KAAK2G,WAAnE,CAAZ;AACA,mBAAO,KAAKF,WAAL,CAAiB5L,GAAjB,CAAqB,KAAK4E,QAAL,GAAgB,KAAKO,kBAA1C,EAA8D,EAA9D,CAAP;AACA;;;iBAID,2BAAkB5I,OAAlB,EAAgCgE,MAAhC,EAA2C;AAC1C;AACC9F,mBAAO,CAACC,GAAR,CAAY,SAAS,KAAKkK,QAAd,GAAyB,KAAKQ,iBAA9B,GAAkD,WAAlD,GAAgE7I,OAAhE,GAA0E,UAA1E,GAAuFgE,MAAnG,EAFyC,CAK1C;;AAEC,mBAAO,KAAKqL,WAAL,CACe;AADf,aAEgB5F,GAFhB,CAEoB,KAAKpB,QAAL,GAAgB,KAAKQ,iBAArB,GAAyC,WAAzC,GAAuD7I,OAAvD,GAAiE,UAAjE,GAA8EgE,MAFlG,EAE0G,EAF1G,EAE8G,KAAKuL,WAFnH,CAAP,CAPyC,CAUpB;AACA;AACA;AACA;AACA;AAEtB;AACA;;;;;;;yBA1FOS,Y,EAAY,uH,EAAA,+H;AAAA,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;;;;;;;;;;;;;ACRd;AAAA;;;AAAA;AAAA;AAAA;;UAAaE,O;;;;;;;;;;;;;;;;;;;ACCb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaC,Y;AASX,8BAAoB9L,IAApB,EAA8CgL,WAA9C,EAA+E;AAAA;;AAA3D,eAAAhL,IAAA,GAAAA,IAAA;AAA0B,eAAAgL,WAAA,GAAAA,WAAA;AARtC,eAAAE,WAAA,GAAc;AAAChG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC,8BAAgB;AAAjB,aAAhB;AAAV,WAAd,CAQuE,CAP/E;;AACQ,eAAAiG,aAAA,GAAgB,IAAI,6DAAJ,EAAhB;AAQA,eAAAlG,UAAA,GAAa;AACnBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,8BAAgB;AAAlB,aAAhB;AADU,WAAb;AAF0E;;;;eAJlF,eAAmB;AACjB,mBAAO,KAAKiG,aAAZ;AACD;;;iBAOD,oBAAWzQ,MAAX,EAAwBqR,SAAxB,EAAsC;AACpC;AACA,mBAAO,KAAK/L,IAAL,CAAUmF,IAAV,WAAkB,yEAAYxD,QAA9B,cAA0C,yEAAYiC,WAAtD,SAAoEmI,SAApE,qBAAwFrR,MAAxF,GACP,EADO,EACH;AAACwK,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aADG,CAAP;AAED;;;;;;;yBAlBU2M,Y,EAAY,uH,EAAA,+H;AAAA,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRd;;AAEI;;AACJ;;;;;;AAEA;;AACI;;AACJ;;;;;;AAEA;;AACI;;AACJ;;;;;;AAEA;;AACI;;AAAG;;AAAO;;AACV;;AAAG;;AAEmD;;AAC1D;;;;UCVaE,c;AAOX,gCAAoBjM,MAApB,EAA4C;AAAA;;AAAxB,eAAAA,MAAA,GAAAA,MAAA;AALpB,eAAAQ,IAAA,GAAe,IAAf;AAEA,eAAA0L,UAAA,GAAa,KAAb;AACA,eAAAC,MAAA,GAAS,KAAT;AACA,eAAAC,MAAA,GAAS,KAAT;AAC+C;;;;iBAE/C,oBAAQ;AAAA;;AACN;AACA,iBAAKpM,MAAL,CAAYyF,WAAZ,CAAwB7L,SAAxB,CAAkC,UAAA8M,MAAM,EAAI;AAC1C,qBAAI,CAACC,KAAL,GAAaD,MAAM,CAAC/J,IAApB;;AACA,kBAAI,OAAI,CAACgK,KAAL,KAAe,YAAnB,EAAiC;AAClC,uBAAI,CAACuF,UAAL,GAAkB,IAAlB;AACA,uBAAI,CAACC,MAAL,GAAc,KAAd;AACA,uBAAI,CAACC,MAAL,GAAc,KAAd;AACAtS,uBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,OAAI,CAACmS,UAA/B;AACA;;AACC,kBAAI,OAAI,CAACvF,KAAL,KAAe,OAAnB,EAA4B;AAC9B,uBAAI,CAACwF,MAAL,GAAc,IAAd;AACA,uBAAI,CAACD,UAAL,GAAkB,KAAlB;AACA,uBAAI,CAACE,MAAL,GAAc,KAAd;AACC;;AACC,kBAAI,OAAI,CAACzF,KAAL,KAAe,QAAnB,EAA6B;AAC/B,uBAAI,CAACyF,MAAL,GAAc,IAAd;AACA,uBAAI,CAACD,MAAL,GAAc,KAAd;AACA,uBAAI,CAACD,UAAL,GAAkB,KAAlB;AACC;;AACC,kBAAI,OAAI,CAACvF,KAAL,KAAe,OAAnB,EAA4B;AAC9B,uBAAI,CAACyF,MAAL,GAAc,KAAd;AACA,uBAAI,CAACD,MAAL,GAAc,KAAd;AACA,uBAAI,CAACD,UAAL,GAAkB,KAAlB;AACC;AACF,aAvBC;AAwBD;;;;;;;yBAnCUD,c,EAAc,+H;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA,gB;AAAA,e;AAAA,6B;AAAA;AAAA;ADR3B;;AAKA;;AAIA;;AAIA;;;;AAbM;;AAKA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;;;;;;;;;;;;;;;;;;;;AEZN;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUaI,U;;;;;yBAAAA,U;AAAU,O;;;cAAVA;;;kBAJF,CACP,4DADO,C;;;;4HAIEA,U,EAAU;AAAA,oBAHnB,4DAGmB;AAAA,S;AAHP,O;;;;;;;;;;;;;;;;;ACRhc,CA6BA;;;UAqFaC,S;;;;;yBAAAA,S;AAAS,O;;;cAATA,S;AAAS,oBAHR,2DAGQ;;;mBAJT,CAAC,gEAAD,C;AAAY,kBAzBd,CACP,uEADO,EAEP,uEAFO,EAGP,2EAHO,EAIP,oEAJO,EAKP,4FALO,EAMP,sEANO,EAOP,+EAPO,EAQP,0DARO,EASP,oEATO,EAUP,kEAVO,EAWP,sEAXO,EAYP,8EAZO,EAaP,2EAbO,EAcP,6EAdO,EAeP,uEAfO,EAgBP,qEAhBO,EAiBP,sEAjBO,EAkBP,qEAlBO,EAmBP,yEAnBO,EAoBP,0EApBO,EAqBP,yEArBO,EAsBP,2EAtBO,EAuBP,yEAvBO,CAyBc;;;;6HAIZA,S,EAAS;AAAA,yBA1DlB,2DA0DkB,EAzDlB,qFAyDkB,EAxDlB,kGAwDkB,EAvDlB,6EAuDkB,EAtDlB,6EAsDkB,EArDlB,wGAqDkB,EApDlB;AACA,4HAmDkB,EAlDlB,+GAkDkB,EAjDlB,sFAiDkB,EAhDlB,sFAgDkB,EA/ClB,kHA+CkB,EA9ClB,0GA8CkB,EA7ClB,0FA6CkB,EA5ClB,mFA4CkB,EA3ClB,4FA2CkB,EA1ClB,+FA0CkB,EAzClB,yFAyCkB,EAxClB,6HAwCkB,EAvClB,+FAuCkB,EAtClB,sFAsCkB,EArClB,iGAqCkB,EApClB,0HAoCkB,EAnClB,kGAmCkB,EAlClB,kGAkCkB,EAjClB,+FAiCkB,EAhClB,4EAgCkB;AAhCL,oBAIb,uEAJa,EAKb,uEALa,EAMb,2EANa,EAOb,oEAPa,EAQb,4FARa,EASb,sEATa,EAUb,+EAVa,EAWb,0DAXa,EAYb,oEAZa,EAab,kEAba,EAcb,sEAda,EAeb,8EAfa,EAgBb,2EAhBa,EAiBb,6EAjBa,EAkBb,uEAlBa,EAmBb,qEAnBa,EAoBb,sEApBa,EAqBb,qEArBa,EAsBb,yEAtBa,EAuBb,0EAvBa,EAwBb,yEAxBa,EAyBb,2EAzBa,EA0Bb,yEA1Ba;AAgCK,S;AANH,O;;;;;;;;;;;;;;;;;AC5GnB;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmBW;;AACR;;AACE;;AACF;;AACA;;AAGE;;AACF;;AACF;;;;;;AATsE;;AAElE;;AAAA;;;;;;;;AAkBE;;AAA0G;AAAA;;AAAA;;AAAA;;AAAA,yCAAqB,CAArB;AAAsB,WAAtB;;AAChH;;AACE;;AACF;;AACF;;;;;;;;;AAJgC,0FAAe,IAAf,EAAe,cAAf,EAAe,YAAf,EAAe,eAAf;;AAE5B;;AAAA;;;;;;AAGI;;AACI;;AAAc;;AAAQ;;AAAQ;;AAAU;;AAC5C;;;;UCnCPC,iB;AAEX,mCACUC,QADV,EAEU9E,WAFV,EAGUvO,KAHV,EAIU4G,MAJV,EAIwB;AAAA;;AAHd,eAAAyM,QAAA,GAAAA,QAAA;AACA,eAAA9E,WAAA,GAAAA,WAAA;AACA,eAAAvO,KAAA,GAAAA,KAAA;AACA,eAAA4G,MAAA,GAAAA,MAAA,CAAc,CAExB;;AACqB,eAAA0M,SAAA,GAAY,CAAZ;AAEb,eAAAC,gBAAA,GAAmB,IAAnB;AACR,eAAAC,SAAA,GAAY,EAAZ;AALI;;;;iBAiBJ,oBAAQ;AAAA;;AACN,iBAAKjF,WAAL,CAAiB5B,YAAjB,CAA8BnM,SAA9B,CAAwC,YAAM;AAC5C,qBAAI,CAACiT,aAAL,CAAmB,OAAI,CAAClS,MAAxB;AACD,aAFD;AAGA,iBAAKA,MAAL,GAAc,KAAKvB,KAAL,CAAW0T,QAAX,CAAoB5N,QAApB,CAA6BG,GAA7B,CAAiC,QAAjC,CAAd;AACAvF,mBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKY,MAA5B;AACA,iBAAKyE,KAAL,GAAa,KAAKhG,KAAL,CAAW0T,QAAX,CAAoB5N,QAApB,CAA6BG,GAA7B,CAAiC,OAAjC,CAAb;AACAvF,mBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKqF,KAA3B;AACA,iBAAK2N,WAAL;;AACA,iBAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKN,SAAjC,EAA4CM,KAAK,EAAjD,EAAqD;AACnD,mBAAKJ,SAAL,CAAe/R,IAAf,CAAoBmS,KAApB;AACD;;AACD,iBAAKH,aAAL,CAAmB,KAAKlS,MAAxB;AACA,iBAAKsS,QAAL;AACD;;;iBAGD,iBAAQC,MAAR,EAAqB;AACnB,iBAAKT,QAAL,CAAczR,IAAd,CAAmB,eAAekS,MAAf,GAAwB,KAAxB,GAAgC,KAAKR,SAAxD,EAAmE,EAAnE,EAAuE;AACrExR,sBAAQ,EAAE,KAAKyR;AADsD,aAAvE;AAGA,iBAAKO,MAAL,GAAcA,MAAd;AACA,mBAAO,KAAP;AACD;;;iBAEC,kBAASF,KAAT,EAAwB;AACxB,gBAAI,KAAKE,MAAL,IAAeF,KAAK,GAAG,CAA3B,EAA8B;AAC5B,qBAAO,MAAP;AACD,aAFD,MAEO;AACL,qBAAO,aAAP;AACD;AACF;;;iBAED,uBAAc;AAAA;;AACZlT,mBAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,iBAAK4N,WAAL,CAAiBwF,UAAjB,CAA4B,KAAKxS,MAAjC,EAA0C,KAAKyE,KAA/C,EAAsDxF,SAAtD,CAAgE,UAAC0B,QAAD,EAAmB;AACjF,kBAAIA,QAAQ,CAACtB,GAAT,IAAgB,IAApB,EAA0B;AACxB,uBAAI,CAAC2C,IAAL,GAAYrB,QAAQ,CAACtB,GAArB;AACA,uBAAI,CAACoT,SAAL,GAAiB9R,QAAQ,CAACtB,GAAT,CAAaS,KAA9B;AACA,uBAAI,CAAC4S,UAAL,GAAkB/R,QAAQ,CAACtB,GAAT,CAAaO,UAA/B;AACA,uBAAI,CAACF,QAAL,GAAgBiB,QAAQ,CAACtB,GAAT,CAAaK,QAA7B;AACD;AACF,aAPD;AAQD;;;iBAED,sBAAa;AAAA;;AACX,gBAAM8B,IAAI,GAAG;AACX+Q,oBAAM,EAAE,KAAKA,MADF;AAEXd,oBAAM,EAAE,KAAKA;AAFF,aAAb;AAIAtS,mBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBoC,IAAI,CAAC+Q,MAA9B;AACApT,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BoC,IAAI,CAACiQ,MAA/B;AACA,iBAAKzE,WAAL,CACG2F,eADH,CACmB,KAAK3S,MADxB,EACgCwB,IADhC,EACuC,KAAKiD,KAD5C,EAEGxF,SAFH,CAEa,UAAC0B,QAAD,EAAmB;AAC5BxB,qBAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCuB,QAArC;;AACA,qBAAI,CAACmR,QAAL,CAAczR,IAAd,CAAmBM,QAAQ,CAACA,QAA5B,EAAsC,IAAtC,EAA4C;AAAEJ,wBAAQ,EAAE;AAAZ,eAA5C;;AACA,qBAAI,CAAC8E,MAAL,CAAY/D,aAAZ,CAA0B,OAA1B;AACD,aANH,EAOE,UAACd,KAAD,EAAgB;AACd,qBAAI,CAACsR,QAAL,CAAczR,IAAd,CAAmBG,KAAK,CAACA,KAAN,CAAYF,OAA/B,EAAwC,IAAxC,EAA8C;AAAEC,wBAAQ,EAAE;AAAZ,eAA9C;AACD,aATH;AAYD;;;iBAGD,oBAAW;AACT,gBAAI,KAAKqS,SAAL,IAAkB,CAAlB,IAAuB,KAAKA,SAAL,IAAkB,CAA7C,EAAgD;AAC9C,mBAAKC,KAAL,GAAa,kBAAb;AACD;;AACD,gBAAI,KAAKD,SAAL,IAAkB,CAAtB,EAAyB;AACvB,mBAAKC,KAAL,GAAa,gBAAb;AACD;;AACD,gBAAI,KAAKD,SAAL,GAAiB,CAArB,EAAwB;AACtB,mBAAKC,KAAL,GAAa,cAAb;AACD;AACF;;;iBAED,uBAAc7S,MAAd,EAA8B;AAAA;;AAC5Bb,mBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCY,MAApC;AACA,iBAAKgN,WAAL,CAAiB8F,iBAAjB,CAAmC9S,MAAnC,EAA2Cf,SAA3C,CAEE,UAAC0B,QAAD,EAAmB;AACjBxB,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBuB,QAAxB;AACAxB,qBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BuB,QAAQ,CAACtB,GAAvC;AACA,qBAAI,CAACuT,SAAL,GAAiBjS,QAAQ,CAACtB,GAA1B;AAEC,aAPL;AAWD;;;;;;;yBApHUwS,iB,EAAiB,wI,EAAA,yI,EAAA,+H,EAAA,uH;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,gyC;AAAA;AAAA;ADX9B;;AACI;;AACJ;;AACA;;AAAI;;AACJ;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AAAQ;;AAAc;;AAC1B;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAUJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAQ;;AAAa;;AACzB;;AACA;;AACI;;AAKA;;AAGJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAQ;;AAAe;;AAC3B;;AACA;;AACI;;AAA4C;AAAA;AAAA;;AAAuD;;AACvG;;AACA;;AACI;;AAAuC;AAAA,qBAAS,IAAAkB,UAAA,EAAT;AAAqB,aAArB;;AAC3C;;AACF;;AACE;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACJ;;;;AA5DyC;;AAAA;;AAIT;;AAAA;;AAGR;;AAAA;;AAGS;;AAAA;;AAoBgD;;AAAA;;AAKjD;;AAAA;;AAa4B;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEKpC;;AAA4D;AAAA;;AAAA;;AAAA;AAAA;;AACpE;;AACF;;;;;;AAEc;;AACV;;AACF;;;;;;;;AAEQ;;AAAiD;AAAA;;AAAA;;AAAA;AAAA;;AACzD;;AACF;;;;;;AAcF;;AACI;;AACI;;AACI;;AAWR;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACM;;AACA;;AACI;;AAAQ;;AAAiB;;AAC7B;;AACJ;;AACA;;AAAK;;AAAmB;;AAC5B;;;;;;AAZM;;AAAA;;AAQc;;AAAA;;AAGX;;AAAA;;;;;;AAGL;;AACJ;;AACF;;;;;;;;;;UCxGGC,mB;AAGX,qCACUhG,WADV,EAEU3H,MAFV,EAGU7D,IAHV,EAISmK,MAJT,EAKUjN,WALV,EAMUD,KANV,EAM+B;AAAA;;AALrB,eAAAuO,WAAA,GAAAA,WAAA;AACA,eAAA3H,MAAA,GAAAA,MAAA;AACA,eAAA7D,IAAA,GAAAA,IAAA;AACD,eAAAmK,MAAA,GAAAA,MAAA;AACC,eAAAjN,WAAA,GAAAA,WAAA;AACA,eAAAD,KAAA,GAAAA,KAAA;AAGV,eAAAwU,OAAA,GAAsB,EAAtB;AAcA,eAAAL,SAAA,GAAY,CAAZ;AACA,eAAAM,UAAA,GAAmB,CAAnB;AAGA,eAAAC,UAAA,GAAY,IAAItU,KAAJ,EAAZ;AAEA,eAAAkF,IAAA,GAAK,IAAIlF,KAAJ,EAAL;AAtBK;;;;iBAwBL,oBAAQ;AACN,iBAAKmB,MAAL,GAAc,KAAKvB,KAAL,CAAW0T,QAAX,CAAoB5N,QAApB,CAA6BG,GAA7B,CAAiC,QAAjC,CAAd;AACA,iBAAK0N,WAAL;AACA,iBAAKgB,UAAL;AACAjU,mBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKY,MAA5B,EAJM,CAMN;AACD;;;iBAED,uBAAc;AAAA;;AACZ,iBAAKgN,WAAL,CAAiBqG,cAAjB,CAAgC,KAAKrT,MAArC,EAA6Cf,SAA7C,CAAuD,UAAC0B,QAAD,EAAmB;AACxExB,qBAAO,CAACC,GAAR,CAAYuB,QAAZ;AACA,qBAAI,CAACqB,IAAL,GAAYrB,QAAQ,CAACtB,GAArB;AACAF,qBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,OAAI,CAAC4C,IAApC;AACA7C,qBAAO,CAACC,GAAR,CAAY,OAAI,CAAC4C,IAAjB,EAAuB,UAAvB;AACA,aALF;AAMD;;;iBACD,6BAAoB;AAAA;;AAClB,iBAAKgL,WAAL,CAAiB8F,iBAAjB,CAAmC,KAAK9S,MAAxC,EAAgDf,SAAhD,CAA0D,UAAC0B,QAAD,EAAmB;AAC3E,kBAAIA,QAAQ,CAACtB,GAAT,IAAgB,IAApB,EAA0B;AACxB,uBAAI,CAACiU,IAAL,GAAY3S,QAAQ,CAACtB,GAArB;;AACA,oBAAI,OAAI,CAACiU,IAAL,KAAcC,SAAlB,EAA6B;AAC7BpU,yBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,OAAI,CAACkU,IAAvC;AACC;AACF;AACF,aAPD;AAQD;;;iBAED,mBAAU;AACR;AACE;AACA,iBAAKjO,MAAL,CAAYwF,QAAZ,CAAqB,CAAC,2BAA2B,KAAK7K,MAAjC,CAArB,EAHM,CAIR;AACD;;;iBAED,sBAAa;AAAA;;AACX,iBAAKgN,WAAL,CACC9E,SADD,CACW,KAAKlI,MADhB,EAECf,SAFD,CAEW,UAAC0B,QAAD,EAAmB;AAC5B,qBAAI,CAACsS,OAAL,GAAetS,QAAQ,CAACtB,GAAxB;AACAF,qBAAO,CAACC,GAAR,CAAY,+BAA+B,OAAI,CAAC6T,OAAhD,EAF4B,CAI5B;AACA;;AACA,mBAAK,IAAMZ,KAAX,IAAoB,OAAI,CAACY,OAAzB,EAAkC;AAChC,uBAAI,CAACK,IAAL,GAAY,OAAI,CAACL,OAAL,CAAaZ,KAAb,CAAZ;AACA,uBAAI,CAACO,SAAL,IAAkB,OAAI,CAACU,IAAL,CAAUf,MAA5B;AACA,uBAAI,CAACW,UAAL,IAAmB,CAAnB;AACA,uBAAI,CAACM,KAAL,GAAa,OAAI,CAACZ,SAAlB;AACA,uBAAI,CAACa,GAAL,GAAW,OAAI,CAACR,OAAL,CAAaZ,KAAb,EAAoBZ,MAA/B;AACA,uBAAI,CAAC1N,IAAL,GAAY,OAAI,CAACkP,OAAL,CAAaZ,KAAb,EAAoBqB,QAAhC;AAEAvU,uBAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,OAAI,CAAC2E,IAAzB;AAEA,oBAAI9D,CAAC,GAAC;AAAC4F,sBAAI,EAAC,OAAI,CAAC9B,IAAX;AAAgB0N,wBAAM,EAAC,OAAI,CAACgC,GAA5B;AAAgClB,wBAAM,EAAC,OAAI,CAACU,OAAL,CAAaZ,KAAb,EAAoBE;AAA3D,iBAAN;;AACA,uBAAI,CAACY,UAAL,CAAgBjT,IAAhB,CAAqBD,CAArB;;AACAd,uBAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B,OAAI,CAAC+T,UAA/B;AACD;;AACD,kBAAI,OAAI,CAACD,UAAL,GAAkB,CAAtB,EAAyB;AACrB,uBAAI,CAACN,SAAL,GAAiB,OAAI,CAACA,SAAL,GAAiB,OAAI,CAACM,UAAvC;AACA,uBAAI,CAACM,KAAL,GAAaG,MAAM,CAACC,UAAP,CAAkB,OAAI,CAAChB,SAAL,GAAiB,EAAnC,EAAuCiB,OAAvC,CAA+C,CAA/C,CAAb;AACD;;AACH,kBAAI,OAAI,CAACjB,SAAL,IAAkB,CAAlB,IAAuB,OAAI,CAACA,SAAL,IAAkB,CAA7C,EAAgD;AAC5C,uBAAI,CAACC,KAAL,GAAa,oBAAb;AACD;;AACH,kBAAI,OAAI,CAACD,SAAL,IAAkB,CAAtB,EAAyB;AACrB,uBAAI,CAACC,KAAL,GAAa,kBAAb;AACD;;AACH,kBAAI,OAAI,CAACD,SAAL,GAAiB,CAArB,EAAwB;AACpB,uBAAI,CAACC,KAAL,GAAa,kBAAb;AACD;AACF,aAnCH;AAoCD;;;iBAGD,mBAAU7S,MAAV,EAAuB;AACrB,gBAAImB,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,IAAtC,EAA4C;AAC1C,mBAAK1C,WAAL,CAAiB2B,IAAjB,CAAsB,oBAAtB,EAA4C,IAA5C,EAAkD;AAChDE,wBAAQ,EAAE;AADsC,eAAlD;AAGAQ,4BAAc,CAACM,OAAf,CAAuBrB,MAAvB,EAA+BA,MAA/B;AACA,mBAAK8T,OAAL,GAAe,IAAf;AACA,mBAAKzO,MAAL,CAAY/D,aAAZ,CAA0B,OAA1B;AACD;;AACDP,0BAAc,CAACM,OAAf,CAAuBrB,MAAvB,EAA+BA,MAA/B;AACA,iBAAK2D,QAAL,GAVqB,CAYrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,W,CAED;;;;iBACA,yBAAgB,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;iBACD,6BAAoB,CAClB;AACA;AACA;AACA;AACA;AACD;;;;;;;yBAvKUqP,mB,EAAmB,yI,EAAA,uH,EAAA,yI,EAAA,mI,EAAA,wI,EAAA,+H;AAAA,O;;;cAAnBA,mB;AAAmB,uC;AAAA,iB;AAAA,gB;AAAA,ghF;AAAA;AAAA;ADbhC;;AACI;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAQ;;AAAmB;;AAC/B;;AAEA;;AACI;;AACJ;;AACA;;AACI;;AAAQ;;AAAmB;;AAC/B;;AACA;;AACI;;AAAQ;;AAAO;;AAAS;;AAC5B;;AACA;;AACI;;AAWN;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AAII;;AACA;;AACI;;AACI;;AACI;;AAAQ;;AAAY;;AACxB;;AACA;;AAKI;;AACJ;;AACJ;;AACA;;AACI;;AAGA;;AAKA;;AAMJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAQ;;AAAiB;;AAC7B;;AACA;;AA4BA;;AACI;;AAGJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACJ;;;;;;AApHyC;;AAAA;;AAKb;;AAAA;;AAIR;;AAAA;;AAGQ;;AAAA;;AAGgB;;AAAA;;AAa5B;;AAAA;;AAEA;;AAAA;;AAoBY;;AAAA;;AAIK;;AAAA,2FAAgB,UAAhB,EAAgB,GAAhB;;AAQW;;AAAA;;AAgBR;;AAAA;;AA6BZ;;AAAA;;;;;;;;;;;;;;;;;;;;;AE9GxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACYoB;;AAAoD;;AAAY;;;;;;;;;;;;AAO5D;;AACA;;AACE;;AACF;;AACA;;AAGE;;AACF;;AACF;;;;;;AAT8D;;AAE1D;;AAAA;;;;;;;;AAlBlB;;AAGI;;AAAqE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACjE;;AACI;;AAEJ;;AACA;;AACI;;AACA;;AAAuB;;AAAmB;;AAC1C;;AAAyB;;AAAwB;;AACjD;;AAAoB;;AAAoB;;AAExC;;AAEI;;AAUJ;;AACJ;;AAEJ;;AACJ;;;;;;;;AAzBiB;;AAAA;;AAIuB;;AAAA;;AACL;;AAAA;;AACE;;AAAA;;AACL;;AAAA;;AAIP;;AAAA;;;;UDXpBe,mB;AAUX,qCAAoBnS,OAApB,EACoBlD,WADpB,EACsDiN,MADtD,EACuE;AAAA;;AADnD,eAAA/J,OAAA,GAAAA,OAAA;AACA,eAAAlD,WAAA,GAAAA,WAAA;AAAkC,eAAAiN,MAAA,GAAAA,MAAA;AATtD,eAAA5J,QAAA,GAAWlD,KAAK,EAAhB;AAKA,eAAAmV,QAAA,GAAWnV,KAAK,EAAhB;AAKO;;;;iBAGP,oBAAQ;AACN;AACA,iBAAKoV,eAAL;AACA,iBAAKrB,SAAL,GAAiB,CAAjB;AAEA,iBAAKN,QAAL;AACA,iBAAK9P,iBAAL;AAED;;;iBAED,2BAAkB;AAAA;;AAChB,iBAAKZ,OAAL,CAAaoI,mBAAb,GAAmC/K,SAAnC,CAEE,UAAC0B,QAAD,EAAmB;AACjBxB,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBuB,QAAxB;AACAxB,qBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBuB,QAAQ,CAACtB,GAA/B;AACA,qBAAI,CAAC0C,QAAL,GAAgBpB,QAAQ,CAACtB,GAAzB;AAGC,aARL,EASE,UAACmB,KAAD,EAAgB;AACd,qBAAI,CAAC9B,WAAL,CAAiB2B,IAAjB,CAAsBG,KAAK,CAACA,KAAN,CAAYF,OAAlC,EAA2C,QAA3C,EAAqD;AAACC,wBAAQ,EAAE;AAAX,eAArD;AACD,aAXH;AAcD;;;iBAEF,uBAAcP,MAAd,EAA8B;AAAA;;AAC3Bb,mBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCY,MAApC;AACA,iBAAK4B,OAAL,CAAakR,iBAAb,CAA+B9S,MAA/B,EAAuCf,SAAvC,CAEE,UAAC0B,QAAD,EAAmB;AACjBxB,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBuB,QAAxB;AACAxB,qBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BuB,QAAQ,CAACtB,GAAvC;AACA,qBAAI,CAACuT,SAAL,GAAiBjS,QAAQ,CAACtB,GAA1B;AAEC,aAPL,EAQE,UAACmB,KAAD,EAAgB;AACd,qBAAI,CAAC9B,WAAL,CAAiB2B,IAAjB,CAAsBG,KAAK,CAACA,KAAN,CAAYF,OAAlC,EAA2C,QAA3C,EAAqD;AAACC,wBAAQ,EAAE;AAAX,eAArD;AACD,aAVH;AAaD;;;iBAED,+BAAsB;AAAA;;AACpBpB,mBAAO,CAACC,GAAR,CAAY,eAAZ;AACA,iBAAKwC,OAAL,CAAaqK,WAAb,GAA2BhN,SAA3B,CAEE,UAAC0B,QAAD,EAAmB;AACjBxB,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBuB,QAAxB;AACAxB,qBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBuB,QAAQ,CAACtB,GAA/B;AACA,qBAAI,CAAC0C,QAAL,GAAgBpB,QAAQ,CAACtB,GAAzB;AAGC,aARL,EASE,UAACmB,KAAD,EAAgB;AACd,qBAAI,CAAC9B,WAAL,CAAiB2B,IAAjB,CAAsBG,KAAK,CAACA,KAAN,CAAYF,OAAlC,EAA2C,QAA3C,EAAqD;AAACC,wBAAQ,EAAE;AAAX,eAArD;AACD,aAXH;AAaD;;;iBAED,oBAAW;AACT,gBAAI,KAAKqS,SAAL,IAAkB,CAAlB,IAAuB,KAAKA,SAAL,IAAkB,CAA7C,EAAgD;AAC9C,mBAAKC,KAAL,GAAa,kBAAb;AACD;;AACD,gBAAI,KAAKD,SAAL,IAAkB,CAAtB,EAAyB;AACvB,mBAAKC,KAAL,GAAa,gBAAb;AACD;;AACD,gBAAI,KAAKD,SAAL,GAAiB,CAArB,EAAwB;AACtB,mBAAKC,KAAL,GAAa,cAAb;AACD;AACF;;;iBAED,oBAAW7Q,IAAX,EAAiB;AACf,gBAAMuD,SAAS,GAAG,KAAKoG,MAAL,CAAYtL,IAAZ,CAAiB,uFAAjB,EAAuC;AACvD;AACA;AACA;AACA;AACAmB,kBAAI,EAAG;AAACxB,sBAAM,EAAEgC,IAAI,CAAChC;AAAd;AALgD,aAAvC,CAAlB;AAOAuF,qBAAS,CAAC8G,WAAV,GAAwBpN,SAAxB,CAAkC,UAACqN,MAAD,EAAY;AAC5CnN,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aAFD;AAGD;;;iBAED,6BAAoB;AAAA;;AAClB,iBAAKwC,OAAL,CAAaY,iBAAb,GAAiCvD,SAAjC,CAA2C,UAACqB,OAAD,EAAa;AACtDnB,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BkB,OAAO,CAAC3B,KAAnC;AACA,qBAAI,CAAC6E,UAAL,GAAkBlD,OAAO,CAAC3B,KAA1B;AACD,aAHD;AAID;;;;;;;yBA1GUoV,mB,EAAmB,yI,EAAA,wI,EAAA,mI;AAAA,O;;;cAAnBA,mB;AAAmB,uC;AAAA,gB;AAAA,e;AAAA,4nB;AAAA;AAAA;ACbhC;;AAEI;;AAAmB;;AACnB;;AACA;;AAEA;;AAEI;;;;AA+BJ;;AACJ;;;;AAhC8B;;AAAA;;;;;;;;;;;;;;;;;;;;;;ACP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaG,e;AAUX,iCAAoB5O,IAApB,EAA8CgL,WAA9C,EAA+E;AAAA;;AAA3D,eAAAhL,IAAA,GAAAA,IAAA;AAA0B,eAAAgL,WAAA,GAAAA,WAAA,CAAiC,CAR/E;;AACQ,eAAAG,aAAA,GAAgB,IAAI,4CAAJ,EAAhB;AACC,eAAA0D,eAAA,GAAkB,yEAAYlK,YAA9B;AACD,eAAAK,OAAA,GAAU,yEAAYrD,QAAtB;AACA,eAAAuJ,WAAA,GAAc;AAAChG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC,8BAAgB;AAAjB,aAAhB;AAAV,WAAd;AAI0E;;;;eAHlF,eAAmB;AACjB,mBAAO,KAAKiG,aAAZ;AACD;;;iBAGD,uBAAczQ,MAAd,EAAyB;AAAA;;AACtBb,mBAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCY,MAAzC;AACAb,mBAAO,CAACC,GAAR,CAAY,sDAAsD,6BAAlE;AACA,mBAAO,KAAKkR,WAAL,CACL7F,IADK,WACG,KAAKH,OADR,cACmB,KAAK6J,eADxB,cAC2CnU,MAD3C,GACqD,EADrD,EACyD;AAACwK,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aADzD,EAELkM,IAFK,CAGJ,2DAAI,YAAM;AACR,qBAAI,CAACF,aAAL,CAAmBG,IAAnB;AACD,aAFD,CAHI,CAAP;AAOF;;;iBACD,6BAAoB;AAClB;AACA;AACA,mBAAO,KAAKN,WAAL,CAAiB5L,GAAjB,WAAwB,KAAK4F,OAA7B,cAAwC,yEAAYJ,YAApD,GAAoE;AAACM,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aAApE,CAAP;AACD;;;iBACD,4BAAgB;AACdtF,mBAAO,CAACC,GAAR,CAAY,qBAAZ,EADc,CAEd;;AACA,mBAAO,KAAKkR,WAAL,CAAiB5L,GAAjB,WAAwB,KAAK4F,OAA7B,cAAwC,yEAAYH,cAApD,GAAsE;AAACK,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aAAtE,CAAP;AACD;;;iBAED,4BAAmBxD,OAAnB,EAAoC;AAAA;;AAClC9B,mBAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,mBAAO,CAACC,GAAR,CAAY,UAAG,KAAKkL,OAAR,cAAmB,yEAAYF,eAA/B,IAAmDnJ,OAA/D,EAFkC,CAGlC;;AACA,mBAAO,KAAKqP,WAAL,WAAwB,UAAG,KAAKhG,OAAR,cAAmB,yEAAYF,eAA/B,IAAmDnJ,OAA3E,EAAoF;AAACuJ,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aAApF,EACNkM,IADM,CAEL,2DAAI,YAAM;AACR,qBAAI,CAACF,aAAL,CAAmBG,IAAnB;AACD,aAFD,CAFK,CAAP;AAMD;;;;;;;yBA5CUsD,e,EAAe,uH,EAAA,+H;AAAA,O;;;eAAfA,e;AAAe,iBAAfA,eAAe,K;AAAA,oBAFd;;;;;;;;;;;;;;;;;ACPd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMU;;AAMA;;AACE;;AACF;;AACA;;AAGE;;AACF;;AACF;;;;;;AAPI;;AAAA;;;;;;AATJ;;AACE;;AACA;;AAeF;;;;;;AAdG;;AAAA;;;;;;AAeH;;AACE;;AACF;;;;;;AACA;;AACA;;AAA0D;;AAAa;;AA4BvE;;AAAgC;;AAAe;;AAC/C;;AACF;;;;;;AA9B4D;;AAAA;;AA4B1B;;AAAA;;;;UD5C3BE,oB;AAGX,sCAA4C5S,IAA5C,EAA+DwL,WAA/D,EAAkGgC,OAAlG,EAAwH;AAAA;;AAA5E,eAAAxN,IAAA,GAAAA,IAAA;AAAmB,eAAAwL,WAAA,GAAAA,WAAA;AAAmC,eAAAgC,OAAA,GAAAA,OAAA;AAQlG,eAAAqF,OAAA,GAAU,IAAIxV,KAAJ,EAAV;AACA,eAAAsU,UAAA,GAAY,IAAItU,KAAJ,EAAZ;AAEA,eAAAkF,IAAA,GAAK,IAAIlF,KAAJ,EAAL;AAVE,eAAKmB,MAAL,GAAcwB,IAAI,CAACxB,MAAnB;AACAb,iBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiC,KAAKY,MAAtC;AACD;;;;iBAED,oBAAQ;AACN,iBAAKsU,UAAL;AACD;;;iBAQD,sBAAU;AAAA;;AAER,iBAAKpC,aAAL,CAAmB,KAAKlS,MAAxB;AACJ,iBAAKgN,WAAL,CAAiB9E,SAAjB,CAA2B,KAAKlI,MAAhC,EAAwCf,SAAxC,CAAkD,UAAC0B,QAAD,EAAmB;AAEnExB,qBAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BuB,QAAQ,CAACtB,GAAxC;AACA,qBAAI,CAACgV,OAAL,GAAa1T,QAAQ,CAACtB,GAAtB;AACAF,qBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BuB,QAAQ,CAACtB,GAAT,CAAa,QAAb,CAA9B;;AACA,mBAAK,IAAIgT,KAAT,IAAkB,OAAI,CAACgC,OAAvB,EAAgC;AAC9B,uBAAI,CAACZ,GAAL,GAAW,OAAI,CAACY,OAAL,CAAahC,KAAb,EAAoBZ,MAA/B;AACA,uBAAI,CAAC1N,IAAL,GAAY,OAAI,CAACsQ,OAAL,CAAahC,KAAb,EAAoBqB,QAAhC;AAEAvU,uBAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,OAAI,CAAC2E,IAAzB;AAEA,oBAAI9D,CAAC,GAAC;AAAC4F,sBAAI,EAAC,OAAI,CAAC9B,IAAX;AAAgB0N,wBAAM,EAAC,OAAI,CAACgC,GAA5B;AAAgClB,wBAAM,EAAC,OAAI,CAAC8B,OAAL,CAAahC,KAAb,EAAoBE;AAA3D,iBAAN;;AACA,uBAAI,CAACY,UAAL,CAAgBjT,IAAhB,CAAqBD,CAArB;;AACAd,uBAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B,OAAI,CAAC+T,UAA/B;AAED;AAEF,aAjBD;AAmBG;;;iBAED,uBAAcnT,MAAd,EAA6B;AAAA;;AAC3Bb,mBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCY,MAAnC;AACA,iBAAKgN,WAAL,CAAiB8F,iBAAjB,CAAmC9S,MAAnC,EAA2Cf,SAA3C,CAEE,UAAC0B,QAAD,EAAmB;AACjBxB,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBuB,QAAxB;AACAxB,qBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BuB,QAAQ,CAACtB,GAAvC;AACA,qBAAI,CAACuT,SAAL,GAAgBjS,QAAQ,CAACtB,GAAzB;AAEC,aAPL;AAWD;;;;;;;yBAvDU+U,oB,EAAoB,gEAGX,wEAHW,C,EAGI,yI,EAAA,wI;AAAA,O;;;cAHxBA,oB;AAAoB,wC;AAAA,gB;AAAA,e;AAAA,6nB;AAAA;AAAA;ACXjC;;AACE;;AACE;;AACE;;AAEE;;AAkBA;;AAGA;;AAiCF;;AACF;;AACF;;AACA;;;;AAzDuG;;AAAA;;AAkBA;;AAAA;;AAG3E;;AAAA;;;;;;;;;;;;;;;;;;;;;ACzB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaG,W;AAuBX,6BAAoBjP,IAApB,EAA8CgL,WAA9C,EAA+E;AAAA;;AAA3D,eAAAhL,IAAA,GAAAA,IAAA;AAA0B,eAAAgL,WAAA,GAAAA,WAAA,CAAiC,CArB/E;;AACQ,eAAAG,aAAA,GAAgB,IAAI,4CAAJ,EAAhB;AAOA,eAAA+D,cAAA,GAAiB,IAAI,4CAAJ,EAAjB;AACA,eAAAlK,OAAA,GAAU,yEAAYrD,QAAtB;AACA,eAAAwN,SAAA,GAAY,IAAI,4CAAJ,EAAZ;AACA,eAAAC,YAAA,GAAe,yEAAYxM,SAA3B,CAUuE,CAR/E;AAEA;;AACQ,eAAAqC,UAAA,GAAa;AACnBC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,8BAAgB;AAAlB,aAAhB;AADU,WAAb;AAOA,eAAAgG,WAAA,GAAc;AAAChG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC,8BAAgB;AAAjB,aAAhB;AAAV,WAAd;AAF0E;;;;eAlBlF,eAAmB;AACjB,mBAAO,KAAKiG,aAAZ;AACD;;;iBAqBM,8BAAkB;AACvB,mBAAO,KAAKnL,IAAL,CAAUZ,GAAV,WAAiB,KAAK4F,OAAtB,+BAAP;AACD;;;iBACM,kCAAyBnI,IAAzB,EAAuCW,MAAvC,EAAyDhB,OAAzD,EAA0E;AAC/E,mBAAO,KAAKwD,IAAL,CAAUZ,GAAV,WAAiB,KAAK4F,OAAtB,kCAAqDnI,IAArD,oBAAmEL,OAAnE,qBAAqFgB,MAArF,EAAP;AACD;;;iBAED,uBAAc;AACZ3D,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EADY,CAEZ;;AACA,mBAAO,KAAKkR,WAAL,CAAiB5L,GAAjB,WAAwB,KAAK4F,OAA7B,cAA+C;AAACE,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aAA/C,CAAP;AACD;;;iBAED,iBAAQzC,IAAR,EAAmB2S,SAAnB,EAAoC;AAAA;;AAClC,mBAAO,KAAKrE,WAAL,CACJ7F,IADI,WACI,yEAAYvD,OADhB,cAC2B,yEAAYO,QADvC,cACmDkN,SADnD,GACgE3S,IADhE,EACsE;AAACwI,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aADtE,EAEJkM,IAFI,CAGH,2DAAI,YAAM;AACR,qBAAI,CAACF,aAAL,CAAmBG,IAAnB;AACD,aAFD,CAHG,CAAP;AAOD;;;iBAED,oBAAW5Q,MAAX,EAAsB;AAAA;;AACpB,mBAAO,KAAKsQ,WAAL,qBACM,yEAAYpJ,OADlB,cAC6B,yEAAYQ,UADzC,cACuD1H,MADvD,GACiE;AAACwK,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aADjE,EAEJkM,IAFI,CAGH,2DAAI,YAAM;AACR,qBAAI,CAACF,aAAL,CAAmBG,IAAnB;AACD,aAFD,CAHG,CAAP;AAOD;;;iBAED,oBAAW5Q,MAAX,EAAwBgC,IAAxB,EAAiC;AAAA;;AAC/B,mBAAO,KAAKsO,WAAL,CACP;AADO,aAEN5F,GAFM,WAEC,yEAAYxD,OAFb,cAEwB,yEAAYS,QAFpC,cAEgD3H,MAFhD,GAE0DgC,IAF1D,EAEgE;AAACwI,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aAFhE,EAGNkM,IAHM,CAIL,2DAAI,YAAM;AACR,qBAAI,CAACF,aAAL,CAAmBG,IAAnB;AACD,aAFD,CAJK,CAAP;AAQD;;;iBAED,oBAAW5Q,MAAX,EAAwBiF,MAAxB,EAAmC;AAAA;;AACjC9F,mBAAO,CAACC,GAAR,CAAY,MAAZ,YAAuB,yEAAY8H,OAAnC,cAA8C,yEAAYU,UAA1D,cAAwE5H,MAAxE,cAAkFiF,MAAlF;AAEA,mBAAO,KAAKqL,WAAL,CACL;AADK,aAEJ5F,GAFI,WAEG,yEAAYxD,OAFf,cAE0B,yEAAYU,UAFtC,cAEoD5H,MAFpD,cAE8DiF,MAF9D,GAEwE,GAFxE,EAE6E;AAACuF,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aAF7E,EAGJkM,IAHI,CAIH,2DAAI,YAAM;AACR,qBAAI,CAACF,aAAL,CAAmBG,IAAnB;AACD,aAFD,CAJG,CAAP;AAQD;;;iBAED,yBAAgB5Q,MAAhB,EAAyBsN,QAAzB,EAAiC;AAAA;;AAC/B,mBAAO,KAAKgD,WAAL,CACL;AADK,aAEJ7F,IAFI,WAEI,yEAAYvD,OAFhB,cAE2B,yEAAYW,YAFvC,cAEuD7H,MAFvD,GAEiEsN,QAFjE,EAE2E;AAAC9C,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAAEtD,YAAY,CAACsD;AAArB,eAAhB;AAAV,aAF3E,EAGJkM,IAHI,CAIH,2DAAI,YAAM;AACR,qBAAI,CAACF,aAAL,CAAmBG,IAAnB;AACD,aAFD,CAJG,CAAP;AAQD;;;iBACD,qBAAYgE,MAAZ,EAAuB;AACrBzV,mBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCwV,MAApC;AACAzV,mBAAO,CAACC,GAAR,CAAY,UAAZ,YAA2B,KAAKkL,OAAhC,4BAAyDsK,MAAzD;AACA,mBAAO,KAAKtP,IAAL,CAAUZ,GAAV,WAAiB,KAAK4F,OAAtB,4BAA+CsK,MAA/C,GACJ,EADI,CAAP;AAED;;;iBAED,2BAAkBtU,OAAlB,EAAgC;AAC9BnB,mBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BkB,OAA3B;AACA,mBAAO,KAAKkU,cAAL,CAAoB5D,IAApB,CAAyB;AAAEjS,mBAAK,EAAE2B;AAAT,aAAzB,CAAP;AACD;;;iBACD,6BAAiB;AACfnB,mBAAO,CAACC,GAAR,CAAY,aAAZ;AACA,mBAAO,KAAKoV,cAAL,CAAoBK,YAApB,EAAP;AACD;;;iBACM,2BAAkB7U,MAAlB,EAA6B;AAElCb,mBAAO,CAACC,GAAR,CAAa,yEAAY6H,QAAZ,GAAuB,GAAvB,GAA6B,yEAAY2C,aAAzC,GAAyD5J,MAAtE;AACA,mBAAO,KAAKsF,IAAL,CAAUZ,GAAV,CACL,yEAAYuC,QAAZ,GAAuB,GAAvB,GAA6B,yEAAY2C,aAAzC,GAAyD5J,MADpD,EAEL,EAFK,CAAP;AAID,W,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACO,qBAAYA,MAAZ,EAAuB;AAC5Bb,mBAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CY,MAA3C;AACAb,mBAAO,CAACC,GAAR,CAAa,yEAAY6H,QAAZ,GAAuB,yEAAYG,cAAnC,GAAoDpH,MAAjE;AACA,mBAAO,KAAKsF,IAAL,CAAUZ,GAAV,CACL,yEAAYuC,QAAZ,GAAuB,yEAAYG,cAAnC,GAAoDpH,MAD/C,EAEL,EAFK,CAAP;AAID;;;iBACM,yBAAgBA,MAAhB,EAAgCwB,IAAhC,EAA4CiD,KAA5C,EAAwD;AAAA;;AAC7DtF,mBAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDY,MAAvD;AACAb,mBAAO,CAACC,GAAR,CAAY,mDAAZ,EAAiEoC,IAAjE;AACArC,mBAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCqF,KAAnC;AACAtF,mBAAO,CAACC,GAAR,CAAY,SAAS,yEAAY6H,QAArB,GAAgC,GAAhC,GAAsC,yEAAYkC,YAAlD,GAAiEnJ,MAA7E;AACA,gBAAM8U,MAAM,GAAGrQ,KAAf;AAEA,mBAAO,KAAKa,IAAL,CACJoF,GADI,CACA,yEAAYzD,QAAZ,GAAuB,GAAvB,GAA6B,yEAAYkC,YAAzC,GAAwDnJ,MADxD,EACgEwB,IADhE,EACsE;AAACgJ,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAALA;AAAD,eAAhB;AAAV,aADtE,EAEJkM,IAFI,CAGH,2DAAI,YAAM;AACR,qBAAI,CAAC6D,cAAL,CAAoB5D,IAApB;AACD,aAFD,CAHG,CAAP;AAOD;;;iBAEM,4BAAmB5Q,MAAnB,EAAmC;AACxC,mBAAO,KAAKsF,IAAL,CAAUZ,GAAV,CAAc,yEAAYuC,QAAZ,GAAuB,yEAAYoC,UAAnC,GAAgDrJ,MAA9D,EAAsE,KAAKwQ,WAA3E,CAAP;AACD;;;iBAED,qCAAyB;AACvBrR,mBAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,mBAAO,CAACC,GAAR,CAAY,KAAKkR,WAAL,CAAiB5L,GAAjB,CAAqB,yEAAY4E,QAAZ,GAAuB,yEAAYS,iBAAxD,EAA2E,KAAKyG,WAAhF,CAAZ;AACA,mBAAO,KAAKF,WAAL,CAAiB5L,GAAjB,CAAqB,yEAAY4E,QAAZ,GAAuB,yEAAYS,iBAAxD,EAA2E,EAA3E,CAAP;AACA;;;iBAEK,mBAAU/J,MAAV,EAA0B;AAC/Bb,mBAAO,CAACC,GAAR,CAAY,iBAAZ,YAAkC,yEAAY6H,QAA9C,cAA0D,KAAKyN,YAA/D,qBAAsF1U,MAAtF;AACA,mBAAO,KAAKsF,IAAL,CAAUZ,GAAV,WAAiB,yEAAYuC,QAA7B,cAAyC,KAAKyN,YAA9C,qBAAqE1U,MAArE,GAA+E,KAAKwQ,WAApF,CAAP;AACD;;;iBAEM,+BAAmB;AACxB,mBAAO,KAAKlL,IAAL,CAAUZ,GAAV,WAAiB,yEAAYuC,QAA7B,cAAyC,yEAAY+C,mBAArD,GAA4E,KAAKwG,WAAjF,CAAP;AACD;;;iBAEM,oBAAWxQ,MAAX,EAA4ByE,KAA5B,EAAwC;AAC7C,mBAAO,KAAKa,IAAL,CAAUZ,GAAV,WAAiB,KAAK4F,OAAtB,4BAA+CtK,MAA/C,GACP;AAACwK,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC/F,qBAAK,EAALA;AAAD,eAAhB;AAAV,aADO,CAAP;AAED;;;iBAEM,wBAAezE,MAAf,EAA+B;AACpC,mBAAO,KAAKsF,IAAL,CAAUZ,GAAV,WAAiB,KAAK4F,OAAtB,4BAA+CtK,MAA/C,GACP,KAAKwQ,WADE,CAAP;AAED;;;;;;;yBAlLU+D,W,EAAW,uH,EAAA,+H;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;;;;;;;;;;;;;ACTd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACDA;;AACI;;AACJ;;;;;;AACA;;;;;;AAAa;;;;;;;;AAUG;;AACI;;AAKA;;AACA;;AACI;;AAEgB;;AAA+B;;AAC/C;;AAGkB;;AAAoC;;AACtD;;AAEkC;;AAA+B;;AACrE;;AACA;;AACI;;AACI;;AACI;;AAK4G;AAAA;;AAAA;;AAAA;;AAAA,8DAA0C,CAA1C,EAA6CvU,MAA7C,EAAqD,QAAV,eAAU,CAAqB,CAArB,CAArD;AAA2E,WAA3E;;AAAiF;;AACnM;;AACE;;AACA;;AAWI;;AACJ;;AACA;;AACI;;AAKgF;AAAA;;AAAA;;AAAA;;AAAA,8DAAyC,CAAzC,EAA4CA,MAA5C,EAAoD,QAAV,eAAU,CAAqB,CAArB,CAApD;AAA0E,WAA1E;;AAA8E;;AAClK;;AACA;;AACA;;AACI;;AAEC;AAAA;;AAAA;;AAAA;;AAAA,yDAAoC,CAApC,EAAuCA,MAAvC;AAAqC,WAArC;;AAAgD;;AAClD;;AACH;;AACJ;;AACJ;;AACJ;;;;;;AAvDsB;;AAAA;;AAKE;;AAAA;;AAIE;;AAAA;;AAGgB;;AAAA;;AAUF;;AAAA;;AAcxB;;AAAA;;AAQwB;;AAAA;;;;;;;;AAc5C;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAAQ;;;;;;;;AA2E/D;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AACnC;;AACkB;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAQ;;AAC3D;;;;;;;;AAvER;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAW;;AAAI;;AACf;;AACA;;AAAoB;;AAAuB;;AAC/C;;AACJ;;AACA;;AACI;;AACI;;AAAW;;AAAY;;AACvB;;AACA;;AAAoB;;AAA0B;;AAClD;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;AAAO;;AAClB;;AACA;;AAAoB;;AAA2B;;AACnD;;AACJ;;AACA;;AACI;;AACI;;AAAW;;AAAQ;;AACnB;;AACA;;AAAoB;;AAA4B;;AACpD;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;AAAO;;AAClB;;AACA;;AAAoB;;AAA2B;;AAEnD;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;AAAI;;AACf;;AACA;;AAAoB;;AAA4B;;AACpD;;AACJ;;AACA;;AACI;;AACI;;AAAW;;AAAS;;AACpB;;AACA;;AAAoB;;AAA6B;;AACrD;;AACJ;;AACJ;;AACA;;AACI;;AAAyF;;AAAK;;AAC9F;;AACI;;AAA6E;AAAA;;AAAA;;AAAA,+BAAa,MAAb;AAAmB,WAAnB;;AAAyC;;AAAI;;AAC1H;;AAA4C;AAAA;;AAAA;;AAAA,+BAAa,MAAb;AAAmB,WAAnB;;AAAyC;;AAAI;;AACzF;;AAA4C;AAAA;;AAAA;;AAAA,+BAAa,OAAb;AAAoB,WAApB;;AAA2C;;AAAK;;AAChG;;AACJ;;AACJ;;AACA;;AAIJ;;AACJ;;;;;;AAlE0F;;AAAA;;AAO2B;;AAAA;;AASN;;AAAA;;AAOnC;;AAAA;;AAQiB;;AAAA;;AASF;;AAAA;;AAOQ;;AAAA;;AAcrE;;AAAA;;;;;;;;AAatB;;AACI;;AAKA;;AACA;;AACI;;AACI;;AAAM;;AAA+B;;AAAO;;AAChD;;AACI;;AACiB;;AAAqC;;AAC1D;;AACA;;AACI;;AACc;;AAAqD;;AACvE;;AACJ;;AACA;;AACI;;AAAwB;AAAA;;AAAA;;AAAA;;AAAA,0DAAoC,CAApC,EAAuCA,MAAvC;AAAqC,WAArC;;AAAgD;;AAAQ;;AACpF;;AACJ;;;;;;AAjBkB;;AAAA;;AAIA;;AAAA;;AAGW;;AAAA;;AAIH;;AAAA;;;;;;AAjB9B;;AACI;;AAuBJ;;;;;;AAvB2B;;AAAA;;;;;;AA9JvC;;AACI;;AACI;;AACI;;AAEU;;AAAkB;;AAC5B;;AACI;;AA8DJ;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AAA8F;;AAAgB;;AAC9G;;AACA;;AACA;;AA0EJ;;AACA;;AACI;;AACI;;AACI;;AAA6G;;AAAa;;AAC9H;;AACA;;AAyBJ;;AACJ;;AACA;;AACI;;AACJ;;AA1LJ;;;;;;AAKsB;;AAAA;;AAEiB;;AAAA;;AA+DF;;AAAA;;AAOyB;;AAAA;;AAgF7B;;AAAA;;;;UDjJpB+U,a;AACX,+BAAqBrW,WAArB,EACqBwO,WADrB,EAEqBzO,KAFrB,EAGqBmD,OAHrB,EAIqBrD,WAJrB,EAKqByW,WALrB,EAMqBC,YANrB,EAMiD;AAAA;;AAN5B,eAAAvW,WAAA,GAAAA,WAAA;AACA,eAAAwO,WAAA,GAAAA,WAAA;AACA,eAAAzO,KAAA,GAAAA,KAAA;AACA,eAAAmD,OAAA,GAAAA,OAAA;AACA,eAAArD,WAAA,GAAAA,WAAA;AACA,eAAAyW,WAAA,GAAAA,WAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACrB,eAAAC,QAAA,GAAW,KAAX;AACA,eAAAC,QAAA,GAAW,KAAX;AAGA,eAAAnT,IAAA,GAAO,EAAP;AACA,eAAArD,KAAA,GAAoB,IAAI,yEAAJ,EAApB;AACO,eAAAuF,SAAA,GAAY,KAAZ;AACP,eAAAjC,KAAA,GAAQ,EAAR;AAEA,eAAAmT,YAAA,GAAe,KAAf;AAKA,eAAA9V,MAAA,GAAcyB,cAAc,CAACzB,MAA7B;AACA,eAAA+V,EAAA,GAAUtU,cAAc,CAACzB,MAAzB;AACA,eAAA+C,KAAA,GAAa,EAAb;AAEA,eAAAiT,WAAA,GAAmB,EAAnB;AACA,eAAAnN,QAAA,GAAW,CAAX;AACA,eAAAoN,QAAA,GAAqB,IAAI,qEAAJ,EAArB;AACA,eAAAC,kBAAA,GAA8B,IAAI,mEAAJ,EAA9B;AACA,eAAAC,IAAA,GAAO,MAAP;AAGA,eAAAC,GAAA,GAAM,CAAN;AAGU,eAAApT,MAAA,GAA4B,IAAI,0DAAJ,EAA5B;AACZ,eAAAqT,MAAA,GAAS,KAAT;AACA,eAAAC,KAAA,GAAiB,IAAI,mEAAJ,EAAjB;AACI,eAAAC,WAAA,GAAc,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWrQ,QAAZ,EAAsB,0DAAWoK,OAAX,CAAmB,cAAnB,CAAtB,CAApB,CAAd;AACA,eAAAkG,IAAA,GAAO,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWtQ,QAAZ,CAApB,CAAP;AACA,eAAAuQ,OAAA,GAAU,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWvQ,QAAZ,CAApB,CAAV;AACA,eAAAmF,OAAA,GAAU,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWnF,QAAZ,CAApB,CAAV;AACA,eAAAwQ,QAAA,GAAW,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWxQ,QAAZ,CAApB,CAAX;AACA,eAAAyQ,IAAA,GAAO,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWzQ,QAAZ,CAApB,CAAP;AACA,eAAA0Q,QAAA,GAAW,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW1Q,QAAZ,CAApB,CAAX;AACA,eAAA2Q,IAAA,GAAO,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW3Q,QAAZ,CAApB,CAAP;AACA,eAAA4Q,IAAA,GAAO,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW5Q,QAAZ,CAApB,CAAP;AACA,eAAA6Q,KAAA,GAAQ,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW7Q,QAAZ,CAApB,CAAR;AACA,eAAA8Q,mBAAA,GAAsB;AACpBC,qBAAS,EAAE,IADS;AAEpBC,sBAAU,EAAE,IAFQ;AAGpB5H,0BAAc,EAAG;AAHG,WAAtB;AA1CkD;;;;iBAgDpD,oBAAW;AAAA;;AACV,iBAAK6H,UAAL;AACA,iBAAKlY,WAAL,CAAiB6M,YAAjB,CAA8BnM,SAA9B,CAAwC,YAAM;AAC7C,qBAAI,CAACoM,gBAAL;;AACA,qBAAI,CAAEqL,aAAN;AACD,aAHA;AAIA,iBAAKC,GAAL,CAAS,KAAKlB,IAAd;AACA,iBAAKpK,gBAAL;AACA,iBAAMqL,aAAN;AACA;;;iBAED,4BAAmB;AAAA;;AACjB,iBAAKnY,WAAL,CAAiB8M,gBAAjB,GAAoCpM,SAApC,CAA8C,UAAC0B,QAAD,EAAmB;AAC/D,qBAAI,CAACrB,MAAL,GAAcqB,QAAQ,CAACtB,GAAvB;AACAF,qBAAO,CAACC,GAAR,CAAY,+BAA+BuB,QAAQ,CAACtB,GAApD;AACA,aAHF;AAID;;;iBAED,yBAAgB;AAAA;;AACZ,iBAAKd,WAAL,CAAiBqY,gBAAjB,GAAoC3X,SAApC,CAA8C,UAACC,QAAD,EAAc;AAC1DC,qBAAO,CAACC,GAAR,CAAY,wBAAZ,EAAuCF,QAAQ,CAACG,GAAhD;AACAF,qBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,OAAI,CAAC4C,IAA/B;AACA,qBAAI,CAACA,IAAL,GAAY9C,QAAQ,CAACG,GAArB;AACAF,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,QAAQ,CAACG,GAAT,CAAa,CAAb,EAAgBuP,cAAhB,CAA+B,CAA/B,EAAkCA,cAAnE;;AAJ0D,yDAK1C,OAAI,CAAC5M,IALqC;AAAA;;AAAA;AAK1D,oEAA2B;AAAA,sBAAhBxC,CAAgB;AACzBL,yBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,CAAC,CAACoP,cAAF,CAAiB,CAAjB,EAAoBA,cAA1C;AACA,yBAAI,CAACzG,QAAL,GAAgB3I,CAAC,CAACoP,cAAF,CAAiB,CAAjB,EAAoBA,cAApC;AACD;AARyD;AAAA;AAAA;AAAA;AAAA;AAS7D,aATC;AAUH;;;iBACD,0BAAiB5O,MAAjB,EAA+B6W,eAA/B,EAAqD;AAAA;;AACnD1X,mBAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,mBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+ByX,eAA/B;AACA,iBAAKP,mBAAL,CAAyBE,UAAzB,GAAsCK,eAAe,CAACC,WAAtD;AACA,iBAAKR,mBAAL,CAAyBC,SAAzB,GAAqCM,eAAe,CAAClI,UAAhB,GAA6BkI,eAAe,CAACjI,cAAlF;AACA,iBAAK0H,mBAAL,CAAyB1H,cAAzB,GAA0CiI,eAAe,CAACjI,cAA1D;AACA,iBAAKrQ,WAAL,CAAiBwY,qBAAjB,CAAuC/W,MAAvC,EAA+C,KAAKsW,mBAApD,EAAyErX,SAAzE,CACE,UAAAuC,IAAI;AAAA,qBAAI,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAJ;AAAA,aADN,EAEE,UAAAhB,KAAK;AAAA,qBAAI,OAAI,CAACkB,WAAL,CAAiBlB,KAAjB,CAAJ;AAAA,aAFP;AAGArB,mBAAO,CAACC,GAAR,CAAY,YAAYY,MAAxB;AACC;;;iBACH,yBAAgBA,MAAhB,EAA8B6W,eAA9B,EAAoD;AAAA;;AAClD1X,mBAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,mBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+ByX,eAA/B;AACA,iBAAKP,mBAAL,CAAyBE,UAAzB,GAAsCK,eAAe,CAACC,WAAtD;AACA,iBAAKR,mBAAL,CAAyBC,SAAzB,GAAqCM,eAAe,CAAClI,UAAhB,GAA6BkI,eAAe,CAACjI,cAAlF;AACA,iBAAK0H,mBAAL,CAAyB1H,cAAzB,GAA0CiI,eAAe,CAACjI,cAA1D;AACA,iBAAKrQ,WAAL,CAAiByY,qBAAjB,CAAuChX,MAAvC,EAA+C,KAAKsW,mBAApD,EAAyErX,SAAzE,CACE,UAAAuC,IAAI;AAAA,qBAAI,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAJ;AAAA,aADN,EAEE,UAAAhB,KAAK;AAAA,qBAAI,OAAI,CAACkB,WAAL,CAAiBlB,KAAjB,CAAJ;AAAA,aAFP;AAIArB,mBAAO,CAACC,GAAR,CAAY,YAAYY,MAAxB;AACD;;;iBAED,oBAAW0C,GAAX,EAAgB;AACd,iBAAKnE,WAAL,CAAiB0Y,mBAAjB,CAAqCvU,GAArC,EAA0CzD,SAA1C,CAAoD,UAACC,QAAD,EAAc;AAChEC,qBAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,QAA7B;AACD,aAFD;AAGA6B,0BAAc,CAACC,UAAf,CAA0B0B,GAA1B;AACAvD,mBAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCsD,GAArC;AACD;;;iBAGD,wBAAelB,IAAf,EAAwB;AACtB,iBAAK0C,SAAL,GAAiB,KAAjB;AACA/E,mBAAO,CAACC,GAAR,CAAYoC,IAAZ;AACA,iBAAK9C,WAAL,CAAiB2B,IAAjB,CAAsBmB,IAAI,CAAClB,OAA3B,EAAqC,IAArC,EAA2C;AAC3CC,sBAAQ,EAAE;AADiC,aAA3C;AAGD;;;iBAED,qBAAYC,KAAZ,EAAwB;AACtB,iBAAK0D,SAAL,GAAiB,KAAjB;AACA,iBAAK1D,KAAL,GAAaA,KAAK,CAACA,KAAN,CAAYF,OAAzB;AACAnB,mBAAO,CAACC,GAAR,CAAYoB,KAAZ;AACArB,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKoB,KAA1B;AACA,iBAAK9B,WAAL,CAAiB2B,IAAjB,CAAsB,KAAKG,KAA3B,EAAkC,IAAlC,EAAwC;AACxCD,sBAAQ,EAAE;AAD8B,aAAxC;AAGD;;;iBAED,yBAAgB;AAAA;;AACd,iBAAKyU,WAAL,CAAiBkC,SAAjB,GAA6BjY,SAA7B,CAAuC,UAACC,QAAD,EAAc;AACnDC,qBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,QAAvB;;AADmD,0DAEnCA,QAAQ,CAACG,GAF0B;AAAA;;AAAA;AAEnD,uEAA8B;AAAA,sBAAnBG,CAAmB;;AAC5B,sBAAIA,CAAC,CAAC2X,WAAF,KAAkB,MAAlB,IAA4B,OAAI,CAACC,YAAL,KAAsB,MAAtD,EAA8D;AAC5D,2BAAI,CAACC,gBAAL,CAAsB7X,CAAtB;;AACAL,2BAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCI,CAAtC;AACA,2BAAI,CAAC8X,QAAL,GAAgB9X,CAAC,CAAC+X,SAAlB;AACD,mBAJD,MAIO,IAAI/X,CAAC,CAAC2X,WAAF,KAAkB,MAAlB,IAA4B,OAAI,CAACC,YAAL,KAAsB,MAAtD,EAA8D;AACnE,2BAAI,CAACC,gBAAL,CAAsB7X,CAAtB;;AACAL,2BAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCI,CAAtC;AACA,2BAAI,CAAC8X,QAAL,GAAgB9X,CAAC,CAAC+X,SAAlB;AACD,mBAJM,MAIA,IAAI/X,CAAC,CAAC2X,WAAF,KAAkB,OAAlB,IAA6B,OAAI,CAACC,YAAL,KAAsB,OAAvD,EAAgE;AACrE,2BAAI,CAACC,gBAAL,CAAsB7X,CAAtB;;AACAL,2BAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCI,CAAtC;AACA,2BAAI,CAAC8X,QAAL,GAAgB9X,CAAC,CAAC+X,SAAlB;AACD;AACF;AAhBkD;AAAA;AAAA;AAAA;AAAA;AAiBpD,aAjBD;AAkBD;;;iBAGD,0BAAiBC,UAAjB,EAAsC;AACpC,iBAAK1B,IAAL,CAAUzI,QAAV,CAAmBmK,UAAU,CAAC3R,IAA9B;AACA,iBAAKgQ,WAAL,CAAiBxI,QAAjB,CAA0BmK,UAAU,CAAC3B,WAArC;AACA,iBAAKE,OAAL,CAAa1I,QAAb,CAAsBmK,UAAU,CAACzB,OAAjC;AACA,iBAAKC,QAAL,CAAc3I,QAAd,CAAuBmK,UAAU,CAACxB,QAAlC;AACA,iBAAKrL,OAAL,CAAa0C,QAAb,CAAsBmK,UAAU,CAAC7M,OAAjC;AACA,iBAAKsL,IAAL,CAAU5I,QAAV,CAAmBmK,UAAU,CAACvB,IAA9B;AACA,iBAAKC,QAAL,CAAc7I,QAAd,CAAuBmK,UAAU,CAACtB,QAAlC;AACA,iBAAKL,WAAL,CAAiBxI,QAAjB,CAA0BmK,UAAU,CAAC3B,WAArC;AACD;;;iBAED,qBAAY;AACV,iBAAKD,KAAL,CAAW/P,IAAX,GAAkB,KAAKiQ,IAAL,CAAUzT,KAA5B;AACAlD,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKwW,KAAtC;AACD;;;iBACH,kBAAS;AACP,gBAAK,KAAKD,MAAL,KAAgB,KAArB,EAA4B;AAC1B,mBAAKA,MAAL,GAAc,IAAd;AACD,aAFD,MAEO,IAAK,KAAKA,MAAL,KAAgB,IAArB,EAA2B;AAChC,mBAAKA,MAAL,GAAc,KAAd;AACD;AACF;;;iBAED,eAAM;AACJ,gBAAK,KAAKT,QAAL,KAAkB,KAAvB,EAA8B;AAC5B,mBAAKA,QAAL,GAAgB,IAAhB;AACD,aAFD,MAEO,IAAK,KAAKA,QAAL,KAAkB,IAAvB,EAA6B;AAClC,mBAAKA,QAAL,GAAgB,KAAhB;AACD;AACF;;;iBAED,sBAAa;AACb,iBAAK,IAAI1V,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,cAAc,CAACzB,MAAnC,EAA2CE,CAAC,EAA5C,EAAgD;AAC9C,kBAAMkD,GAAG,GAAG3B,cAAc,CAAC2B,GAAf,CAAmBlD,CAAnB,CAAZ;AACA,mBAAK6C,KAAL,CAAW7C,CAAX,IAAgBuB,cAAc,CAACK,OAAf,CAAuBsB,GAAvB,CAAhB;AACAvD,qBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBsD,GAAnB;AACD;AAEA;;;iBACA,aAAI+S,IAAJ,EAAU;AACT,iBAAK2B,YAAL,GAAoB3B,IAApB;AACA,iBAAKG,KAAL,CAAW/P,IAAX,GAAmB1E,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAnB;AACA,iBAAKwU,KAAL,CAAWC,WAAX,GAA0B1U,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA1B;AAEA,iBAAKkW,QAAL,GAAgB,IAAhB;AACA,iBAAKD,gBAAL,CAAsB,KAAKzB,KAA3B;AACA,iBAAK6B,aAAL;AACAtY,mBAAO,CAACC,GAAR,CAAY,oBAAoBqW,IAAhC;AACD;;;iBAGD,kBAAU1R,IAAV,EAAqB;AACnB,iBAAK,IAAIvE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,cAAc,CAACzB,MAAnC,EAA2CE,CAAC,EAA5C,EAAgD;AAC9C,kBAAMkD,GAAG,GAAG3B,cAAc,CAAC2B,GAAf,CAAmBlD,CAAnB,CAAZ;AACA,mBAAK6C,KAAL,CAAW7C,CAAX,IAAgBuB,cAAc,CAACK,OAAf,CAAuBsB,GAAvB,CAAhB;AACAvD,qBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBsD,GAAnB;AACAvD,qBAAO,CAACC,GAAR,CAAY,gBAAgB2E,IAA5B;AACA5E,qBAAO,CAACC,GAAR,CAAY,QAAQ,KAAKsY,GAAzB;AACH;AACA;;;iBACD,oBAAW1X,MAAX,EAAwB;AAAA;;AACtB,iBAAKkE,SAAL,GAAiB,IAAjB;AACA/E,mBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BY,MAA3B;AACAb,mBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKuL,OAAL,CAAatI,KAApC;AACA,iBAAK4S,YAAL,CAAkB0C,UAAlB,CAA6B3X,MAA7B,EAAqC,KAAKsX,QAA1C,EAAoDrY,SAApD,CACE,UAAAuC,IAAI;AAAA,qBAAI,OAAI,CAACoW,0BAAL,CAAgCpW,IAAhC,CAAJ;AAAA,aADN,EAEE,UAAAhB,KAAK;AAAA,qBAAI,OAAI,CAACkB,WAAL,CAAiBlB,KAAjB,CAAJ;AAAA,aAFP;AAID;;;iBACC,oCAA2BgB,IAA3B,EAAoC;AAClC,iBAAK0C,SAAL,GAAiB,KAAjB;AACA/E,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBoC,IAApB;AACAT,0BAAc,CAACC,UAAf,CAA0BQ,IAAI,CAACnC,GAAL,CAASI,SAAT,CAAmB,CAAnB,EAAsBO,MAAhD;AACA,iBAAKtB,WAAL,CAAiB2B,IAAjB,CAAsBmB,IAAI,CAAClB,OAA3B,EAAqC,IAArC,EAA2C;AACzCC,sBAAQ,EAAE;AAD+B,aAA3C;AAGA,iBAAK9B,KAAL,CAAW6C,aAAX,CAAyB,UAAzB;AACD;;;iBACH,4BAAmB;AACjB,iBAAKsU,KAAL,CAAW/P,IAAX,GAAkB,KAAKiQ,IAAL,CAAUzT,KAA5B;AACA,iBAAKuT,KAAL,CAAWI,QAAX,GAAsB,KAAKA,QAAL,CAAc3T,KAApC;AACA,iBAAKuT,KAAL,CAAWjL,OAAX,GAAqB,KAAKA,OAAL,CAAatI,KAAlC;AACA,iBAAKuT,KAAL,CAAWG,OAAX,GAAqB,KAAKA,OAAL,CAAa1T,KAAlC;AACA,iBAAKuT,KAAL,CAAWC,WAAX,GAAyB,KAAKA,WAAL,CAAiBxT,KAA1C;AACA,iBAAKuT,KAAL,CAAWK,IAAX,GAAkB,KAAKA,IAAL,CAAU5T,KAA5B;AACA,iBAAKuT,KAAL,CAAWM,QAAX,GAAsB,KAAKA,QAAL,CAAc7T,KAApC;;AACA,gBAAI,KAAKiV,QAAL,KAAkB,IAAlB,IAA0B,KAAKA,QAAL,KAAkB/D,SAAhD,EAA2D;AACzD,mBAAKqC,KAAL,CAAWH,IAAX,GAAkB,KAAK2B,YAAvB;AACAjY,qBAAO,CAACC,GAAR,CAAY,mCAAmC,KAAKwW,KAApD;AACA,mBAAKZ,WAAL,CAAiB6C,SAAjB,CAA2B,KAAKjC,KAAhC,EAAuC3W,SAAvC,CAAiD,UAACC,QAAD,EAAc;AAC/DC,uBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAA9B;AACA0B,sBAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,eAHC;AAIF,aAPA,MAOM;AACN,mBAAK8U,KAAL,CAAWuB,WAAX,GAAyB,KAAKC,YAA9B;AACAjY,qBAAO,CAACC,GAAR,CAAY,yBAAZ,EAA0C,KAAKwW,KAAL,CAAWuB,WAArD;AACA,mBAAKvB,KAAL,CAAW2B,SAAX,GAAuB,KAAKD,QAA5B;AACAnY,qBAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C,KAAKwW,KAAnD;AACA,mBAAKZ,WAAL,CAAiB8C,YAAjB,CAA8B,KAAKlC,KAAnC,EAA0C3W,SAA1C,CAAoD,UAACC,QAAD,EAAc;AAC/DC,uBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,QAA/B;AACD,eAFF;AAGA;AACD;;;;;;;yBApQY6V,a,EAAa,wI,EAAA,2H,EAAA,uH,EAAA,yI,EAAA,yI,EAAA,yI,EAAA,qI;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,ggJ;AAAA;AAAA;AClB1B;;AAGA;;AAEA;;AACA;;;;AANM;;AAGsB;;AAAA;;AAGC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLzB;;AACI;;AACJ;;;;;;AAkBY;;AACI;;AAAO;;AAAW;;AAA2E;;AAAY;;AAC7G;;;;;;;;AADsB;;AAAA;;;;;;AAF1B;;AACI;;AAGJ;;;;;;;;AAHU;;AAAA;;;;;;AAMN;;AACI;;AAAO;;AAAW;;AAAkC;;AAAY;;AACpE;;;;;;AACA;;AACI;;AAAO;;AAAW;;AAAkC;;AAAY;;AACpE;;;;;;AANJ;;AACI;;AAGA;;AAGJ;;;;;;;;AANU;;AAAA;;AAGA;;AAAA;;;;;;AAKN;;AACI;;AAAO;;AAAW;;AAAkC;;AAAY;;AACpE;;;;;;AACA;;AACI;;AAAO;;AAAW;;AAAwF;;AAAY;;AAC1H;;;;;;AANJ;;AACI;;AAGA;;AAGJ;;;;;;;;AANU;;AAAA;;AAGA;;AAAA;;;;;;AAKN;;AACI;;AAAO;;AAAW;;AAAkC;;AAAY;;AACpE;;;;;;AACA;;AACI;;AAAO;;AAAW;;AAA2C;;AAAY;;AAC7E;;;;;;AANJ;;AACI;;AAGA;;AAGJ;;;;;;;;AANU;;AAAA;;AAGA;;AAAA;;;;;;;;AA3Bd;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA,mBAAwB,eAAxB;AAA2C,WAA3C;;AAClB;;AAMA;;AAQA;;AAQA;;AAWA;;AAEI;;AAA+D;;AAAS;;AACxE;;AAAkE;;AAAW;;AAC7E;;AACI;;AAAW;;AAAe;;AAC1B;;AAAsE;AAAA;;AAAA;;AAAA;AAAA;;AAAtE;;AACA;;AAAW;;AAAwB;;AAEvC;;AACJ;;AACA;;AACI;;AAAW;;AAAgB;;AAC3B;;AAAgE;AAAA;;AAAA;;AAAA;AAAA;;AAAhE;;AACA;;AAA4C;;AAAK;;AACjD;;AAAW;;AAAyB;;AACxC;;AACA;;AACI;;AACI;;AAAW;;AAAc;;AACzB;;AAA2E;AAAA;;AAAA;;AAAA;AAAA;;AAA3E;;AACA;;AAAW;;AAA4B;;AAC3C;;AACA;;AACI;;AAAW;;AAAgB;;AAC3B;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AACA;;AAAoB;;AAA2B;;AACnD;;AACJ;;AACA;;AACI;;AAAW;;AAAwB;;AACnC;;AAAqD;AAAA;;AAAA;;AAAA;AAAA;;AAArD;;AACA;;AAA4C;;AAAK;;AACjD;;AAAW;;AAAyB;;AACxC;;AACA;;AAAiC;;AAAW;;AAC5C;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAC3C;;AAAmE;;AAAK;;AAAoB;;AAC5F;;AAAsE;;AAAO;;AAAoB;;AACrG;;AAEA;;AACA;;AACA;;AACI;;AASqE;;AAAQ;;AACjF;;AACJ;;;;;;;;;;;;;;;;AAxFU;;AAAA;;AAMA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAa2C;;AAAA;;AAAkB;;AAAA;;AACjB;;AAAA;;AAAoB;;AAAA;;AAGQ;;AAAA;;AAOV;;AAAA;;AAOe;;AAAA;;AAKsE;;AAAA;;AAA1I;;AAM0C;;AAAA;;AAKV;;AAAA;;AAiBzC;;AAAA;;;;;;AAtGd;;AACI;;AAEI;;AACI;;AACI;;AACJ;;AACA;;AAAkB;;AAAS;;AAC/B;;AACJ;;AACA;;AAEA;;AAAI;;AAAmB;;AAGvB;;AA0FJ;;;;;;AA1FyE;;AAAA;;;;UCRhEgD,qB;AAYX,uCAAoBhU,IAApB,EACoBtF,KADpB,EAEoBuF,WAFpB,EAE4C;AAAA;;AAFxB,eAAAD,IAAA,GAAAA,IAAA;AACA,eAAAtF,KAAA,GAAAA,KAAA;AACA,eAAAuF,WAAA,GAAAA,WAAA;AAbb,eAAAxD,KAAA,GAAQ,IAAR;AACP,eAAAF,OAAA,GAAU,IAAV;AACO,eAAA0X,SAAA,GAAY,KAAZ;AACA,eAAA7T,IAAA,GAAO;AACZ0B,gBAAI,EAAE,IADM;AAEZzB,iBAAK,EAAE,IAFK;AAGZwI,oBAAQ,EAAE,IAHE;AAIZtI,2BAAe,EAAE,IAJL;AAKZ2T,wBAAY,EAAE,IALF;AAMZtR,gBAAI,EAAE;AANM,WAAP;AAYN;;;;iBACD,oBAAW,CACV;;;iBACD,qBAAYnG,KAAZ,EAAmB;AACjB,iBAAKwX,SAAL,GAAiB,KAAjB;AACA,iBAAKxX,KAAL,GAAaA,KAAK,CAACA,KAAN,CAAYF,OAAzB;AACAnB,mBAAO,CAACC,GAAR,CAAYoB,KAAZ;AACA,iBAAKwD,WAAL,CAAiB3D,IAAjB,CAAsB,KAAKG,KAA3B,EAAkC,IAAlC,EAAwC;AACtCD,sBAAQ,EAAE;AAD4B,aAAxC;AAGD;;;iBACD,oBAAW;AAAA;;AACT,iBAAKyX,SAAL,GAAiB,IAAjB;AACA,iBAAKjU,IAAL,CAAUmU,MAAV,CAAiB,KAAK/T,IAAtB,EAA4BlF,SAA5B,CACE,UAAAuC,IAAI;AAAA,qBAAI,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAJ;AAAA,aADN,EAEE,UAAAhB,KAAK;AAAA,qBAAI,OAAI,CAACkB,WAAL,CAAiBlB,KAAjB,CAAJ;AAAA,aAFP;AAID;;;iBACD,wBAAegB,IAAf,EAAqB;AACnB,iBAAKlB,OAAL,GAAekB,IAAI,CAAClB,OAApB;AACA,iBAAK0X,SAAL,GAAiB,KAAjB;AACA7Y,mBAAO,CAACC,GAAR,CAAYoC,IAAZ;AACA,iBAAK/C,KAAL,CAAW6C,aAAX,CAAyB,QAAzB;AACA,iBAAK0C,WAAL,CAAiB3D,IAAjB,CAAsB,+BAAtB,EAAuD,IAAvD,EAA6D;AAC3DE,sBAAQ,EAAE;AADiD,aAA7D;AAID;;;;;;;yBA3CUwX,qB,EAAqB,yI,EAAA,uH,EAAA,wI;AAAA,O;;;cAArBA,qB;AAAqB,yC;AAAA,gB;AAAA,e;AAAA,wvE;AAAA;AAAA;ADXlC;;AACI;;AAGA;;AA0GJ;;;;AA7GU;;AAAA;;AAGiB;;AAAA;;;;;;;;;;;;;;;;;;;;;AEJ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAkBA;;;AAEA,UAAMI,MAAM,GAAW,CAErB;AACEC,YAAI,EAAE,EADR;AACYC,kBAAU,EAAE,OADxB;AAEEC,iBAAS,EAAE;AAFb,OAFqB,EAMrB;AAACF,YAAI,EAAE,OAAP;AAAgBG,iBAAS,EAAE;AAA3B,OANqB,EAOrB;AAACH,YAAI,EAAE,MAAP;AAAeG,iBAAS,EAAE;AAA1B,OAPqB,EAQrB;AAACH,YAAI,EAAE,UAAP;AAAmBG,iBAAS,EAAE;AAA9B,OARqB,EASrB;AAACH,YAAI,EAAE,wBAAP;AAAiCG,iBAAS,EAAE;AAA5C,OATqB,EAUrB;AAACH,YAAI,EAAE,iBAAP;AAA0BG,iBAAS,EAAE;AAArC,OAVqB,EAWrB;AAACH,YAAI,EAAE,OAAP;AAAgBG,iBAAS,EAAE;AAA3B,OAXqB,EAYrB;AAACH,YAAI,EAAE,QAAP;AAAiBG,iBAAS,EAAE;AAA5B,OAZqB,EAarB;AAACH,YAAI,EAAE,MAAP;AAAeG,iBAAS,EAAE;AAA1B,OAbqB,EAcrB;AAACH,YAAI,EAAE,UAAP;AAAmBG,iBAAS,EAAE;AAA9B,OAdqB,EAerB;AAACH,YAAI,EAAE,6BAAP;AAAsCG,iBAAS,EAAE;AAAjD,OAfqB,EAgBrB;AAACH,YAAI,EAAE,YAAP;AAAqBG,iBAAS,EAAE;AAAhC,OAhBqB,EAiBrB;AAACH,YAAI,EAAE,oBAAP;AAA6BG,iBAAS,EAAE;AAAxC,OAjBqB,EAkBrB;AAACH,YAAI,EAAE,aAAP;AAAsBG,iBAAS,EAAE;AAAjC,OAlBqB,EAmBrB;AAACH,YAAI,EAAE,OAAP;AAAgBG,iBAAS,EAAE;AAA3B,OAnBqB,EAoBrB;AAACH,YAAI,EAAE,UAAP;AAAmBG,iBAAS,EAAE;AAA9B,OApBqB,EAqBrB;AAACH,YAAI,EAAE,oCAAP;AAA6CG,iBAAS,EAAE;AAAxD,OArBqB,EAsBrB;AAACH,YAAI,EAAE,YAAP;AAAqBG,iBAAS,EAAE;AAAhC,OAtBqB,EAuBrB;AAACH,YAAI,EAAE,uBAAP;AAAgCG,iBAAS,EAAE;AAA3C,OAvBqB,EAwBrB;AAACH,YAAI,EAAE,cAAP;AAAuBG,iBAAS,EAAE;AAAlC,OAxBqB,EAyBrB;AAACH,YAAI,EAAE,YAAP;AAAqBG,iBAAS,EAAE;AAAhC,OAzBqB,EA0BrB;AAACH,YAAI,EAAE,aAAP;AAAsBG,iBAAS,EAAE;AAAjC,OA1BqB,CA2BrB;AA3BqB,OAAvB;;UAkCaC,gB;;;;;yBAAAA,gB;AAAgB,O;;;cAAhBA;;;kBAHF,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,C,EACC,4D;;;;6HAECK,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC/CXE,Y;AAGX,gCAAc;AAAA;;AAFP,eAAAhM,UAAA,GAAa,KAAb;AACA,eAAAiM,QAAA,GAAW,KAAX;AACU;;;;iBACV,gBAAOnX,IAAP,EAAa;AAClB,iBAAKoX,GAAL,CAASpX,IAAT;AACD,W,CACD;;;;iBACO,aAAIA,IAAJ,EAAU;AACfL,wBAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BG,IAAI,CAACiD,KAAnC;AACAtD,wBAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BG,IAAI,CAACnC,GAAL,CAAS+E,KAAvC;AACAjD,wBAAY,CAACE,OAAb,CAAqB,MAArB,EAA6BG,IAAI,CAACnC,GAAL,CAASwG,IAAtC;AACA1E,wBAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BG,IAAI,CAACnC,GAAL,CAAS4Y,YAAvC;AACD,W,CACD;;;;iBACM,eAAM;AACX,mBAAO9W,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAP;AACA,W,CACD;;;;iBACA,kBAAS;AACPD,wBAAY,CAACH,UAAb,CAAwB,OAAxB;AACAG,wBAAY,CAACH,UAAb,CAAwB,OAAxB;AACAG,wBAAY,CAACH,UAAb,CAAwB,MAAxB;AACAG,wBAAY,CAACH,UAAb,CAAwB,MAAxB;AACAG,wBAAY,CAACH,UAAb,CAAwB,OAAxB;AACAD,0BAAc,CAAC8X,KAAf;AACD;;;iBACD,iBAAQxW,KAAR,EAAwB;AACxB,gBAAK,KAAKqC,GAAL,MAAc,IAAnB,EAAyB;AACvB,qBAAO,KAAKiU,QAAL,GAAgB,IAAvB;AACD;AACA;;;iBACD,wBAAe;AACf,mBAAO,KAAKnN,OAAL,CAAa,KAAKmN,QAAlB,CAAP;AACC;;;;;;;yBAlCUD,Y;AAAY,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGd,UAAI,sEAAY1R,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyB8R,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAI5Z,OAAO,CAACqB,KAAR,CAAcuY,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACVA,eAASC,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,8BAAwB,CAACW,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["<app-toolbar></app-toolbar>\n<br><br>\n<div role=\"combobox\" flex=\"column\" style=\"margin-left: 16%;\">\n    <mat-card class=\"matcard2\">\n        <div>My WishList book&nbsp;({{ countbook }}) </div><br><br>\n        <!-- <div >My WishList&nbsp;({{ countbook }})</div> -->\n        <div *ngFor=\"let book of WishListdetails\">\n            <div *ngIf=\"book != null\">\n                <div class=\"cartdetails\" style=\"margin-left: 2%;\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                    <!-- <img class=\"bookimg\" src=\"assets/images/Image 11@2x.png\" /> -->\n                    <img class=\"bookimg\" src=\"assets\\bookimage\\{{book.image}}\" />\n                    <div class=\"bookdetails\">\n                        <div class=\"booktitle\" style=\"word-wrap: break-word;\">\n                            <!-- Don't Make Me Think -->\n                            {{ book.bookName }}\n                        </div>\n\n                        <div class=\"sub\" style=\"word-wrap: break-word;\">\n                            {{ book.authorName }}\n                        </div>\n                        <div class=\"price\" style=\"word-wrap: break-word;\">\n                            <!-- Rs. 1500 -->\n                            Rs. {{ book.price }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div fxLayoutAlign=\"start end\" fxLayout=\"row wrap\" style=\"margin-left: 12%; margin-bottom: 2%;\">\n                <!-- <button\n            fxLayout=\"column\"\n            fxLayoutAlign=\"end start\"\n            style=\"\n              justify-content: flex-center;\n              margin-bottom: 22px;\n              background-color: white;\n              border: none;\n              outline: none;\n              cursor: pointer;\n            \"\n            class=\"grab\"\n            (click)=\"addToWish(book.bookId)\"\n    >\n            <div style=\"font: 18px/15px Lato; flex-wrap: wrap;\">\n              &nbsp; Add To Cart\n            </div>\n          </button> -->\n\n                <!-- <button\n            style=\"\n              margin-bottom: 22px;\n              background-color: white;\n              border: none;\n              outline: none;\n              color: red;\n              cursor: pointer;\n            \"\n            class=\"grab\"\n            (click)=\"remoiveFromWish(book.bookId)\"\n          >\n            <div style=\"font: 18px/15px Lato; flex-wrap: wrap;\" >\n              &nbsp; Remove\n            </div>\n          </button> -->\n                <button mat-raised-button class=\"button2\" (click)=\"addtobag(book.bookId)\">\n            AddTocart\n          </button>\n                <button mat-raised-button class=\"button\" (click)=\"remoiveFromWish(book.bookId)\">\n            Remove\n          </button>\n            </div>\n        </div>\n    </mat-card>\n</div>\n<br><br>\n<div style='margin-top: 330px;'>\n    <app-footer></app-footer>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { WishlistService } from 'src/app/Service/wishlist.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CartService } from 'src/app/Service/cart.service';\n\n@Component({\n  selector: 'app-wish',\n  templateUrl: './wish.component.html',\n  styleUrls: ['./wish.component.scss']\n})\nexport class WishComponent implements OnInit {\n\n  constructor( private cartService: CartService, private wishlistService: WishlistService , private route: Router,\n               private matSnackBar: MatSnackBar) { }\n\n  // tslint:disable-next-line: variable-name\n  book_id: number;\n  error: any;\n  books = [];\n  WishListdetails = new Array<any>();\n\n  countbook: number;\n\n  bookcount: number;\n  no: number;\n  ngOnInit(): void {\n    this.booksFromWishList();\n    this.BookCount();\n  }\n\n  booksFromWishList() {\n    this.wishlistService.getWishllistBooks().subscribe((Response) => {\n      console.log('no of books in array ' + Response.obj.length);\n      this.countbook = Response.obj.length;\n      console.log('wishlist books' , Response.obj);\n      console.log('---response', Response);\n      this.books = Response.obj;\n\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i < Response.obj.length; i++) {\n\n      console.log('bookName : ' +  Response.obj[0].booksList[0].bookName);\n      console.log('bookDetails : ' +  Response.obj[0].booksList[0].bookDetails);\n      console.log('authorName : ' +  Response.obj[0].booksList[0].authorName);\n      console.log('noOfBooks : ' +  Response.obj[0].booksList[0].noOfBooks);\n      console.log('image : ' +  Response.obj[0].booksList[0].image);\n      console.log('price : ' +  Response.obj[0].booksList[0].price);\n      console.log('bookId : ' +  Response.obj[0].booksList[0].bookId);\n\n      console.log('books are ' + this.books);\n\n      const p = {bookName: Response.obj[i].booksList[0].bookName , bookDetails: Response.obj[i].bookDetails,\n         authorName: Response.obj[i].booksList[0].authorName,\n        noOfBooks: Response.obj[i].booksList[0].noOfBooks,\n        image: Response.obj[i].booksList[0].image,  price: Response.obj[i].booksList[0].price ,\n        bookId: Response.obj[i].booksList[0].bookId\n      };\n\n      this.WishListdetails.push(p);\n      console.log('after push ', this.WishListdetails);\n    }\n\n     });\n\n  }\n  BookCount() {\n    this.wishlistService.getWishlistCount().subscribe(\n      (Response: any) => {\n        console.log('book count = ' + Response.obj);\n        this.bookcount = Response.obj;\n        this.matSnackBar.open(Response.message, 'undo', { duration: 2500 });\n      },\n      (error: any) => {\n        console.error(error);\n        console.log(error.error.message);\n        this.matSnackBar.open(error.error.message, 'undo', { duration: 2500 });\n      }\n    );\n  }\n\n  remoiveFromWish(BookId: any) {\n    console.log('removeing bookId ' + BookId);\n\n    this.wishlistService.removeFromWishList(BookId).subscribe(\n      (response: any) => {\n\n        this.matSnackBar.open('Book removed from wish list', 'success', {duration: 5000});\n        window.location.reload();\n        sessionStorage.removeItem(BookId);\n        },\n      (error: any) => {\n        this.matSnackBar.open(error.error.message, 'failed', {duration: 5000});\n      }\n    );\n  }\n\n  addToWish(orderId: any) {\n    console.log('removeing bookId ' + orderId);\n\n    this.wishlistService.addToWishlist(orderId).subscribe(\n      (response: any) => {\n        this.matSnackBar.open('Book removed from wish list', 'success', {duration: 5000});\n\n        },\n      (error: any) => {\n        this.matSnackBar.open(error.error.message, 'failed', {duration: 5000});\n      }\n    );\n  }\n\n\n  addtobag( bookId: any) {\n    if (localStorage.getItem('token') === null) {\n      this.matSnackBar.open('Please Login first', 'ok', {\n        duration: 5000\n      });\n      sessionStorage.setItem(bookId, bookId);\n      this.route.navigateByUrl('login');\n    }\n\n    sessionStorage.setItem(bookId, bookId);\n\n    this.cartService.addToCart(bookId).subscribe(\n      data => this.handleResponse(data),\n      error => this.handleError(error)\n    );\n  }\n  handleResponse(data: any) {\n    console.log(data);\n    window.location.reload();\n    this.matSnackBar.open('Book added successfully Into Cart' , 'ok', {\n    duration: 5000\n  });\n}\n\nhandleError(error: any) {\n  this.error = error.error.message;\n  console.log(error);\n  window.location.reload();\n  this.matSnackBar.open(this.error, 'ok', {\n  duration: 5000\n});\n}\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { BookService } from 'src/app/Service/book.service';\nimport {MatSnackBarModule, MatSnackBar} from '@angular/material/snack-bar';\nimport { BookModule } from 'src/app/Model/book/book.module';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Router } from '@angular/router';\nimport { CartService } from 'src/app/Service/cart.service';\nimport { WishlistService } from 'src/app/Service/wishlist.service';\n@Component({\n  selector: 'app-displaybook',\n  templateUrl: './displaybook.component.html',\n  styleUrls: ['./displaybook.component.scss']\n})\nexport class DisplaybookComponent implements OnInit {\n  bookSearch: any;\n  selectedValue = 'relevance';\n  orderBy = 'asc';\n  boo: any;\n  error = null;\n  bookList = Array<any>();\n  book: BookModule = new BookModule();\n  items = [];\n  pageofItems: Array<BookModule> = new Array<BookModule>();\n  obj: BookModule[];\n  size: number;\n  // tslint:disable-next-line: variable-name\n  book_id: number;\n  bookName: string;\n  page = 0;\n  length: any = sessionStorage.length;\n  pageEvent: PageEvent;\n  lengths = 0;\n  CurrentPageNo: 0;\n  totalPage: Array<number>;\n\n  s: any; selectoption: any;\n  value: any = [];\n  @Output() output: EventEmitter<any> = new EventEmitter();\n  leng: any;\n  constructor( private service: BookService,\n               private matSnackBar: MatSnackBar,\n               private route: Router,\n               private cartService: CartService,\n               private wishlistService: WishlistService) { }\n\n  ngOnInit() {\n    this.getallApprovedBooks();\n    this.getSearchBookData();\n    this.leng = sessionStorage.length;\n    for (let i = 0; i < sessionStorage.length; i++) {\n      const key = sessionStorage.key(i);\n      this.value[sessionStorage.getItem(key)] = sessionStorage.getItem(key);\n      console.log('key ::' + key);\n    }\n    console.log(this.value);\n  }\n\n  onChange(deviceValue) {\n    this.selectedValue = deviceValue;\n    console.log(' this is tha value of drope down ' + deviceValue);\n    switch (this.selectedValue) {\n      case 'mod1':\n         console.log('vikash kumar1');\n         this.approvedBookServiceMethod(this.page, 'price', 'des');\n         console.log('Books are from 1  ', this.bookList);\n         break;\n      case 'mod2':\n        this.approvedBookServiceMethod(this.page, 'price', 'asc');\n        console.log('Books are from 2  ', this.bookList);\n        break;\n      case 'mod3':\n        this.approvedBookServiceMethod(this.page, 'created_date_and_time', 'asc');\n        console.log('Books are from 3  ', this.bookList);\n        break;\n    }\n}\n\n  getallApprovedBooks() {\n    this.approvedBookServiceMethod(this.page, 'book_id', 'asc');\n  }\n\n  approvedBookServiceMethod(page ?: number, order?: string, sortby?: string) {\n    this.service.getAllApprovedBookByPage(page, order, sortby).subscribe((response: any) => {\n      console.log(response);\n      console.log('Books are the' + response.obj);\n      this.bookList = response.obj.content;\n      this.size = response.obj.totalElements;\n      this.CurrentPageNo = response.obj.pageable.pageNumber;\n      this.totalPage = new Array(response.obj.totalPages);\n      console.log('Total pages is: ' + this.totalPage);\n      console.log('total books are ' + this.size);\n      console.log('curret page number is ' + this.CurrentPageNo);\n      console.log('Books are  ', this.bookList.length);\n    });\n  }\ngetSearchBookData() {\n    this.service.getSearchBookData().subscribe((message) => {\n      console.log('search data', message.books);\n      this.bookSearch = message.books;\n    });\n  }\n\n\n  SetPage(i, event: any) {\n    event.preventDefault();\n    this.page = i;\n    console.log('page number you want is' + i);\n    this.getallApprovedBooks();\n  }\n\n   previos(event: any) {\n    event.preventDefault();\n    this.page = this.page - 1;\n    console.log('current page from previous' + 'next' + this.page);\n    this.getallApprovedBooks();\n   }\n\n   next(event: any) {\n    event.preventDefault();\n    this.page = this.page + 1;\n    console.log('current page from next ' + 'next' + this.page);\n    this.getallApprovedBooks();\n   }\n\n  addtobag( bookId: any) {\n  if (localStorage.getItem('token') === null) {\n    this.matSnackBar.open('Please Login first', 'ok', {\n      duration: 5000\n    });\n    this.route.navigateByUrl('login');\n    return;\n  }\n  sessionStorage.setItem(bookId, bookId);\n  this.ngOnInit();\n  this.cartService.addToCart(bookId).subscribe(\n    data => this.handleResponse(data),\n    error => this.handleError(error)\n  );\n}\n\n  handleResponse(data: any) {\n    console.log(data);\n    this.matSnackBar.open('Book added successfully Into Cart' , 'ok', {\n    duration: 5000\n  });\n}\nhandleWishResponse(wishdata: any) {\n  console.log(wishdata);\n  this.matSnackBar.open('Book is added successfully to wishlist' , 'ok', {\n  duration: 5000\n});\n}\n\n\n  handleError(error: any) {\n    this.error = error.error.message;\n    console.log(error);\n    this.matSnackBar.open(this.error, 'ok', {\n    duration: 5000\n  });\n  }\n  getOutput() {\n  }\n  Deatails(bookId) {\n    console.log('Redirected to page no ' + bookId);\n    this.route.navigateByUrl('books/info/' + bookId);\n\n  }\n  getUpdatedNotes(event) {\n    this.ngOnInit();\n    }\n\n    addtoWish( bookId: any) {\n      if (localStorage.getItem('token') === null) {\n        this.matSnackBar.open('Please Login first', 'ok', {\n          duration: 5000\n        });\n        this.route.navigateByUrl('login');\n      }\n      this.wishlistService.addToWishlist(bookId).subscribe(\n        wishdata => this.handleWishResponse(wishdata),\n        error => this.handleError(error)\n      );\n    }\n}\n","<div class=\"main-container\">\n    <div class=\"container\">\n        <div *ngIf=\"bookList.length!=0\">\n            <div class=\"title\">Books\n                <span style=\"font-size: 15px; font-family: Lato, Regular; color: rgb(139, 136, 136);\">\n              ({{ size }} &nbsp;Items)\n              </span>\n            </div>\n            <div>\n                <select id=\"sort\" [ngModel]=\"selectedValue\" (ngModelChange)=\"onChange($event)\" style=\"float: right;\n              height: 30px; width: 161px; padding-top: 0px; margin-top: -24px; padding: 5px;\n              display: flex; margin-right: 74px; border: 1px solid #e0d6d6; outline: none; background-color: white;\n              border-radius: 3px;\n            \" fxFlexAlign='end'>\n            <option value=\"relevance\">Sort by relevance</option>\n                          <option value=\"mod1\">Price: High to low</option>\n                          <option value=\"mod2\">Price: Low to High</option>\n                          <option value=\"mod3\">Newest: Arrival</option>\n            </select>\n            </div>\n        </div>\n        <br>\n        <div class=\"alert alert-danger text-justify\" *ngIf=\"bookList.length==0\">There is not any books to display please add some book and approved it</div>\n\n        <div class=\"list-books\">\n\n            <div *ngFor=\"let book of bookList| booksearchpipe:bookSearch\">\n\n                <mat-card style=\"height: 22.5em; width: 220px;  margin-right: 40px;\" class=\"tooltip1\">\n                    <mat-card-title matTooltip=\"Book Image\" (click)=\"Deatails(book.bookId)\">\n                        <img src=\"assets\\bookimage\\{{book.image}}\" style=\"height: 150px; width: 90px;\n                      margin-left: 55px; margin-right: 55px; padding-top: 20px; padding-bottom: 20px; \" />\n                    </mat-card-title>\n                    <mat-card-content style=\"width: 16em; \">\n                        <div class=\"out-of-stock \" *ngIf=\"!book.noOfBooks \">Out Of stock</div>\n                        <div class=\"bookname \">{{ book.bookName }}</div>\n\n\n                        <span class=\"tooltiptext\">\n                          <h2 style=\"text-align: left; padding-left: 10px;\"> Details</h2>\n                          {{ book.bookDetails }}\n                        </span>\n\n                        <div class=\"authorname \">by {{ book.authorName }}</div>\n                        <div class=\"price \">Rs. {{ book.price }}</div>\n                        <div class=\"availablity \" style=\"color: rgb(163, 43, 6); \" *ngIf=\"book.noOfBooks < 5 && book.noOfBooks; else elsecondition \">\n                            Only {{ book.noOfBooks }} left hurry up\n                        </div>\n                        <ng-template #elsecondition>\n                            <div class=\"availablity \" style=\"color: rgb(2, 110, 2); \" *ngIf=\"book.noOfBooks \">\n                                Available Books: {{ book.noOfBooks }}\n                            </div>\n                            <div style=\"height: 26px; \" *ngIf=\"!book.noOfBooks \"></div>\n                        </ng-template>\n                        <div class=\"cart-buttons \" *ngIf=\"book.noOfBooks && value[book.bookId] !=book.bookId \">\n                            <div>\n                                <button class=\"addtobag \" (output)=\"getUpdatedNotes($event)\" (click)=\"addtobag(book.bookId)\" #clickState mat-button>ADD TO BAG</button>\n                            </div>\n                            <div>\n                                <button (click)=\"addtoWish(book.bookId)\" style=\"border: 1px solid #e0d6d6;\n                              outline: none;\n                              width: 83px;\n                              height: 35px;\n                              background-color: white;\n                              border-radius: 3px;\">WISHLIST</button>\n                            </div>\n                        </div>\n                        <div class=\"addedbtn \" *ngIf=\"book.noOfBooks && value[book.bookId]==book.bookId \">\n                            <button style=\" height: 32px; width: 191px; background-color: #3371b5;\n                          border-radius: 2px; color: whitesmoke; text-align: center; \" mat-button>\n                            ADDED TO BAG\n                    </button>\n                        </div>\n                        <div class=\"addedbtn \" (click)=\"addtoWish(book.bookId)\" *ngIf=\"!book.noOfBooks\">\n                            <button style=\" height: 34px; width: 191px; border-radius: 0px; display: flex;\n                          align-items: center; justify-content: center;\n                          border: 1px solid #e0d6d6;\n                              outline: none; border-radius: 2px;\n                            opacity: 1; \" mat-button>WISHLIS</button>\n                        </div>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n    <div class=\"container text-center\" >\n        <div class=\"pagination\" *ngIf=\"bookList.length!=0\">\n            <a  (click)=\"previos($event)\" style=\" margin-right: 12px; border-radius: 40px;  border: 1px solid  #e0d6d6; padding-right: 10px;\" href=\"#\" href=\"#\">\n                < </a>\n                    <a *ngFor=\"let p of totalPage; let i=index \" href=\"\" fxFlexAlign=\"center\" (click)=\"SetPage(i,$event)\" [ngClass]=\"{'active':i==page}\">{{i+1}}</a>\n                    <a (click)=\"next($event)\" style=\" margin-right: 12px; border-radius: 40px;  border: 1px solid #e0d6d6; padding-right: 10px;\" href=\"#\" href=\"#\">></a>\n        </div>\n    </div>\n</div>","<div *ngIf=\"isLoading\">\n    <app-spineer></app-spineer>\n</div>\n<div fxLayoutAlign=\"center center\" fxFlexFill *ngIf=\"!isLoading\">\n    <mat-card fxFlex=\"35\" style=\"background-color: rgb(252, 252, 252);\">\n        <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\" fxLayoutAlign=\"flex-start\" style=\"background-color: #A03037; padding-top: 16px;\">\n            <div class=\"imgLogo\">\n                <img src=\"assets\\education.svg\" alt=\"\">\n            </div>\n            <h2 class=\"title\">Bookstore</h2>\n\n        </div>\n        <br>\n        <div style=\"text-align: left;\">\n            <h2>Update Your Password</h2>\n        </div>\n        <form #regForm=ngForm (ngSubmit)=\"onSubmit()\">\n            <div *ngIf=\"password.touched && !password.valid\">\n                <div *ngIf=\"password.errors.minlength\">\n                    <small><mat-error>Password must contain 6 character.</mat-error></small>\n                </div>\n                <div *ngIf=\"password.errors.pattern\">\n                    <small><mat-error>must contain at least one letter, at least one number, and be longer than six charaters.</mat-error></small>\n                </div>\n            </div>\n            <div *ngIf=\"confirmpassword.touched && !confirmpassword.valid\">\n                <div *ngIf=\"confirmpassword.errors.minlength\">\n                    <small><mat-error>Password must contain 6 character.</mat-error></small>\n                </div>\n                <div *ngIf=\"confirmpassword.errors.pattern\">\n                    <small><mat-error>Password & Confirm Password does not match.</mat-error></small>\n                </div>\n            </div>\n            <div class=\"example-container\">\n                <div class=\"alert alert-danger text-justify\" [hidden]=\"!error\">{{error}}</div>\n            </div>\n            <mat-form-field appearance=\"outline\" fxLayout=\"column\" style=\"width: 100%;\">\n                <mat-label>Enter your Email</mat-label>\n                <input email required matInput type=\"email\" placeholder=\"Email\" [(ngModel)]=\"form.email\" name=\"email\">\n                <mat-icon matSuffix>email</mat-icon>\n\n                <mat-error>Enter Valid Email Id</mat-error>\n            </mat-form-field>\n            <div class=\"example-container\">\n                <mat-form-field appearance=\"outline\" style=\"width: 220px;\">\n                    <mat-label>Enter password</mat-label>\n                    <input #password=\"ngModel\" matInput required type=\"password\" minlength=\"5\" [(ngModel)]=\"form.newPassword\" name=\"newPassword\" pattern=\"^(?=.*[0-9]+.*)(?=.*[a-zA-Z]+.*)[0-9a-zA-Z]{6,}$\">\n                    <mat-error>Please Enter Strong Password</mat-error>\n\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" style=\"width: 220px; padding-left: 4px;\">\n                    <mat-label>Confirm password</mat-label>\n                    <input [(ngModel)]=\"form.confirmPassword\" #pasword=\"ngModel\" name=\"confirmPassword\" matInput required type=\"password\" #confirmpassword=\"ngModel\" pattern=\"{{ password.value }}\">\n\n                    <mat-error required>Please Enter valid Password</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"text-right\">\n                <button type=\"submit\" style=\"\n                background-color: #a03037;\n                border-radius: 5px;\n                text-decoration-color:#FFFFFF;\n                font-size: 20px;\n                font-weight: 500;\n                color: whitesmoke;\n                width: 106px;\n                height: 40px;\n                \" [disabled]=\"!regForm.valid\" id=\"registrationBtn\" mat-raised-button color=\"primary\">update</button>\n            </div>\n        </form>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { UserService } from 'src/app/Service/user.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n  public error = null;\n  public isLoading = false;\n  token: string;\n  public form = {\n    email: null,\n    newPassword: null,\n    confirmPassword: null,\n  };\n  constructor(private user: UserService,\n              private route: Router,\n              private matSnakeBar: MatSnackBar,\n              private activatedRoute: ActivatedRoute\n) {\n}\nngOnInit() {\n  this.activatedRoute.paramMap.subscribe((parameters: ParamMap) => {\n  this.token = parameters.get('token');\n  console.log(this.token);\n  });\n  }\nhandleError(error) {\n  this.isLoading = false;\n  this.error = error.error.message;\n  console.log(error);\n  this.matSnakeBar.open(this.error, 'ok', {\n  duration: 5000\n});\n}\nonSubmit() {\n  this.isLoading = true;\n  this.user.updatePassword(this.form, this.token).subscribe(\n  data => this.handleResponse(data),\n  error => this.handleError(error)\n);\n}\nhandleResponse(data) {\n  this.isLoading = false;\n  this.matSnakeBar.open('Sucessfull Update Password ', 'ok', {\n  duration: 5000\n  });\n  this.route.navigateByUrl('\\login');\n}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BookModule } from '../Model/book/book.module';\n\n@Pipe({\n  name: 'booksearchpipe'\n})\nexport class BooksearchpipePipe implements PipeTransform {\n\n  transform(book: BookModule[], searchTerm: string) {\n    if (!book || !searchTerm) {\n      console.log('searching the ' + searchTerm);\n      return book;\n    } else {\n      // tslint:disable-next-line: no-shadowed-variable\n      return book.filter(book => {\n            if (searchTerm && book.bookName.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1) {\n                return true;\n            }\n            if (searchTerm && book.authorName.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1) {\n                return true;\n            }\n            if (searchTerm && book.status.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1) {\n                return true;\n            }\n            return false;\n       });\n\n    }\n  }\n\n}\n","import { Component, OnInit , Inject} from '@angular/core';\nimport {  MatSnackBar } from '@angular/material/snack-bar';\nimport { MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BookService } from 'src/app/Service/book.service';\nimport { BookModule } from 'src/app/Model/book/book.module';\n\n@Component({\n  selector: 'app-update-book',\n  templateUrl: './update-book.component.html',\n  styleUrls: ['./update-book.component.scss']\n})\nexport class UpdateBookComponent implements OnInit {\n  bookName = new FormControl(this.data.bookName, [Validators.required]);\n  authorName = new FormControl(this.data.authorName, [Validators.required]);\n  price = new FormControl(this.data.price, [Validators.required]);\n  noOfBooks = new FormControl(this.data.noOfBooks, [Validators.required]);\n  bookDetails = new FormControl(this.data.bookDetails, [Validators.required, ]);\n  private imageFile: string;\n\n  constructor( @Inject(MAT_DIALOG_DATA) public data: any,\n               private bookservice: BookService,\n               private activedRoute: ActivatedRoute,\n               private router: Router,\n               private matSnackBar: MatSnackBar,\n               private http: HttpClient,\n               public dialogRef: MatDialogRef<UpdateBookComponent>, ) { }\n  updatebook: BookModule = new BookModule();\n  ngOnInit(): void {\n  }\n\n  onSelectedImage(event) {\n    if (event.target.files.length > 0) {\n      const image = event.target.files[0];\n      this.imageFile = image.name;\n    }\n  }\n  updateBook() {\n\n    this.updatebook.bookName = this.data.bookName;\n    this.updatebook.authorName = this.data.authorName;\n    this.updatebook.price = this.data.price;\n    this.updatebook.noOfBooks = this.data.noOfBooks;\n    this.updatebook.bookDetails = this.data.bookDetails;\n    // this.dialogRef.close();\n\n    setTimeout(() => {\n      this.bookservice.updateBook(this.data.bookId, this.updatebook).subscribe(\n        (response: any) => {\n          if (response.statusCode === 200) {\n            this.dialogRef.close({ data: this.updatebook });\n            this.matSnackBar.open(response.response, 'undo', {\n              duration: 3000,\n            });\n          } else {\n            this.dialogRef.close();\n            this.matSnackBar.open('Book not updated...try again', 'undo', {\n              duration: 2500,\n            });\n          }\n        },\n        (error: any) => {\n          this.dialogRef.close();\n          this.matSnackBar.open('something went wrong.....!', 'undo', {\n            duration: 2500,\n          });\n        }\n      );\n    }, 3000); // spinner\n  }\n}\n","<div class=\"container\">\n    <div style=\"background-color: #A03037; width: 100%; margin-bottom: 10px;\">\n        <h2 style=\"color: white; text-align: center;padding-top: 10px;\">Update Book</h2>\n    </div>\n    <br>\n    <form style=\"display: flex; flex-direction: column;margin-bottom: 0px;\">\n\n          <mat-form-field appearance=\"outline\" style=\"margin-bottom: -1.25em;\" class=\"example-full-width2\" >\n              <mat-label>BOOK NAME</mat-label>      \n              <input type=\"name\" id=\"bookName\" matInput placeholder=\"Enter your Bookname\" [formControl]=\"bookName\"   [(ngModel)]=\"data.bookName\"  autocomplete=\"off\" required>\n              <mat-icon matSuffix style=\"color: grey;\">book</mat-icon>\n          </mat-form-field>\n         \n          <mat-form-field appearance=\"outline\" style=\"margin-bottom: -1.25em;\" class=\"example-full-width2\">\n              <mat-label >AUTHOR</mat-label>\n              <input type=\"name\" id=\"bookAuthor\" matInput placeholder=\"Enter your Bookauthour\"   [(ngModel)]=\"data.authorName\" [formControl]=\"authorName\"  autocomplete=\"off\" required>\n              <mat-icon matSuffix style=\"color: grey;\">person</mat-icon>  \n          </mat-form-field>\n           \n          <mat-form-field appearance=\"outline\" style=\"margin-bottom: -1.25em;\" class=\"example-full-width3\">\n              <mat-label >PRICE</mat-label>\n              <input type=\"number\" id=\"price\" matInput placeholder=\" price\" [(ngModel)]=\"data.price\" [formControl]=\"price\" required>\n              <mat-icon matSuffix style=\"color: grey;\"> \n                  <svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M8,3H18L17,5H13.74C14.22,5.58 14.58,6.26 14.79,7H18L17,9H15C14.75,11.57 12.74,13.63 10.2,13.96V14H9.5L15.5,21H13L7,14V12H9.5V12C11.26,12 12.72,10.7 12.96,9H7L8,7H12.66C12.1,5.82 10.9,5 9.5,5H7L8,3Z\" />\n                </svg>\n              </mat-icon>\n          </mat-form-field>\n        \n          <mat-form-field appearance=\"outline\" style=\"margin-bottom: -1.25em;\" class=\"example-full-width4\">\n              <mat-label>BOOK QUANTITY</mat-label>\n              <input type=\"text\" id=\"qty\"  matInput placeholder=\"Enter your noofBooks\" [(ngModel)]=\"data.noOfBooks\" [formControl]=\"noOfBooks\" autocomplete=\"off\" required>\n              <mat-icon matSuffix style=\"color: grey;\">pets</mat-icon>\n          </mat-form-field>\n      \n          <mat-form-field appearance=\"outline\"  class=\"example-full-width5\">\n              <mat-label>DESCRIPTION</mat-label>\n              <input type=\"text\" id=\"desc\"  matInput placeholder=\"Enter your book details\" [(ngModel)]=\"data.bookDetails\" [formControl]=\"bookDetails\"autocomplete=\"off\" required>\n              <mat-icon matSuffix style=\"color: grey;\">edit</mat-icon>\n          </mat-form-field>\n          <!-- <div >\n            <input type=\"file\" name=\"image\" (change)=\"onSelectedImage($event)\" />\n        </div> -->\n    </form>\n\n    <div class=\"submit\">\n        <button  id=\"submit\" mat-button [disabled]=\"!data.bookDetails\"  (click)=\"updateBook()\">UPDATE  </button>\n    </div>\n</div>\n","<div style=\"width: 100%;\" style=\"height: 11%;\">\n    <app-toolbar flexLayout=\"row\" (toggleEvent)=\"nameEventHander($event)\">\n    </app-toolbar>\n    <!-- <app-toolbar flexLayout=\"row\"></app-toolbar> -->\n</div>\n<div class=\"dashboard-content\" style=\"height: 84%; margin-left: 0%; padding-left: 0%;\">\n    <div class=\"sidenav-div\" *ngIf=\"isAdmin || isSeller\">\n        <mat-sidenav-container class=\"sidenav-container\">\n\n            <mat-sidenav [(opened)]=\"opened2\" mode=\"side\" class=\"matSidenav\">\n                <app-sidenavbar class=\"app-sidenavbar\" fxFlex></app-sidenavbar>\n            </mat-sidenav>\n\n            <mat-sidenav-content class=\"sidenav-content\">\n\n                <div *ngIf=\"isAdmin\">\n                    <app-admin></app-admin>\n                </div>\n                <div *ngIf=\"isSeller\">\n                    <app-seller></app-seller>\n                </div>\n\n                <!-- <app-adminunverifiedbooks></app-adminunverifiedbooks> -->\n                <!-- <app-admin></app-admin> -->\n\n\n\n            </mat-sidenav-content>\n        </mat-sidenav-container>\n    </div>\n\n    <!-- <div *ngIf=\"isSeller\">\n       <app-seller></app-seller> -->\n    <!-- <mat-sidenav-container style=\"width: 100%; height: 100%;  display: flex;\">\n\n          <mat-sidenav [(opened)]=\"opened2\" mode=\"side\" style=\"background-color: transparent;\">\n              <app-sidenavbar class=\"app-sidenavbar\" fxFlex></app-sidenavbar>\n          </mat-sidenav>\n\n          <mat-sidenav-content style=\" width: 100%; align-content: center;padding: 30px;\">\n               <router-outlet ></router-outlet> -->\n    <!-- <app-seller></app-seller>\n          </mat-sidenav-content>\n      </mat-sidenav-container>\n  </div> -->\n\n\n\n\n    <div *ngIf=\"!isSeller && !isAdmin\">\n        <app-displaybook></app-displaybook>\n        <router-outlet></router-outlet>\n    </div>\n\n</div>\n\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSidenavContent } from '@angular/material/sidenav';\nimport { Title } from '@angular/platform-browser';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n\n\n  opened = true;\n  public opened2 = false;\n\n  isUser = false;\n  isSeller = false;\n  isAdmin = false;\n  role: string;\n  isLogin = false;\n\n  constructor(\n    private titleService: Title\n  ) { }\n  nameEventHander($event: any) {\n    this.opened2 = $event;\n    console.log('2', this.opened2);\n  }\n\n  ngOnInit(): void {\n    this.role = localStorage.getItem('role');\n    this.setTitle('Bookstore');\n    console.log('role check toolbar', this.role);\n    if (this.role === 'admin') {\n     this.isAdmin = true;\n     this.isLogin = true;\n   }\n    if (this.role === 'seller') {\n     this.isSeller = true;\n     this.isLogin = true;\n   }\n    if (this.role === 'user') {\n     this.isUser = true;\n     this.isLogin = true;\n     console.log('is user ', this.isUser);\n   }\n  }\n  public setTitle( dashboard: string) {\n    this.titleService.setTitle( dashboard );\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n\n\n  // BASE_URL: 'http://localhost:8081/',\n  // BookUrl: 'http://localhost:8081/',\n  // getallbooksurl: '',\n  BASE_URL: 'http://localhost:8080',\n  BookUrl: 'http://localhost:8080',\n  getallbooksurl: 'books/',\n\n\n  // BASE_URL: 'http://localhost:8080',\n  // BookUrl: 'http://localhost:8080',\n  // getallbooksurl: '',\n  // BASE_URL: 'http://localhost:8080',\n  // BookUrl: 'http://localhost:8080',\n  // getallbooksurl: 'books/getAllBooks',\n\n\n  getbookbyIdurl: 'books/',\n  addandupdatecartUrl: 'books/addandupdatecart',\n  sorting: 'books/sorting',\n  SortNewestArrival: 'books/unsorting',\n  cusUrl : 'books/pagewise',\n\n  addbooks: 'books',\n  deleteBook: 'books',\n  editBook: 'books',\n  verifyBook: 'books',\n  addBookImage: 'books/bookimage',\n  CartUrl: 'http://localhost:8080/',\n  addUrl: 'customers/addcustomer',\n  addtocart: 'carts/addcart',\n  getbookprice: 'getbookprice',\n  getReview: 'books/getratereviews',\n\n  quantity: 'http://localhost:8080/',\n  addbooksquantity: 'addbooksquantity',\n  USER_REGISTRATION: 'registration',\n  USER_LOGIN: 'login',\n  USER_FORGET_PASSWORD: 'forgotpassword',\n  USER_RESETPASSWORD: 'update',\n  ADDCART: '/bookstore/v3/cart/addbookCart/',\n  COUNT_BOOKS_IN_CART: '/bookstore/v3/cart/bookCount',\n  DEC_BOOKS_QUANTITY: '/bookstore/v3/cart/decreaseQuantityPrice?bookId=',\n  INC_BOOKS_QUANTITY: '/bookstore/v3/cart/increasebooksquantity?bookId=',\n  REMOVE_BOOKS_FROM_CART: '/bookstore/v3/cart/removeCartBooks',\n  GET_BOOKS_FROM_CART: '/bookstore/v3/cart/getcartbooks',\n  GET_ADDRESS_BY_ADDRES: '/address/users',\n  UPDATE_ADDRESS: '/address/updateAddress',\n  ADD_ADDRESS: '/address/add',\n  PLACE_ORDER: '/bookstore/placeOrder?addressId=',\n  WRITE_REVIEW: 'books/ratingreview?bookId=',\n  GET_REVIEWS: 'books/ratingreviews/?bookId=',\n\n  ratereview: 'books/getratereviews/?bookId=',\n\n  adminUrl: 'http://localhost:8080/',\n  approveBook: 'admin/update/',\n  rejectBook: 'admin/update/',\n  unVerifiedBooks: 'admin/books',\n  rejectedBooks: 'admin/books',\n  approvedBooks: 'admin/books',\n  avgrateofbook: 'books/avgrate?bookId=',\n  getallOrderedBooks: 'bookstore/getOrdersByAdmin',\n  changeOrderstatus: 'bookstore/orderStatusByAdmin',\n  getOrdersByseller: 'bookstore/getOrdersByseller',\n  getSortedBookByRate: 'books/sortbyrate',\n\n  WISHLIST_ADD: 'bookstore/v3/wishlist/addbookWishlist',\n  WISHLIST_GET: 'bookstore/v3/wishlist/getwishbooks',\n  WISHLIST_COUNT: 'bookstore/v3/wishlist/wishlistcount',\n  WISHLIST_REMOVE: 'bookstore/v3/wishlist/removeWishlist/',\n\n};\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private  baseUrl = environment.BASE_URL;\n  constructor(private http: HttpClient ) { }\n\n  private httpOtions = {\n    headers: new HttpHeaders({ 'content-type': 'application/json' })\n  };\n public signUp(data: any) {\n    return this.http.post(`${this.baseUrl}/registration`, data);\n  }\n  public signIn(data: any) {\n    return this.http.post(`${this.baseUrl}/user/login`, data);\n  }\n  verifyUserByToken(token) {\n    return this.http.post(`${this.baseUrl}/user/verify/`, token);\n  }\n  forgetPassword(data) {\n    return this.http.post(`${this.baseUrl}/user/forgotpassword`, data);\n  }\n  public updatePassword(updatePassword: any, token: string): Observable<any> {\n    return this.http.put(`${this.baseUrl}/user/update/${token}`,\n      updatePassword,\n    );\n  }\n  public getAdress(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${environment.GET_ADDRESS_BY_ADDRES}`, {headers: new HttpHeaders({token: localStorage.token})});\n  }\n  public addAdress(address: any) {\n    return this.http\n    .post(`${environment.BASE_URL}/${environment.ADD_ADDRESS}`, address, {headers: new HttpHeaders({token: localStorage.token})});\n  }\n  public updateAdress(address: any) {\n    return this.http\n    .put(`${environment.BASE_URL}/${environment.UPDATE_ADDRESS}`, address, {headers: new HttpHeaders({token: localStorage.token})});\n   }\n}\n","<div class=\"container\" *ngIf=\"isAdmin\">\n  <div>\n\n    <button id=\"adminBookBtn\" mat-button class=\"navbutton\" (click)=\"books()\">\n      \n      <span class= \"icon-label\" >Books</span>\n      </button>\n    <button id=\"sellerBookBtn\" mat-button class=\"navbutton\" (click)=\"sellerBooks()\">\n\n      \n       <span class= \"icon-label\" >Seller</span>\n       </button>\n\n\n       <button id=\"orderStatusBookBtn\" mat-button class=\"navbutton\" (click)=\"orders()\">\n\n        \n          <span class=\"icon-label\">Orders</span>\n         </button>\n\n         <!-- <button mat-button class=\"navbutton\">\n        \n          <span class=\"icon-label\">Reviews</span>\n         </button> -->\n</div>\n</div>\n<div class=\"container\" *ngIf=\"isSeller\">\n    <div>\n        <button mat-raised-button class=\"navButton\"  (click)=\"sellerBook()\" type=\"submit\">\n        Books</button>\n      </div>\n      <div>\n        <button mat-raised-button class=\"navButton\"   (click)=\"orderStatus()\" type=\"submit\">\n        Order</button>\n      </div>\n</div>\n     ","\n\nimport { Router, ActivatedRoute,ParamMap} from '@angular/router';\n\nimport { Component, OnInit ,ViewChild  } from '@angular/core';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\n\n\n@Component({\n  selector: 'app-sidenavbar',\n  templateUrl: './sidenavbar.component.html',\n  styleUrls: ['./sidenavbar.component.scss']\n})\nexport class SidenavbarComponent implements OnInit {\n  @ViewChild('sidenav', { static: true }) public sidenav: MatSidenavModule;\n  isSeller = false;\n  isAdmin=false;\n  role:string;\n\n  constructor(private router:Router,private route:ActivatedRoute,) { }\n\n\n\n\n  ngOnInit() {\n   this.role= localStorage.getItem('role');\n   console.log('role check sidenav',this.role);\n   if (this.role === 'admin') \n   {\n     this.isAdmin=true;\n   }\n   if (this.role === 'seller') \n   {\n     this.isSeller=true;\n   }\n  }\n  sellerBooks()\n  {\n    this.router.navigate(['books'],{queryParams:{book:'unverified'}});\n  }\n\n  orders()\n  {\n    this.router.navigate(['books'],{queryParams:{book:'order'}});\n  }\n\n  reviews()\n  {\n    this.router.navigate(['books'],{queryParams:{book:'review'}});\n  }\n\n  books()\n  {\n    this.router.navigate(['books'],{queryParams:{book:'books'}});\n  }\n\n\n  sellerBook(){\n    \n      this.router.navigate(['books'],{queryParams:{book:'sellerbook'}});\n  }\n\n  orderStatus(){\n\nthis.router.navigate(['books'],{queryParams:{book:'order'}});\n  }\n  \n}\n","import { CartService } from 'src/app/Service/cart.service';\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { BookService } from 'src/app/Service/book.service';\nimport { TokenService } from 'src/app/Service/token.service';\nimport { Router } from '@angular/router';\nimport { WishlistService } from 'src/app/Service/wishlist.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n  constructor( private service: BookService,\n               private token: TokenService,\n               private route: Router,\n               private cartService: CartService,\n               private wishlistService: WishlistService,\n               private matSnackBar: MatSnackBar\n    ) { }\n\n  @Output() toggleEvent = new EventEmitter<boolean>();\n\n\n  opened = false;\n\n\n\n\n  name: any;\n  id: any;\n  isUser = false;\n  isSeller = false;\n  isAdmin = false;\n  role: string;\n  length: any;\n  bookName: string;\n  totalItem;\n  isbudget = false;\n  isLogin = false;\n @Input() output: any;\n @Input() function: any;\n\n\n  wishlistLength: number;\n\n  ontoggel(input: any) {\n    console.log('input' + input);\n    this.toggleEvent.emit(input);\n    this.opened = !this.opened;\n  }\n\n  ngOnInit() {\n    this.wishlistService.autoRefresh$.subscribe(() => {\n\n      this. getWishlistCount();\n    }\n\n    );\n    this. getWishlistCount();\n\n    this.cartService.autoRefresh$.subscribe(() => {\n      this.getCartItemCount();\n\n    });\n\n    this.getCartItemCount();\n    this.name = localStorage.getItem('Name');\n    this.role = localStorage.getItem('role');\n    console.log('role check toolbar', this.role);\n    if (this.role === 'admin') {\n     this.isAdmin = true;\n     this.isLogin = true;\n   }\n    if (this.role === 'seller') {\n     this.isSeller = true;\n     this.isLogin = true;\n   }\n    if (this.role === 'user') {\n     this.isUser = true;\n     this.isLogin = true;\n     console.log('is user ', this.isUser);\n   }\n  }\n\n  getCartItemCount() {\n    this.cartService.getCartItemCount().subscribe((response: any) => {\n      this.length = response.obj;\n      console.log('total number of itemes are' + response.obj);\n     });\n  }\n  bookSearch() {\n    // console.log(this.bookName);\n    this.service.setSearchBookData(this.bookName);\n  }\n  logout(event: MouseEvent) {\n    console.log('loggout function called');\n    event.preventDefault();\n    this.token.remove();\n    this.token.logedIn(false);\n    this.route.navigateByUrl('/login');\n  }\n  getUpdatedNotes(event) {\n  this.ngOnInit();\n  }\n  getWishlistCount() {\n    this.wishlistService.getWishlistCount().subscribe((response: any) => {\n      this.wishlistLength = response.obj;\n      console.log('total number wishBook are' + response.obj);\n     });\n  }\n\n\n\n\n}\n","<mat-toolbar style=\"background-color: rgba(131, 4, 4, 0.829);\" fxLayout=\"row\" xLayoutAlign=\"space-between center\" fullscreen>\n  <span *ngIf=\"isAdmin || isSeller\">\n    <button id=\"menuBtn\" mat-icon-button (click)=\"ontoggel(opened)\" class=\"menu\">\n\n      <mat-icon matTooltip=\"Main menu\">menu</mat-icon>\n    </button>\n</span>\n  <!-- home -->\n    <div class=\"home\" fxFlex=\"10\" fxLayoutGap=\"5%\"></div>\n    <!-- logo  name -->\n    <div class=\"logo-name\" fxFlex=\"15\">\n        <div class=\"image\" style=\"display: flex; justify-content: flex-start;\">\n            <img src=\".\\assets\\education.png\" style=\"height: 35px;\" alt=\"open book\" [routerLink]=\"['']\" />\n            <span class=\"mat-title\" fxHide.xs=\"true\">&nbsp;&nbsp;&nbsp;Bookstore</span\n      >\n    </div>\n  </div>\n\n  <!-- search -->\n  <div\n    class=\"search\"\n    fxFlex=\"60\"\n    fxLayout=\"row\"\n    fxLayout-align=\"center center\"\n    fxFlex.sm=\"70\"\n  >\n  <button mat-icon-button fxHide.xs=\"true\">\n    <mat-icon style=\"color: #9D9D9D; transform: scale(1.25);\"\n      >search</mat-icon\n    >\n  </button>\n    <input type=\"text\"\n      id=\"search\"\n      class=\"input\"\n      placeholder=\"Search\"\n      [(ngModel)]=\"bookName\"\n      (input)=\"bookSearch()\"/>\n  </div>\n  <div class=\"wish-list\" align=\"center\" *ngIf=\"!isAdmin && !isSeller\">\n    <span style=\"color: #fff; font-size: small;\"></span>\n    <button mat-icon-button  routerLink=\"/wish\" matTooltip=\"Wishlist\">\n    <mat-icon matBadge=\"{{wishlistLength}}\" matBadgeSize=\"small\" >favorite_border</mat-icon>\n    </button>\n    </div>\n  <!-- Shooping cart -->\n  <div class=\"cart\" align=\"center\" *ngIf=\"!isAdmin && !isSeller\">\n    <span style=\"color: #fff; font-size: small;\">Cart</span>\n            <button mat-icon-button routerLink=\"/cart\" matTooltip=\"Cart\">\n                  <mat-icon matBadge=\"{{ length }}\" matBadgeSize=\"small\">add_shopping_cart</mat-icon>\n             </button>\n        </div>\n        <!-- to give 1 space for mobile -->\n        &nbsp;\n        <!-- Profile -->\n        <div class=\"profile\" fxFlex=\"5\" align=\"center\">\n            <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n      <!-- <img [matMenuTriggerFor]=\"vertebrates\" src=\"assets\\account_circle-24px.svg\" width=\"80%\" style=\"color: #fff;\" /> -->\n      <mat-icon style=\"transform: scale(1.7);\">account_circle</mat-icon>\n    </button>\n            <mat-menu #menu=\"matMenu\">\n                <div fxLayout=\"row\" fxFlex=\"100\" style=\" width: 15em; height: 15em; position: initial; z-index: 3100;\n                      \" fxLayoutAlign=\"center center\">\n                    <div style=\"overflow: hidden; height: 12em;\">\n                        <div style=\"margin-left: 6px;\">\n                            <img style=\"height: 60px; width: 60px; padding: 0px; margin: 0px;\" class=\"topic-avatar\" mat-card-avatar src=\"assets\\profilePic.jpg\" />\n                        </div>\n                        <div style=\"width: 100%;\" *ngIf=\"isLogin\">\n                            <h4>{{ name }}</h4>\n                        </div>\n                        <div class=\"div-profile\" *ngIf=\"isLogin\">\n                            <div class=\"div-signout\">\n                                <button (click)=\"logout($event)\" style=\"background-color: whitesmoke;\" mat-button [routerLink]=\"['']\" class=\"signout-button\">Signout\n                                </button>\n                            </div>\n                        </div>\n                        <div class=\"div-profile\" *ngIf=\"!isLogin\">\n                            <div class=\"div-signout\" style=\"margin-top: 60px; margin-left: 5px;\">\n                                <button [routerLink]=\"['/login']\" mat-button class=\"signout-button\" style=\"background-color: whitesmoke;\">Login\n                                 </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </mat-menu>\n        </div>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { TokenService } from 'src/app/Service/token.service';\nimport { Router } from '@angular/router';\nimport { BookService } from 'src/app/Service/book.service';\nimport {  MatSnackBar } from '@angular/material/snack-bar';\n\nimport {  MatDialog } from '@angular/material/dialog';\nimport { AddbookComponent } from '../../addbook/addbook.component';\nimport { UpdateBookComponent } from '../../update-book/update-book.component';\nimport { UploadBookImageComponent } from '../../addbook/upload-book-image/upload-book-image.component';\nimport {ActivatedRoute,ParamMap} from '@angular/router';\n\n@Component({\n  selector: 'app-seller',\n  templateUrl: './seller.component.html',\n  styleUrls: ['./seller.component.scss']\n})\nexport class SellerComponent implements OnInit {\n  constructor(private service: BookService , private dialog: MatDialog,\n              private matSnackBar: MatSnackBar,private _route:ActivatedRoute\n\n  ) { }\n  bookSearch: any;\n  name: string = null;\n  books: any;\n  status: string;\n  \n  sellerBooks:boolean=false;\n  orderBooks:boolean=false;\n\n  private param:any;\n  \n  ngOnInit(): void {\n    this.service.autoRefresh$.subscribe(() => {\n      this._route.queryParams.subscribe\n    (params=>\n      {this.param=params['book'];\n      if (this.param == \"sellerbook\") \n      {\n      this.sellerBooks=true;\n      this.orderBooks=false\n\n      }\n      if(this.param == \"order\")\n      {\n        this.sellerBooks=false;\n        this.orderBooks=true;\n      }\n    });\n       this.getallBooks();\n    });\n\n    this._route.queryParams.subscribe\n    (params=>\n      {this.param=params['book'];\n      if (this.param == \"sellerbook\") \n      {\n      this.sellerBooks=true;\n      this.orderBooks=false\n\n      }\n      if(this.param == \"order\")\n      {\n        this.sellerBooks=false;\n        this.orderBooks=true;\n      }\n    });\n\n    this.getUserName();\n    this.getallBooks();\n    this.getSearchBookData();\n  }\n  \n  getallBooks() {\n    this.sellerBooks=true;\n    this.orderBooks=false;\n    console.log('inside seller book meth.....');\n    this.service.getallBooks().subscribe( response => {\n      this.books = response.obj;\n      console.log('All books ', this.books);\n    });\n\n  }\n\n  deleteBook(bookId) {\n    this.service.deleteBook(bookId).subscribe((message) => {\n      if (message.statusCode === 202) {\n        this.matSnackBar.open('Book Deleted Successfully', 'OK', {\n          duration: 4000,\n        });\n    } else {\n      this.matSnackBar.open('Error in Book Deletion', 'ok', { duration: 4000 });\n    }\n    });\n  }\n\n\n  openImageDialog(bookId): void {\n    const dialogRef = this.dialog.open(UploadBookImageComponent, {\n      width: '25rem',\n      panelClass: 'custom-dialog-container',\n      data: { bookId },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n    });\n  }\n\n  editBook(book: any): void {\n    const dialogRef = this.dialog.open(UpdateBookComponent, {\n      width: '25rem',\n      height: 'auto',\n      panelClass: 'custom-dialog-container',\n      data: {\n        bookName: book.bookName,\n        authorName: book.authorName,\n        price: book.price,\n        noOfBooks: book.noOfBooks,\n        bookDetails: book.bookDetails,\n        bookId: book.bookId,\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n    });\n  }\n\n  addBook() {\n    const dialogRef = this.dialog.open(AddbookComponent, {\n      width: '25rem',\n      panelClass: 'custom-dialog-container',\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n    });\n  }\n\n  verifyBook(bookId: any) {\n  this.status = 'OnHold';\n  this.service.verifyBook(bookId, this.status).subscribe((message) => {\n      if (message.statusCode === 202) {\n        this.matSnackBar.open('Request sent Successfully', 'OK', {\n          duration: 4000,\n        });\n    } else {\n      this.matSnackBar.open('Error in Book Deletion', 'ok', { duration: 4000 });\n    }\n    });\n  }\n\n  getUserName() {\n   this.name = localStorage.getItem('Name');\n  }\n\n  getSearchBookData() {\n    this.service.getSearchBookData().subscribe((message) => {\n      console.log('search data', message.books);\n      this.bookSearch = message.books;\n    });\n  }\n\n}\n","<div *ngIf=\"sellerBooks && !orderBooks\">\n\n<div class=\"main-container\">\n    <div class=\"container\">\n        <div class=\"addIcon\"  style=\"display: flex; justify-content: flex-end; margin: 2rem 0.5rem;\" *ngIf=\"sellerBooks\">\n            <mat-icon class=\"icon-display\" id=\"addBtn\" (click)=\"addBook()\" matTooltip=\"Add Book\">add</mat-icon>\n        </div>\n        <div class=\"alert alert-danger text-justify\" *ngIf=\"books.length==0\">Nothing to display please add some books By clicking on Add button</div>\n\n        <div class=\"list-books\">\n            <div *ngFor=\" let book of books | booksearchpipe:bookSearch\">\n                <mat-card style=\"display: flex;flex-direction: row; width: auto; padding: 1rem;\" matTooltip=\"{{ book.bookDetails }}\">\n\n                    <div>\n                        <mat-card-title style=\"padding: 1rem;\" (click)=\"openImageDialog(book.bookId)\" matTooltip=\"Update Image\">\n                            <img src=\"assets\\bookimage\\{{book.image}}\" style=\"height: 13rem; width: 10rem; padding: 16px 0px 16px 16px ;\" />\n                        </mat-card-title>\n                    </div>\n                    <div >\n                        <mat-card-content style=\"display: flex;flex-direction: column;flex-wrap: nowrap;width: 25rem; margin-top: 10px; margin-bottom: 0px;\">\n                            <div class=\"out-of-stock\" *ngIf=\"!book.noOfBooks\">Out Of stock</div>\n                            <div class=\"bookname\">Book Name : {{ book.bookName }}</div>\n                            <div class=\"authorname\">Author name : {{ book.authorName }}</div>\n                            <div class=\"price\">Rs. {{ book.price }}</div>\n                            <div class=\"noofbooks\">No of books : {{ book.noOfBooks }}</div>\n                            <div class=\"status\" *ngIf=\"book.status == 'OnHold'\">Status : <label style=\"color: yellow;\">{{ book.status }}</label> </div>\n                            <div class=\"status\" *ngIf=\"book.status == 'approved'\">Status : <label style=\"color: green;\">{{ book.status }}</label> </div>\n                            <div class=\"status\" *ngIf=\"book.status == 'rejected'\">Status : <label style=\"color: red;\">{{ book.status }}</label> </div>\n                            <div class=\"description\">Description : {{ book.bookDetails }}</div>\n\n                            <div style=\"display: flex; justify-content: flex-start; margin-left: 10px;\">\n                                <div style=\"margin-left: 10px;\">\n                                    <button id=\"editBtn\" matTooltip=\"Edit Book\" style=\"width: 5rem; outline: none;color: white;border-radius: 0px; background-color: rgba(131, 4, 4, 0.8);\" (click)=\"editBook(book)\" mat-button>\n                                        Edit\n                                    </button>\n                                </div>\n                                <div style=\"margin-left: 10px;\">\n                                    <button matTooltip=\"Delete Book\" id=\"deleteBtn\" style=\"width: 5rem; color: white; outline: none; border-radius: 0px; background-color: rgba(131, 4, 4, 0.8);\" (click)=\"deleteBook(book.bookId)\" mat-button>\n                                        DELETE\n                                    </button>\n                                </div>\n                                <div style=\"margin-left: 10px;\" *ngIf=\"book.status != 'approved' && book.status != 'OnHold' \">\n                                    <button matTooltip=\"Verify Book\" id=\"verifyBtn\" style=\"width: 5rem; color: white; outline: none; border-radius: 0px; background-color: rgba(131, 4, 4, 0.8);\" (click)=\"verifyBook(book.bookId)\" mat-button>\n                                        Verify\n                                    </button>\n                                </div>\n                            </div>\n                        </mat-card-content>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n</div>\n\n<div *ngIf=\"!sellerBooks && orderBooks\">\n    <app-orderstatus></app-orderstatus>\n</div>","<div fxLayoutAlign=\"center center\" fxFlexFill style=\"display: flex;\">\n    <div *ngIf=\"isLoading\">\n        <app-spineer></app-spineer>\n    </div>\n    <mat-card fxFlex=\"28\" *ngIf=\"!isLoading\">\n\n        <div style=\"text-align: center;\">\n\n            <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\" fxLayoutAlign=\"flex-start\" style=\"background-color: #A03037; padding-top: 16px;\">\n                <div class=\"imgLogo\">\n                    <img src=\"assets\\education.svg\" alt=\"\">\n                </div>\n                <h2 class=\"title\">Bookstore</h2>\n            </div>\n            <h2>Sign in</h2>\n            <p>Use your Bookstore Account</p>\n        </div>\n        <div class=\"alert alert-danger text-justify\" [hidden]=\"!error\">{{error}}</div>\n        <form action=\"\" fxLayout=\"column\" fxLayoutAlign=\"start start\" #loginForm=ngForm (ngSubmit)=\"onSubmit()\" *ngIf=\"!isLoading\">\n\n            <mat-form-field appearance=\"outline\" fxLayout=\"column\" style=\"width: 100%;\">\n                <mat-label>Enter your Email</mat-label>\n                <input id=\"email\" email required matInput #emailId=\"ngModel\" type=\"email\" placeholder=\"Email\" [(ngModel)]=\"form.email\" name=\"email\">\n                <mat-icon style=\"color: #e1e4e4;\" matSuffix>email</mat-icon>\n\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                <mat-label>Enter Password</mat-label>\n                <input id=\"password\" minlength=\"3\" required [(ngModel)]=\"form.password\" name=\"password\" matInput [type]=\"hide ? 'password' : 'text'\">\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n          <mat-icon style=\"color: #e1e4e4;\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n            </mat-form-field>\n            <a fxFlexAlign=\"end\" style=\"color: #e0e0e0;\" [routerLink]=\"[ '/forget-password']\">Forget password ?</a>\n            <a fxFlexAlign=\"start\" style=\"color: #cab5b5;\" [routerLink]=\"[ '/register']\">Are you new User ?</a>\n            <br>\n            <div class=\"text-left\">\n                <h4>Login As</h4>\n                <mat-radio-group aria-label=\"Select an option\" [(ngModel)]=\"form.role\" name=\"role\">\n                    <mat-radio-button id=\"userRadioBtn\" value=\"user\" required=\"required\"> User </mat-radio-button> &nbsp;\n                    <mat-radio-button id=\"sellerRadioBtn\" value=\"seller\" required=\"required\">Seller </mat-radio-button> &nbsp;\n                    <mat-radio-button id=\"adminRadioBtn\" value=\"admin\" required=\"required\"> Admin </mat-radio-button>\n                </mat-radio-group>\n            </div>\n            <br>\n            <div fxFlexAlign=\"end\">\n                <button id=\"submit\" mat-raised-buttontype=\"submit\" style=\"\n            background-color: #a03037;\n            border-radius: 5px;\n            text-decoration-color:#FFFFFF;\n            font-size: 20px;\n            font-weight: 500;\n            color: whitesmoke;\n            width: 106px;\n            height: 40px;\n            \" [disabled]=\"!loginForm.valid\" id=\"loginBtn\" type=\"submit\">Login</button>\n            </div>\n        </form>\n    </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { UserService } from 'src/app/Service/user.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TokenService } from 'src/app/Service/token.service';\n\n@Component({\n  selector: 'app-login-component',\n  templateUrl: './login-component.component.html',\n  styleUrls: ['./login-component.component.scss']\n})\nexport class LoginComponentComponent implements OnInit {\n  public error = null;\n  public hide = true;\n  public valideUser = false;\n  public tokenValue = null;\n  public isLoading = false;\n  public form = {\n    email: null,\n    password: null,\n    role: null\n  };\n\n  constructor(private user: UserService,\n              private token: TokenService,\n              private route: Router,\n              private matSnackBar: MatSnackBar,\n              private titleService: Title\n    ) {\n      this.setTitle('Bookstore | Login');\n\n  }\n  handleError(error: { error: any; }) {\n    this.isLoading = false;\n    this.error = error.error.message;\n    if ( error.error.status === 0) {\n      console.log('please connect database');\n    }\n    this.matSnackBar.open(this.error, 'ok', {\n      duration: 5000\n    });\n    console.log(error);\n  }\n  ngOnInit() {\n  }\n  onSubmit() {\n    this.isLoading = true;\n    this.user.signIn(this.form).subscribe(\n     data => this.handleResponse(data),\n     error => this.handleError(error)\n   );\n  }\n\n  handleResponse(data) {\n    this.token.handle(data);\n    console.log(data);\n    this.isLoading = false;\n    this.token.logedIn(true);\n    console.log('user is --->' + data);\n    this.matSnackBar.open('Sucessfully Login', 'ok', {\n      duration: 5000\n    });\n    if (this.form.role === 'admin') {\n      localStorage.setItem('role', 'admin');\n      this.route.navigateByUrl('books');\n      return;\n    }\n    if (this.form.role === 'seller') {\n      localStorage.setItem('role', 'seller');\n      this.route.navigateByUrl('books');\n      return;\n    }\n    if (this.form.role === 'user') {\n      localStorage.setItem('role', 'user');\n      this.route.navigateByUrl('books');\n      return;\n    }\n}\n\n  public setTitle( dashboard: string) {\n    this.titleService.setTitle( dashboard );\n    }\n}\n","import { Component, OnInit , Inject} from '@angular/core';\nimport {  MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {  MatSnackBar } from '@angular/material/snack-bar';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BookService } from 'src/app/Service/book.service';\n@Component({\n  selector: 'app-upload-book-image',\n  templateUrl: './upload-book-image.component.html',\n  styleUrls: ['./upload-book-image.component.scss']\n})\nexport class UploadBookImageComponent implements OnInit {\n  imageForm: FormGroup;\n  constructor( public dialogRef: MatDialogRef<UploadBookImageComponent>,\n               @Inject(MAT_DIALOG_DATA) public data: any,\n               private bookService: BookService,\n               private snackbar: MatSnackBar,\n               private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.imageForm = this.formBuilder.group({\n      name: [''],\n      imageFile: [''],\n    });\n  }\n  onSelectedFile(event) {\n    if (event.target.files.length > 0) {\n      const imageFile = event.target.files[0];\n      this.imageForm.get('imageFile').setValue(imageFile);\n    }\n  }\n\n  onSubmit() {\n    this.dialogRef.close();\n    const formData = new FormData();\n    formData.append('imageFile', this.imageForm.get('imageFile').value);\n    this.bookService.uploadBookImage(this.data.bookId, formData)\n      .subscribe(\n        (message) => {\n          this.snackbar.open(message.response, 'ok', {\n            duration: 4000,\n          });\n          this.dialogRef.close(1);\n        },\n        (error: any) => {\n          console.log(error);\n        }\n      );\n  }\n\n}\n","<div class=\"container\" fxLayout=\"column\">\n    <div>\n        <div style=\"background-color: #A03037; width: 100%; margin-bottom: 1rem;\">\n            <h2 style=\"color: white; text-align: center;padding: 10px;\">Upload Image</h2>\n        </div>\n      <form [formGroup]=\"imageForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n          <input type=\"file\" name=\"image\" (change)=\"onSelectedFile($event)\" />\n        </div>\n        <div class=\"submit\">\n          <button mat-button type=\"submit\">Upload</button>\n        </div>\n      </form>\n    </div>\n  </div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpserviceService {\n\n  constructor(private http: HttpClient) { }\n  public post(url: any, data: any, head: any): any {\n    return this.http.post(url, data, head);\n  }\n  public put(url: any, data: any, head: any): any {\n    return this.http.put(url, data, head);\n  }\n\n  public delete(url: any, options: any): Observable<any> {\n    return this.http.delete(url, options);\n  }\n\n\n  public get(url: any, options: any): Observable<any> {\n    return this.http.get(url, options);\n  }\n  public getRequest(url: any): any {\n    return this.http.get(url);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TokenService } from 'src/app/Service/token.service';\nimport { Router } from '@angular/router';\nimport { BookService } from 'src/app/Service/book.service';\nimport {  MatSnackBar } from '@angular/material/snack-bar';\nimport {FormControl, Validators} from '@angular/forms';\nimport {  MatDialog } from '@angular/material/dialog';\nimport { BookModule } from 'src/app/Model/book/book.module';\nimport { Order} from 'src/app/Model/order.model';\nimport { AdminService } from 'src/app/Service/admin.service';\n\ninterface Food {\n  value: string;\n  viewValue: string;\n}\n\n\n@Component({\n  selector: 'app-orderstatus',\n  templateUrl: './orderstatus.component.html',\n  styleUrls: ['./orderstatus.component.scss']\n})\nexport class OrderstatusComponent implements OnInit {\n\n  constructor(private service: BookService ,private adminservice:AdminService ,private dialog: MatDialog,\n    private matSnackBar: MatSnackBar,private sellerService:BookService\n\n) { }\nbookSearch: any;\nname: string = null;\nbooks: any;\nstatus: string;\norderedBooks: any;\norderdetails = new Array<any>();\n\nanimalControl = new FormControl('', Validators.required);\n  selectFormControl = new FormControl('', Validators.required);\n  \n  selectedValue: string;\n \nrole:string;\nisAdmin:boolean=false;\nisSeller:boolean=false;\nngOnInit(): void {\n\n  this.role = localStorage.getItem('role');\n  if(this.role==='admin'){\n    this.isAdmin=true;\n    this.isSeller=false;\n    this.getallUserOrderedBooks();\n  }\n  else if(this.role==='seller'){\n    this.isAdmin=false;\n    this.isSeller=true;\n    this.getallUserOrderedBooks();\n  }\n\n  this.adminservice.autoRefresh$.subscribe(() => {\n    if(this.role==='admin'){\n      this.getallUserOrderedBooks();\n    }\n    else if(this.role==='seller'){\n      this.getallUserOrderedBooks();\n    }\n });\n  \n}\n\n\ngetallUserOrderedBooks() {\n  console.log('order status api called');\n  this.adminservice.getAllOrderedBooks().subscribe( response => {\n  this.orderedBooks = response.obj;\n  console.log('All orderbooks for order status= :  ', this.orderedBooks);\n  console.log(\"no of orders \"+response.obj.length);\n\n  for (let i = 0; i < response.obj.length; i++) {\n    console.log (\"Block statement execution no.\" + i);\n    console.log(\"orderId : \"+response.obj[i].orderId);\n    console.log(\"orderStatus : \"+response.obj[i].orderStatus);\n    console.log(\"bookName : \"+response.obj[i].booksList[0].bookName);\n    console.log(\"bookDetails : \"+response.obj[i].booksList[0].bookDetails);\n    console.log(\"authorName : \"+response.obj[i].booksList[0].authorName);\n    console.log(\"image : \"+response.obj[i].booksList[0].image);\n    console.log(\"bookprice : \"+response.obj[i].booksList[0].price);\n    console.log(\"totalprice : \"+response.obj[i].quantityOfBooks[0].totalprice);\n    console.log(\"quantityOfBook : \"+response.obj[i].quantityOfBooks[0].quantityOfBook);\n\n\n    var p = {orderId:response.obj[i].orderId, orderStatus:response.obj[i].orderStatus, bookName:response.obj[i].booksList[0].bookName,\n      bookDetails:response.obj[i].booksList[0].bookDetails, authorName:response.obj[i].booksList[0].authorName,\n      image:response.obj[i].booksList[0].image,  totalprice:response.obj[i].quantityOfBooks[0].totalprice,\n      quantityOfBook:response.obj[i].quantityOfBooks[0].quantityOfBook\n    };\n\n      this.orderdetails.push(p);\n      console.log(\"after push \",this.orderdetails);\n  }  \n  });\n}\n\nno:any;\n\nupdateOrderAdmin(orderId:any,status:any) {\n  console.log('Order Id',orderId);\n  console.log('Order status',status);  \n  this.adminservice.updateOrderStatus(orderId,status).subscribe(\n    (response: any) => {\n      this.matSnackBar.open(\"Order updated by Admin\", 'success', {duration: 5000});\n      \n      },\n    (error: any) => {\n      this.matSnackBar.open(error.error.message, 'failed', {duration: 5000});\n    }\n  );\n}\n\nupdateOrderSeller(orderId:any,status:any) {\n  console.log('Order Id',orderId);\n  console.log('Order status',status);  \n  this.adminservice.updateOrderStatus(orderId,status).subscribe(\n    (response: any) => {\n      this.matSnackBar.open(\"Order updated by Seller\", 'success', {duration: 5000});\n      \n      },\n    (error: any) => {\n      this.matSnackBar.open(error.error.message, 'failed', {duration: 5000});\n    }\n  );\n}\n\n// getInProgressOrderedBooks() {\n//   console.log('Get in progress order books -------------');\n//   this.sellerService.getInProgressOrderedBooks().subscribe( response => {\n//   this.orderedBooks = response.obj;\n//   console.log('In progress orderbooks for order status= :  ', this.orderedBooks);\n//   console.log(\"no of orders \"+response.obj.length);\n\n//   for (let i = 0; i < response.obj.length; i++) {\n//     console.log (\"Block statement execution no.\" + i);\n//     console.log(\"orderId : \"+response.obj[i].orderId);\n//     console.log(\"orderStatus : \"+response.obj[i].orderStatus);\n//     console.log(\"bookName : \"+response.obj[i].booksList[0].bookName);\n//     console.log(\"bookDetails : \"+response.obj[i].booksList[0].bookDetails);\n//     console.log(\"authorName : \"+response.obj[i].booksList[0].authorName);\n//     console.log(\"image : \"+response.obj[i].booksList[0].image);\n//     console.log(\"bookprice : \"+response.obj[i].booksList[0].price);\n//     console.log(\"totalprice : \"+response.obj[i].quantityOfBooks[0].totalprice);\n//     console.log(\"quantityOfBook : \"+response.obj[i].quantityOfBooks[0].quantityOfBook);\n\n\n//     var p = {orderId:response.obj[i].orderId, orderStatus:response.obj[i].orderStatus, bookName:response.obj[i].booksList[0].bookName,\n//       bookDetails:response.obj[i].booksList[0].bookDetails, authorName:response.obj[i].booksList[0].authorName,\n//       image:response.obj[i].booksList[0].image,  totalprice:response.obj[i].quantityOfBooks[0].totalprice,\n//       quantityOfBook:response.obj[i].quantityOfBooks[0].quantityOfBook\n//     };\n\n//       this.orderdetails.push(p);\n//       console.log(\"after in progress order push \",this.orderdetails);\n//   }  \n//   });\n// }\n  \n}\n","<div class=\"main-container\">\n    <div class=\"container\">\n        <div class=\"list-books\">\n            <div *ngFor=\" let book of orderdetails | booksearchpipe:bookSearch\">\n                <div *ngIf=\"isAdmin\">\n                <mat-card  style=\"display: flex;flex-direction: row;  padding: 1rem;\" matTooltip=\"{{ book.bookDetails }}\">\n\n                    <div>\n                        <mat-card-title style=\"padding: 1rem;\"  matTooltip=\"Update Image\">\n                            <img src=\"assets\\bookimage\\{{book.image}}\" style=\"height: 13rem; width: 10rem; padding: 16px 0px 16px 16px ;\" />\n                        </mat-card-title>\n                    </div>\n                    <div style=\"width: 20rem;\">\n                        <mat-card-content style=\"display: flex;flex-direction: column;flex-wrap: nowrap;width: auto; margin-top: 10px; margin-bottom: 0px;\">\n                            \n                            <div class=\"noofbooks\">Order Number : {{ book.orderId }}</div>\n                            <div class=\"bookname\">Book Name : {{ book.bookName }}</div>\n                            <div class=\"authorname\">Author name : {{ book.authorName }}</div>\n                            <div class=\"description\">Description : {{ book.bookDetails }}</div>\n                            <div class=\"description\">Quantity of book : {{ book.quantityOfBook }}</div>\n                            <div class=\"price\">Total Price : {{\"₹ \"+book.totalprice }}</div>\n                            \n                            <div class=\"status\" >Order Status : <label style=\"color: green;\">{{ book.orderStatus }}</label> </div>\n                            \n                            <div style=\"display: flex; justify-content: flex-start; margin-left: 20px;\">\n                                \n                             \n                                <div *ngIf=\"isAdmin\">\n                                    <button id=\"updateOrderStatusBtn\" [disabled]=\"book.orderStatus === 'in shipment' || book.orderStatus === 'delivered' || book.orderStatus === 'in progress'\" \n                                    [hidden]=\"book.orderStatus === 'in shipment' || book.orderStatus === 'delivered' || book.orderStatus === 'in progress'\" style=\"width: 8rem; margin-left: 0px; margin-top:auto; color: white; outline: none; border-radius: 0px; background-color: rgba(131, 4, 4, 0.8);\"  (click)=\"updateOrderAdmin(book.orderId,'in progress')\"  mat-button>\n                              Update-Order\n                          </button>\n                                                                 \n                                </div>\n                            </div>\n                        </mat-card-content>\n                    </div>\n                </mat-card>\n            </div>\n\n            <div *ngIf=\"isSeller\">\n                <mat-card *ngIf=\"book.orderStatus !='delivered' && book.orderStatus !='pending' \" style=\"display: flex;flex-direction: row;  padding: 1rem;\" matTooltip=\"{{ book.bookDetails }}\">\n\n                    <div>\n                        <mat-card-title style=\"padding: 1rem;\"  matTooltip=\"Update Image\">\n                            <img src=\"assets\\bookimage\\{{book.image}}\" style=\"height: 13rem; width: 10rem; padding: 16px 0px 16px 16px ;\" />\n                        </mat-card-title>\n                    </div>\n                    <div style=\"width: 20rem;\">\n                        <mat-card-content style=\"display: flex;flex-direction: column;flex-wrap: nowrap;width: auto; margin-top: 10px; margin-bottom: 0px;\">\n                            \n                            <div class=\"noofbooks\">Order Number : {{ book.orderId }}</div>\n                            <div class=\"bookname\">Book Name : {{ book.bookName }}</div>\n                            <div class=\"authorname\">Author name : {{ book.authorName }}</div>\n                            <div class=\"description\">Description : {{ book.bookDetails }}</div>\n                            <div class=\"description\">Quantity of book : {{ book.quantityOfBook }}</div>\n                            <div class=\"price\">Total Price : {{\"₹ \"+book.totalprice }}</div>\n                            \n                            <div class=\"status\" >Order Status : <label style=\"color: green;\">{{ book.orderStatus }}</label> </div>\n                            \n                            <div style=\"display: flex; justify-content: flex-start; margin-left: 20px;\">\n                                \n                             \n                               \n                                <div *ngIf=\"book.orderStatus != 'delivered'\" >\n                                    <mat-form-field>\n                                        <mat-label>Update Order Status</mat-label>\n                                        <mat-select disableRipple>\n                                        <mat-option [disabled]=\"book.orderStatus === 'in shipment' || book.orderStatus === 'delivered'\" (click)=\"updateOrderSeller(book.orderId,'in shipment')\" >In Shipment</mat-option>\n                                        <mat-option [disabled]=\"book.orderStatus === 'in progress' || book.orderStatus === 'delivered'  \" (click)=\"updateOrderSeller(book.orderId,'delivered')\">Delivered</mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </mat-card-content>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>","<div role=\"combobox\" flex=\"column\" style=\"margin-left: 23%;\">\n\n\n\n    <div *ngFor=\"let book of books\">\n        <div>\n            <mat-card class=\"matcard2\">\n                <div class=\"cartdetails\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                    <img class=\"bookimg\" src=\"assets\\bookimage\\{{book.image}}\" />\n\n                    <div class=\"bookdetails\">\n                        <div class=\"booktitle\" style=\"word-wrap: break-word;\">\n                            {{book.bookName}}\n                        </div>\n\n                        <div class=\"sub\" style=\"word-wrap: break-word;\">\n                            {{book.authorName}}\n                        </div>\n\n                        <div style=\"\n                  margin-bottom: 11%;\n                  font: Bold 18px/15px Lato;\n                  margin-left: -25px;\n                \">\n\n                            Rs. {{book.price}}\n                        </div>\n\n                    </div>\n                </div>\n                <div style=\"margin-bottom: 8px; margin-left: 27px; margin-top:20px; font: Bold 18px/15px Lato;\">\n                    Description:\n                </div>\n                <div style=\"margin-left: 27px;\">{{book.bookDetails}}</div>\n\n                <!-- </div> -->\n\n                <div fxLayout=\"row wrap\" fxLayoutAlign=\"end end\">\n                    <button  id=\"approveBtn\" mat-raised-button class=\"button\" (click)=\"approveBooks(book.bookId,'approved')\">\n              APPROVE\n            </button>\n                    <button id=\"rejectBtn\" mat-raised-button class=\"button\" style=\"background-color: #f44336;\" (click)=\"rejectBooks(book.bookId,'rejected')\">\n              REJECT\n            </button>\n\n\n                </div>\n\n            </mat-card>\n            <br />\n        </div>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BookModule } from 'src/app/Model/book/book.module';\nimport { AdminService } from 'src/app/Service/admin.service';\nimport {MatSnackBarModule, MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-adminunverifiedbooks',\n  templateUrl: './adminunverifiedbooks.component.html',\n  styleUrls: ['./adminunverifiedbooks.component.scss']\n})\nexport class AdminunverifiedbooksComponent implements OnInit {\n\n  constructor(private adminService: AdminService , private snakbar: MatSnackBar) { }\n\n  book = [];\n  books = new Array<BookModule>();\n  noteId = 1;\n  status: string;\n\n  ngOnInit(): void {\n\n    this.getUnApprovedBooks(status);\n\n    // this.dataSource.paginator = this.paginator;\n    console.log('books ', this.books);\n    this.adminService.autoRefresh.subscribe(() => {\n      this.getUnApprovedBooks(status);\n    });\n  }\n\n\n  getUnApprovedBooks(status: string) {\n    console.log('method called');\n    this.adminService.getUnverifiedBooks('OnHold').subscribe(\n\n      (response: any) => {\n        console.log('response', response);\n        console.log('books:', response.obj);\n        this.books = response.obj;\n        },\n      (error: any) => {\n        this.snakbar.open(error.error.message, 'failed', {duration: 5000});\n      }\n    );\n\n\n  }\n\n  approveBooks(bookId: number, status: string) {\n    console.log('bookId from approve button:', bookId);\n    this.adminService.approveBooks(bookId, status).subscribe(\n\n      (response: any) => {\n        console.log('response', response);\n        this.snakbar.open('book is approved', 'success', {duration: 4000});\n\n        },\n      (error: any) => {\n        this.snakbar.open(error.error.message, 'failed', {duration: 5000});\n      }\n    );\n\n\n  }\n\nrejectBooks(bookId: number, status: string) {\n  console.log('bookId from reject button:', bookId);\n  this.adminService.rejectBooks(bookId, status).subscribe(\n\n      (response: any) => {\n        console.log('response', response);\n        console.log('notes:', response.obj);\n        this.snakbar.open('book is rejected', 'success', {duration: 4000});\n\n        },\n      (error: any) => {\n        this.snakbar.open(error.error.message, 'failed', {duration: 5000});\n      }\n    );\n}\n}\n","<div *ngIf=\"isLoading\">\n    <app-spineer></app-spineer>\n</div>\n<div fxLayoutAlign=\"center center\" fxFlexFill *ngIf=\"!isLoading\">\n    <mat-card fxFlex=\"28\">\n\n        <div>\n            <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\" fxLayoutAlign=\"flex-start\" style=\"background-color: #A03037; padding-top: 16px;\">\n\n                <div class=\"imgLogo\">\n                    <img src=\"assets\\education.svg\" alt=\"\">\n                </div>\n\n                <h2 class=\"title\">Bookstore</h2>\n            </div>\n            <div class=\"alert alert-danger text-justify\" [hidden]=\"!error\">{{error}}</div>\n            <div class=\"alert alert-success text-justify\" [hidden]=\"!message\">{{message}}</div>\n            <br>\n            <h2 class=\"text-center\">Forgot Password</h2>\n            <p>Please Enter your Email</p>\n        </div>\n        <form action=\"\" fxLayout=\"column\" fxLayoutAlign=\"start start\" #forgetPassword=ngForm (ngSubmit)=\"onSubmit()\">\n            <mat-form-field appearance=\"outline\" fxLayout=\"column\" style=\"width: 100%;\">\n                <mat-label>Enter your Email</mat-label>\n                <input email required matInput type=\"email\" placeholder=\"Email\" [(ngModel)]=\"form.email\" name=\"email\">\n                <mat-icon style=\"color: #e1e4e4;\" matSuffix>email</mat-icon>\n                <mat-error style=\"color: #A03037;\">Valid Email require</mat-error>\n            </mat-form-field>\n            <br>\n\n\n            <button style=\"\n            background-color: #a03037;\n            border-radius: 5px;\n            text-decoration-color:#FFFFFF;\n            font-size: 20px;\n            font-weight: 500;\n            color: whitesmoke;\n            width: 106px;\n            height: 40px;\n\n            \" mat-raised-button [disabled]=\"!forgetPassword.valid\" type=\"submit\" fxFlexAlign=\"end\" color=\"primary\">Send</button>\n        </form>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/Service/user.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.scss']\n})\nexport class ForgetPasswordComponent implements OnInit {\n  public isLoading = false;\n  public error = null;\n  message = null;\n  public form = {\n    email: null,\n  };\n\n  constructor(\n    private user: UserService,\n    private route: Router,\n    private matSnackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n  }\n  onSubmit() {\n    this.isLoading = true;\n    this.user.forgetPassword(this.form).subscribe(\n      data => this.handleResponse(data),\n      error => this.handleError(error));\n  }\n  handleError(error: { error: any; }) {\n    this.isLoading = false;\n    this.error = error.error.message;\n    console.log(error);\n    this.matSnackBar.open(this.error, 'ok', {\n      duration: 5000\n    });\n  }\n  handleResponse(data) {\n    this.isLoading = false;\n    this.matSnackBar.open('Check Your Email Please ', 'ok', {\n      duration: 5000\n    });\n    this.route.navigateByUrl('\\login');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators,FormControl } from '@angular/forms';\nimport {  MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {   MatSnackBar } from '@angular/material/snack-bar';\nimport { BookService } from 'src/app/Service/book.service';\nimport { BookModule } from 'src/app/Model/book/book.module';\n@Component({\n  selector: 'app-addbook',\n  templateUrl: './addbook.component.html',\n  styleUrls: ['./addbook.component.scss']\n})\nexport class AddbookComponent implements OnInit {\n  bookForm: FormGroup;\n  bookid;\n  constructor( private matSnackBar: MatSnackBar,\n               private formBuilder: FormBuilder,\n               private bookService: BookService,\n               private dialog: MatDialog,\n               private dialogRef: MatDialogRef<AddbookComponent>) { }\n    private imageFile: string;\n  ngOnInit(): void {}\n\n  addbooks: BookModule = new BookModule();\n  bookName = new FormControl(this.addbooks.bookName, [\n    Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(25),\n    Validators.pattern(\"[a-zA-Z ]*\"),\n  ]);\n  authorName = new FormControl(this.addbooks.authorName, [\n    Validators.required,\n    Validators.minLength(5),\n    Validators.maxLength(25),\n    Validators.pattern(\"[a-zA-Z ]*\"),\n  ]);\n  price = new FormControl(this.addbooks.price, [\n    Validators.required,\n    Validators.minLength(1),\n    Validators.pattern(\"[0-9 ]*\"),\n  ]);\n  noOfBooks = new FormControl(this.addbooks.noOfBooks, [\n    Validators.required,\n    Validators.minLength(1),\n    Validators.pattern(\"[0-9]*\"),\n  ]);\n  bookDetails = new FormControl(this.addbooks.bookDetails, [\n    Validators.required,\n    Validators.minLength(20),\n    Validators.pattern(\"[a-zA-Z ]*\"),\n  ]);\n\n\n  onSelectedImage(event) {\n    if (event.target.files.length > 0) {\n      const image = event.target.files[0];\n      this.imageFile = image.name;\n    }\n  }\n    onClickaddBook() {\n      this.bookService.addBook(this.addbooks, this.imageFile).subscribe(\n        (user) => {\n          if (user.statusCode === 200) {\n            this.matSnackBar.open(user.response, 'ok', {duration: 4000});\n            this.dialogRef.close(1);\n          }\n        },\n        (error: any) => {\n          this.matSnackBar.open(error.error, 'ok', { duration: 4000 });\n          console.log(error);\n        }\n      );\n      if (this.bookForm.invalid) {\n        return;\n      }\n    }\n    \n    bookNameValidation() {\n      return this.bookName.hasError(\"required\") ? \"Book Name must be required\" : \n             this.bookName.hasError(\"minlength\") ? \"Minimum 3 character must be present\" : \n             this.bookName.hasError(\"maxlength\") ? \"Maximum 25 character allowed\" : \"\";\n    }\n    bookAuthorValidation() {\n      return this.authorName.hasError(\"required\") ? \"Author name must be required\" : \n             this.authorName.hasError(\"minlength\") ? \"Minimum 5 character must be present\" : \n             this.authorName.hasError(\"maxlength\") ? \"Maximum 25 character allowed\" : \"\";\n    }\n    bookPriceValidation() {\n      return this.price.hasError(\"required\") ? \"Price must be required\" :\n             this.price.hasError('pattern')? \"Only numbers allowed\":\n             this.price.hasError(\"minlength\") ? \"Minimum 1 digit must be there\" :\"\";\n    }\n    noOfBooksValidation() {\n      return this.noOfBooks.hasError(\"required\") ? \"Total Number of must be required\" : \n             this.noOfBooks.hasError('pattern')? \"Only numbers allowed\":\n             this.noOfBooks.hasError(\"minlength\") ? \"Minimum 1 digit must be there\" :\"\";\n    }\n    bookDescriptionValidation() {\n      return this.bookDetails.hasError(\"required\") ? \"Book Description must required\" :\n             this.bookDetails.hasError(\"minlength\") ? \"Minimum 20 characters  must be there\" :\"\";\n    }\n   \n}\n","<div class=\"container\">\n\n\n    <div style=\"background-color: #A03037; width: 100%; margin-bottom: 10px;\">\n        <h2 style=\"color: white; text-align: center;padding-top: 10px;\">Add Book</h2>\n    </div>\n\n\n    <form  >\n        <div class=\"book-details\">\n            <mat-form-field appearance=\"outline\"   >\n                <mat-label>Book Name</mat-label>\n                <mat-error *ngIf=\"bookName.invalid\"> {{bookNameValidation()}}</mat-error>\n                <input type=\"name\" matInput placeholder=\"Enter your Bookname\" id=\"bookName\" [formControl]=\"bookName\"   [(ngModel)]=\"addbooks.bookName\"  autocomplete=\"off\" required>\n                <mat-icon matSuffix style=\"color: grey;\">book</mat-icon>\n            </mat-form-field>\n        </div>\n         \n        <div class=\"book-details\">\n            <mat-form-field appearance=\"outline\" >\n                <mat-label >Book Authour</mat-label>\n                <mat-error *ngIf=\"authorName.invalid\"> {{bookAuthorValidation()}}</mat-error>\n                <input type=\"name\" matInput placeholder=\"Enter your Bookauthour\" id=\"bookAuthor\"  [(ngModel)]=\"addbooks.authorName\" [formControl]=\"authorName\"  autocomplete=\"off\" required>\n                <mat-icon matSuffix style=\"color: grey;\">person</mat-icon> \n            </mat-form-field>\n        </div>\n\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\" >\n            <mat-form-field appearance=\"outline\" class=\"example-full-width3\">\n                <mat-label >Book Price</mat-label>\n                <mat-error *ngIf=\"price.invalid\"> {{bookPriceValidation()}}</mat-error>\n                <input type=\"number\" matInput placeholder=\" price\" id=\"price\" [(ngModel)]=\"addbooks.price\" [formControl]=\"price\" autocomplete=\"off\" required>\n                <mat-icon matSuffix style=\"color: grey;\"> \n                    <svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n                        <path fill=\"currentColor\" d=\"M8,3H18L17,5H13.74C14.22,5.58 14.58,6.26 14.79,7H18L17,9H15C14.75,11.57 12.74,13.63 10.2,13.96V14H9.5L15.5,21H13L7,14V12H9.5V12C11.26,12 12.72,10.7 12.96,9H7L8,7H12.66C12.1,5.82 10.9,5 9.5,5H7L8,3Z\" />\n                    </svg>\n                </mat-icon>\n            </mat-form-field>\n        \n            <mat-form-field appearance=\"outline\" class=\"example-full-width4\" >\n                <mat-label>Book Quantity</mat-label>\n                <mat-error *ngIf=\"noOfBooks.invalid\"> {{noOfBooksValidation()}}</mat-error>\n                <input type=\"text\"   matInput placeholder=\"No Of Books\" id=\"qty\" [(ngModel)]=\"addbooks.noOfBooks\" [formControl]=\"noOfBooks\" autocomplete=\"off\" required>\n                <mat-icon matSuffix style=\"color: grey;\">pets</mat-icon>\n            </mat-form-field>\n        </div>\n      \n        <div class=\"book-details\">\n            <mat-form-field appearance=\"outline\"  >\n                <mat-label>Book Description</mat-label>\n                <mat-error *ngIf=\"bookDetails.invalid\"> {{bookDescriptionValidation()}}</mat-error>\n                <input type=\"text\"  id=\"desc\" matInput placeholder=\"Enter your bookDescription\" [(ngModel)]=\"addbooks.bookDetails\" [formControl]=\"bookDetails\"autocomplete=\"off\" required>\n                <mat-icon matSuffix style=\"color: grey;\">edit</mat-icon>\n            </mat-form-field>\n        </div>\n        \n        <div class=\"book-details\">\n            <input type=\"file\" name=\"image\" (change)=\"onSelectedImage($event)\" />\n        </div>\n        <div class=\"submit\">\n            <button mat-button id=\"submit\" [disabled]=\" bookName.invalid || authorName.invalid || price.invalid || noOfBooks.invalid\" type=\"submit\" style=\"border: none;border-radius: 0px; outline: none;\" (click)=\"onClickaddBook()\">\n                Add Book\n            </button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spineer',\n  templateUrl: './spineer.component.html',\n  styleUrls: ['./spineer.component.scss']\n})\nexport class SpineerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div id=\"loader\">\n            <div class=\"dot\"></div>\n            <div class=\"dot\"></div>\n            <div class=\"dot\"></div>\n            <div class=\"dot\"></div>\n            <div class=\"dot\"></div>\n            <div class=\"dot\"></div>\n            <div class=\"dot\"></div>\n            <div class=\"dot\"></div>\n            <div class=\"loading\"></div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bottom\" style=\"height: 5%;\">\n    Copyright &copy; 2020, Bookstore All rights reserved\n</div>\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { HttpserviceService } from './httpservice.service';\nimport { Observable, Subject } from 'rxjs';\nimport { tap, map, catchError } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  private bookApiUrl = environment.BookUrl;\n  private baseUrl = environment.BASE_URL;\n  private httpOptions = {headers: new HttpHeaders({'content-type': 'application/json'})};\n  // tslint:disable-next-line: variable-name\n  private _autoRefresh$ = new Subject();\n\n  get autoRefresh$() {\n    return this._autoRefresh$;\n  }\n\n  constructor(private http: HttpClient, private httpService: HttpserviceService) { }\n\n  private httpOtions = {\n    headers: new HttpHeaders({ 'content-type': 'application/json' })\n  };\n\n  post( arr: any): Observable<any> {\n    console.log(arr, 'custmerdetails');\n    return this.httpService.post(environment.CartUrl + environment.addUrl, arr, '');\n  }\n  addToCart(bookId: any): Observable<any> {\n    return this.httpService\n      .post(`${environment.BookUrl}/${environment.ADDCART}/${bookId}`, {}, {headers: new HttpHeaders({token: localStorage.token})})\n      .pipe(\n        tap(() => {\n          this._autoRefresh$.next();\n        })\n      );\n  }\n  increaseBooksQuantity(bookId, CartInfo) {\n    console.log('cart details are ', CartInfo);\n    return this.httpService\n    // tslint:disable-next-line: max-line-length\n    .put(`${environment.BookUrl}/${environment.INC_BOOKS_QUANTITY}${bookId}`, CartInfo , {headers: new HttpHeaders({token: localStorage.token})})\n    .pipe(\n      tap(() => {\n        this._autoRefresh$.next();\n      })\n    );\n  }\n\n decreaseBooksQuantity(bookId, CartInfo) {\n    console.log('cart details are ', CartInfo);\n    return this.httpService\n    // tslint:disable-next-line: max-line-length\n    .put(`${environment.BookUrl}/${environment.DEC_BOOKS_QUANTITY}${bookId}`, CartInfo , {headers: new HttpHeaders({token: localStorage.token})})\n    .pipe(\n      tap(() => {\n        this._autoRefresh$.next();\n      })\n    );\n  }\n\n\n\n\n  removeIteamFromCart(bookId: number) {\n    return this.httpService\n    // tslint:disable-next-line: max-line-length\n    .delete(`${environment.BookUrl}/${environment.REMOVE_BOOKS_FROM_CART}/${bookId}`, {headers: new HttpHeaders({token: localStorage.token})})\n    .pipe(\n      tap(() => {\n        this._autoRefresh$.next();\n      })\n    );\n  }\n\n  getCartBooksFrom() {\n    // tslint:disable-next-line: max-line-length\n    return this.httpService.get(`${this.baseUrl}/${environment.GET_BOOKS_FROM_CART}`, {headers: new HttpHeaders({token: localStorage.token})});\n  }\n\n  getCartItemCount(): Observable<any> {\n    console.log('get itmes from cart');\n    // tslint:disable-next-line: max-line-length\n    return this.httpService.get(`${this.baseUrl}/${environment.COUNT_BOOKS_IN_CART}`, {headers: new HttpHeaders({token: localStorage.token})});\n  }\n\n\n  addquantity(BookId: any, quantity: any): Observable<any> {\n    return this.httpService.post(environment.quantity + environment.addbooksquantity + '/' + BookId + '/' + quantity, '', '');  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ordergreeting',\n  templateUrl: './ordergreeting.component.html',\n  styleUrls: ['./ordergreeting.component.scss']\n})\nexport class OrdergreetingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-toolbar></app-toolbar>\n<div style=\"height: 100%; width: 100%;\">\n    <div class=\"greeting1\">\n        <img src=\"assets\\greeting1.jpg\" style=\"height: 15rem; width: 15rem;\" />\n    </div>\n    <div class=\"message\">\n        <span style=\"color:red\">Order </span>\n        <span style=\"color: rgb(42, 42, 243);\">&nbsp; Placed</span>\n        <span style=\"color: red\">&nbsp; Successfully</span>\n    </div>\n    <div class=\"greeting2\" style=\"margin-top: 10px;\">\n        <span>hurry!!!your order is confirmed</span>\n    </div>\n    <div class=\"greeting2\">\n        <span>Please Check Your Email</span>\n    </div>\n    <div class=\"greeting2\">\n        <span> For further Communication...</span>\n    </div>\n    <div class=\"contact-heading\"><span>Contact Us</span></div>\n    <div class=\"contactus\">\n        <div class=\"card\">\n            <mat-card class=\"email\">\n                <mat-card-title style=\"display: flex; justify-content: center; align-items: center; background-color: rgb(248, 195, 191);\">Email us</mat-card-title>\n                <mat-card-content style=\"display: flex; justify-content: center; align-items: center;\">bangalore.bridgelabz@gmail.com</mat-card-content>\n            </mat-card>\n        </div>\n        <div class=\"card\">\n            <mat-card>\n                <mat-card-title style=\"  display: flex;  justify-content: center;  align-items: center;background-color: rgb(248, 195, 191); \">Contact us</mat-card-title>\n                <mat-card-content style=\"display: flex; justify-content: center; align-items: center;\">+91-0123456789</mat-card-content>\n            </mat-card>\n        </div>\n        <div class=\"card\">\n            <mat-card>\n                <mat-card-title style=\"  display: flex;  justify-content: center;  align-items: center;  background-color: rgb(248, 195, 191);    \">Address</mat-card-title>\n                <mat-card-content style=\"display: flex; justify-content: center; align-items: center;\">Bridge Labz , HSR Layout , Bangalore</mat-card-content>\n            </mat-card>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'BookStore';\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Subject, Observable } from 'rxjs';\nimport { HttpserviceService } from './httpservice.service';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private http: HttpClient, private httpService: HttpserviceService) { }\n\n  private adminUrl = environment.adminUrl;\n  private approveBook = environment.approveBook;\n  private rejectBook = environment.rejectBook;\n  private unVerifiedBooks = environment.unVerifiedBooks;\n  private rejectedBooks = environment.rejectedBooks;\n  private approvedBooks = environment.approvedBooks;\n\n  private token = localStorage.getItem('token');\n\n  private getallOrderedBooks = environment.getallOrderedBooks;\n  private changeOrderstatus = environment.changeOrderstatus;\n  // tslint:disable-next-line: variable-name\n  private _autoRefresh$ = new Subject();\n\n  get autoRefresh$() {\n    return this._autoRefresh$;\n  }\n\n  // private token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpZCI6M30.rzol7EjZW2exz-O-d40T3FvIem3Lk8kYGTngic_YHHX2_T7c4zMCcjDfzMXtOHehZkP8cW7TDK_tWELwWkkryQ\";\n\n\n\n\n\n  private subject = new Subject<any>();\n  public get autoRefresh() {\n    return this.subject;\n  }\n\n  private httpOptions = {\n    headers: new HttpHeaders ({'content-type': 'application/json' , token: this.token})\n    };\n\n    getUnverifiedBooks(status: string) {\n      // status='Onhold';\n      console.log('unverified books ' + this.adminUrl + this.unVerifiedBooks + '?status=' + status);\n      return this.httpService.get(this.adminUrl + this.unVerifiedBooks + '?status=' + status, this.httpOptions);\n    }\n\n    getRejectedBooks() {\n\n      return this.httpService.get(this.adminUrl + this.rejectedBooks, this.httpOptions);\n    }\n\n    getApprovedBooks(status: string) {\n\n      return this.httpService.get(this.adminUrl + this.approvedBooks + '?status=' + status, this.httpOptions);\n    }\n\n    approveBooks(noteId: number, status: string): Observable<any> {\n\n      // tslint:disable-next-line: max-line-length\n      return this.httpService.put(this.adminUrl + this.approveBook + noteId + '?' + 'status=' + status, '', this.httpOptions).pipe(tap(() => { this.subject.next(); }));\n    }\n\n    rejectBooks(noteId: number, status: string): Observable<any> {\n\n      // tslint:disable-next-line: max-line-length\n      return this.httpService.put(this.adminUrl + this.rejectBook + noteId + '?' + 'status=' + status, '', this.httpOptions).pipe(tap(() => { this.subject.next(); }));\n    }\n\n    getAllOrderedBooks(): Observable<any> {\n      console.log('order status url');\n      console.log(this.httpService.get(this.adminUrl + this.getallOrderedBooks, this.httpOptions));\n      return this.httpService.get(this.adminUrl + this.getallOrderedBooks, {});\n     }\n\n\n\n     updateOrderStatus(orderId: any, status: any): Observable<any> {\n      //  var y:number =+orderId;\n       console.log('url ' + this.adminUrl + this.changeOrderstatus + '?orderId=' + orderId + '&status=' + status);\n\n\n      // return this.httpService.put(this.adminUrl+this.changeOrderstatus+\"?orderId=\"+orderId+\"&status=\"+status,\"\",this.httpOptions);\n\n       return this.httpService\n                             // tslint:disable-next-line: max-line-length\n                             .put(this.adminUrl + this.changeOrderstatus + '?orderId=' + orderId + '&status=' + status, '', this.httpOptions);\n                            //  .pipe(\n                            //   tap(() => {\n                            //     this._autoRefresh$.next();\n                            //   })\n                            // );\n\n      // http://localhost:8080/bookstore/orderStatusByAdmin?orderId=583785&status=in%20progress\n     }\n  //    @GetMapping(value = \"bookstore/orderedbooks/{token}\")\n // public ResponseEntity<Response> getOrderlist(@PathVariable(\"token\") String token) throws Exception {\n\n  }\n","export class Address {\n  name: string;\n  address: string;\n  addressId: number;\n  type: string;\n  country: string;\n  landmark: string;\n  locality: string;\n  city: string;\n  pincode: number;\n  phoneNumber: string;\n  state: string;\n  addressType: any;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { HttpserviceService } from './httpservice.service';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  private httpOptions = {headers: new HttpHeaders({'content-type': 'application/json'})};\n  // tslint:disable-next-line: variable-name\n  private _autoRefresh$ = new Subject();\n\n  get autoRefresh$() {\n    return this._autoRefresh$;\n  }\n\n  constructor(private http: HttpClient, private httpService: HttpserviceService) { }\n\n  private httpOtions = {\n    headers: new HttpHeaders({ 'content-type': 'application/json' })\n  };\n  placeOrder(bookId: any, AddressId: any): Observable<any> {\n    // tslint:disable-next-line: max-line-length\n    return this.http.post(`${environment.BASE_URL}/${environment.PLACE_ORDER}${AddressId}&bookId=${bookId}`,\n    {}, {headers: new HttpHeaders({token: localStorage.token})});\n  }\n}\n","<div *ngIf=\"!unverified&&!orders&&!review\">\n\n    <app-ratedbooks></app-ratedbooks>\n</div>\n\n<div *ngIf=\"unverified&&!orders&&!review\">\n    <app-adminunverifiedbooks></app-adminunverifiedbooks>\n</div>\n\n<div *ngIf=\"!unverified&&orders&&!review\">\n    <app-orderstatus></app-orderstatus>\n</div>\n\n<div *ngIf=\"!unverified&&!orders&&review\">\n    <p>reviews</p>\n    <p>Dilbert cartoonist Adams, with his usual adroit touch and sense of humor, offers an enjoyably provocative guide to the art of persuasion. In 2016, Adams predicted that Donald Trump would win the presidency when few others considered him a serious\n        contender. What did Adams see that experts missed? Declaring himself a “lifelong student” of the art of persuasion, Adams offers sharp insights into how Trump persuades people, keeps the spotlight on himself and the topics of his choice, and used\n        these skills to talk his way into the White House.</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router , ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  name: string = null;\n  private param: any;\n  unverified = false;\n  orders = false;\n  review = false;\n  constructor(private router: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // this.getUserName();\n    this.router.queryParams.subscribe(params => {\n      this.param = params.book;\n      if (this.param === 'unverified') {\n     this.unverified = true;\n     this.orders = false;\n     this.review = false;\n     console.log('unverifed:', this.unverified);\n    }\n      if (this.param === 'order') {\n    this.orders = true;\n    this.unverified = false;\n    this.review = false;\n    }\n      if (this.param === 'review') {\n    this.review = true;\n    this.orders = false;\n    this.unverified = false;\n    }\n      if (this.param === 'books') {\n    this.review = false;\n    this.orders = false;\n    this.unverified = false;\n    }\n  });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class BookModule {\n  [x: string]: any;\n\n  bookId: number;\n  BookModule: string;\n  bookDetails: string;\n  authorName: string;\n  bookName: string;\n  price: number;\n  noOfBooks: number;\n  image: string;\n  createdDateAndTime: Date;\n  status: string;\n }\n","import { WishComponent } from './Component/wish/wish.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToolbarComponent } from './Component/toolbar/toolbar.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatPaginatorModule} from '@angular/material/paginator';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DisplaybookComponent } from './Component/displaybook/displaybook.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSnackBarModule } from '@angular/material/snack-bar';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatSelectModule} from '@angular/material/select';\nimport { BooksearchpipePipe } from './Pipe/booksearchpipe.pipe';\nimport { CartComponent } from './Component/cart/cart.component';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatRadioModule} from '@angular/material/radio';\nimport { OrdergreetingComponent } from './Component/ordergreeting/ordergreeting.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatIconModule} from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n//import { PagenotfoundComponent } from './component/pagenotfound/pagenotfound.component';\nimport { ForgetPasswordComponent } from './Component/auth/forget-password/forget-password.component';\nimport { ResetPasswordComponent } from './Component/auth/reset-password/reset-password.component';\nimport { AdminComponent } from './Component/admin/admin/admin.component';\nimport { SpineerComponent } from './Component/spineer/spineer.component';\nimport { LoginComponentComponent } from './Component/auth/login-component/login-component.component';\nimport { RegistrationComponent } from './Component/auth/registration/registration.component';\nimport { SellerComponent } from './Component/seller/seller/seller.component';\nimport { FooterComponent } from './Component/footer/footer.component';\nimport { DashboardComponent } from './Component/dashboard/dashboard.component';\nimport { SidenavbarComponent } from './Component/sidenavbar/sidenavbar.component';\nimport { AddbookComponent } from './Component/addbook/addbook.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { UpdateBookComponent } from './Component/update-book/update-book.component';\nimport { GiverateComponent } from './Component/giverate/giverate.component';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { AdminunverifiedbooksComponent } from './Component/adminunverifiedbooks/adminunverifiedbooks.component';\nimport { RatereviewComponent } from './Component/ratereview/ratereview.component';\nimport { RatedbooksComponent } from './Component/ratedbooks/ratedbooks.component';\nimport { BookreviewsComponent } from './Component/bookreviews/bookreviews.component';\nimport { OrderstatusComponent } from './Component/orderstatus/orderstatus.component';\nimport { UploadBookImageComponent } from './Component/addbook/upload-book-image/upload-book-image.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ToolbarComponent,\n    DisplaybookComponent,\n    BooksearchpipePipe,\n    CartComponent,\n    OrdergreetingComponent,\n    //PagenotfoundComponent,\n    ForgetPasswordComponent,\n    ResetPasswordComponent,\n    AdminComponent,\n    SpineerComponent,\n    LoginComponentComponent,\n    RegistrationComponent,\n    SellerComponent,\n    FooterComponent,\n    DashboardComponent,\n    SidenavbarComponent,\n    GiverateComponent,\n    AdminunverifiedbooksComponent,\n    RatereviewComponent,\n    AddbookComponent,\n    UpdateBookComponent,\n    UploadBookImageComponent,\n    BookreviewsComponent,\n    OrderstatusComponent,\n    RatedbooksComponent,\n    WishComponent\n\n  ],\n  imports: [\n    MatBadgeModule,\n    BrowserModule,\n    MatToolbarModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    FormsModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatIconModule,\n    FlexLayoutModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatDialogModule,\n ],\n  providers: [HttpClient],\n  bootstrap: [AppComponent],\n\n})\nexport class AppModule { }\n","export class Customer {\n     Name: string;\n     Phonenumber: number;\n     home: any;\n     Work: any;\n     Other: any;\n}\n","<div style=\"width: 100%;\" style=\"height: 11%;\">\n    <app-toolbar flexLayout=\"row\"></app-toolbar>\n</div>\n<br><br>\n<div role=\"combobox\" flex=\"column\" class=\"rating-container\">\n    <div fxLayout=\"row\" class=\"giverating\" fxLayoutAlign=\"space-between stretch\">\n        <mat-card>\n            <div fxLayout=\"row\" class=\"twocards\">\n                <div>\n                    <img class=\"bookimg\" src=\"assets\\bookimage\\{{bookImage}}\" />\n                </div>\n                <div fxLayout=\"column\" style=\"margin-left: 20px;\">\n                    <div class=\"booktitle\" style=\"word-wrap: break-word; margin-bottom: 5%; font-size: 20px;\">\n                        <Strong>{{ bookName }}</Strong>\n                    </div>\n                    <div class=\"sub\" style=\"word-wrap: break-word; margin-bottom: 5%;\">\n                        by {{ bookAuthor }}\n                    </div>\n                    <div>\n                        <button *ngIf=\"totalRate > 0\" class=\"single\" fxLayout=\"row\" [ngStyle]=\"{ 'background-color': color }\">\n                <div>\n                  {{ totalRate }}\n                </div>\n                <mat-icon\n                  style=\"font-size: 14px; padding-top: 1.8px; color: white;\"\n                >\n                  star\n                </mat-icon>\n              </button>\n                    </div>\n                </div>\n            </div>\n        </mat-card>\n        <mat-card>\n            <div class=\"twocards\">\n                <div>\n                    <strong>Rate the Book</strong>\n                </div>\n                <div fxLayout=\"row\" class=\"rating\">\n                    <button mat-icon-button [color]=\"color\" *ngFor=\"let ratingId of ratingArr; index as i\" [id]=\"'star_' + i\" (click)=\"onClick(i + 1)\" fxLayout=\"row\" [matTooltip]=\"ratingId + 1\" matTooltipPosition=\"above\">\n              <mat-icon>\n                {{ showIcon(i) }}\n              </mat-icon>\n            </button>\n                    <mat-error *ngIf=\"starCount == null || starCount == 0\">\n                        Star count is <strong>required</strong> and cannot be zero\n                    </mat-error>\n                </div>\n            </div>\n        </mat-card>\n    </div>\n    <div fxLayout=\"column\" class=\"singlecard\">\n        <mat-card>\n            <div style=\"margin-bottom: 2%;\">\n                <strong>Review the Book</strong>\n            </div>\n            <div class=\"reviewtext\">\n                <textarea matTextareaAutosize class=\"input\" [(ngModel)]=\"review\" placeholder=\"Review here........\"></textarea>\n            </div>\n            <div style=\"align-items: flex-end;\">\n                <button mat-button class=\"rate-submit\" (click)=\"submitRate()\">\n            Submit\n          </button>\n            </div>\n        </mat-card>\n    </div>\n</div>\n<div style=\" margin-top: 8%; margin-right: 0;\" class=\"footer\">\n    <app-footer></app-footer>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { BookModule } from 'src/app/Model/book/book.module';\nimport { ActivatedRouteSnapshot, ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BookService } from 'src/app/Service/book.service';\n\n@Component({\n  selector: 'app-giverate',\n  templateUrl: './giverate.component.html',\n  styleUrls: ['./giverate.component.scss']\n})\nexport class GiverateComponent implements OnInit {\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private bookService: BookService,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {}\n  // tslint:disable-next-line: no-input-rename\n  @Input('starCount')  starCount = 5;\n  color: string;\n  private snackBarDuration = 2000;\n  ratingArr = [];\n  rating: number;\n  book: BookModule;\n  bookId: any;\n  review: any;\n  totalRate: any;\n\n  bookImage: any;\n  bookName: any;\n  bookAuthor: any;\n  token: any;\n\n  ngOnInit(): void {\n    this.bookService.autoRefresh$.subscribe(() => {\n      this.getRateOfBook(this.bookId);\n    });\n    this.bookId = this.route.snapshot.paramMap.get('bookId');\n    console.log('bookId:', this.bookId);\n    this.token = this.route.snapshot.paramMap.get('token');\n    console.log('token:', this.token);\n    this.getBookById();\n    for (let index = 0; index < this.starCount; index++) {\n      this.ratingArr.push(index);\n    }\n    this.getRateOfBook(this.bookId);\n    this.getColor();\n  }\n\n\n  onClick(rating: any) {\n    this.snackBar.open('You rated ' + rating + ' / ' + this.starCount, '', {\n      duration: this.snackBarDuration,\n    });\n    this.rating = rating;\n    return false;\n  }\n\n    showIcon(index: number) {\n    if (this.rating >= index + 1) {\n      return 'star';\n    } else {\n      return 'star_border';\n    }\n  }\n\n  getBookById() {\n    console.log('get book called');\n    this.bookService.getOneBook(this.bookId , this.token).subscribe((response: any) => {\n      if (response.obj != null) {\n        this.book = response.obj;\n        this.bookImage = response.obj.image;\n        this.bookAuthor = response.obj.authorName;\n        this.bookName = response.obj.bookName;\n      }\n    });\n  }\n\n  submitRate() {\n    const data = {\n      rating: this.rating,\n      review: this.review,\n    };\n    console.log('rating is', data.rating);\n    console.log('review is ', data.review);\n    this.bookService\n      .ratingandreview(this.bookId, data , this.token)\n      .subscribe((response: any) => {\n        console.log('submit rate response:', response);\n        this.snackBar.open(response.response, 'ok', { duration: 2000 });\n        this.router.navigateByUrl('books');\n      },\n      (error: any) => {\n        this.snackBar.open(error.error.message, 'ok', { duration: 2000 });\n      }\n\n      );\n  }\n\n\n  getColor() {\n    if (this.totalRate >= 3 || this.totalRate >= 2) {\n      this.color = 'rgb(245,182,110)';\n    }\n    if (this.totalRate >= 4) {\n      this.color = 'rgb(16,136,16)';\n    }\n    if (this.totalRate < 2) {\n      this.color = 'rgb(250,0,0)';\n    }\n  }\n\n  getRateOfBook(bookId: number)  {\n    console.log('book id for avgrate:', bookId);\n    this.bookService.getRateOfBookById(bookId).subscribe(\n\n      (response: any) => {\n        console.log('response', response);\n        console.log('rate of books:', response.obj);\n        this.totalRate = response.obj;\n\n        }\n\n    );\n\n  }\n\n}\n","<div style=\"width: 100%;\" style=\"height: 11%;\">\n    <app-toolbar flexLayout=\"row\"></app-toolbar>\n</div>\n<div role=\"combobox\" flex=\"column\" class=\"display\">\n    <mat-card class=\"matcard2\" fxLayout=\"row\">\n        <div class=\"cartdetails\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\" style=\"margin-left: 2%;\">\n            <mat-card class=\"bookMatcard\" fxLayoutAlign=\"center fit-content\">\n                <div class=\"image\">\n                    <img class=\"bookimg\" src=\"assets\\bookimage\\{{book.image}}\" />\n                </div>\n            </mat-card>\n            <div class=\"bookdetails\">\n                <div class=\"booktitle\" style=\"word-wrap: break-word; margin-bottom: 2%; font-size: 20px;\">\n                    <Strong>{{ book.bookName }}</Strong>\n                </div>\n\n                <div class=\"sub\" style=\"word-wrap: break-word; margin-bottom: 4%;\">\n                    by {{book.authorName }}\n                </div>\n                <div style=\"margin-bottom: 4%; font-size: 18px; margin-left: -25px;\">\n                    <Strong>Rs.{{ book.price }}</Strong>\n                </div>\n                <div style=\"margin-bottom: 5%; font-size: 14px; margin-left: -25px;\">\n                    <strong>Seller:</strong>{{ \" Dwayne Johnson\" }}\n                </div>\n                <div fxLayout=\"row\" fxLayoutAlign=\"spacearound stretch\" style=\"margin-bottom: 5%; margin-left: -25px;\" fxLayoutGap=\"35%\">\n                    <button class=\"total\" fxLayout=\"row\" style=\"\n                font-size: 14px;\n                text-align: center;\n                padding-top: 9px;\n                height: 40px;\n                margin-bottom: 5px;\n                width: fit-content !important;\n                padding-right: 1px;\n                border-radius: 3px;\n                color: white;\n              \" [ngStyle]=\"{ 'background-color': color }\">\n              <div>\n                {{ totalRate  }}\n              </div>\n              <mat-icon style=\"font-size: 14px; padding-top: 1.8px;\">\n                star\n              </mat-icon>\n            </button>\n                    <!-- <button mat-button class=\"rating\" (click)=\"rateNow()\" style=\"color: #0a0102; background-color: white;\">\n              <strong >RATE BOOK</strong>\n            </button> -->\n                </div>\n                <div fxLayout=\"row wrap\">\n                    <div fxLayout=\"row\" style=\"margin-bottom: 5%;\">\n                        <div style=\"font-size: 18px; margin-left: -25px;\">\n                            <strong>Description:</strong>\n                        </div>\n                        <div style=\"\n                  margin-left: 6px;\n                  color: #9d9d9d !important;\n                  margin-top: 2px;\n                \">\n                            {{book.bookDetails}}\n                        </div>\n                    </div>\n                    <div fxLayout=\"row\" style=\"margin-left: -25px;\">\n                        <button *ngIf=\"!isAdded; else added\" mat-button class=\"add\" (click)=\"addToCart(book.bookId)\" style=\"color: white; background-color: #a03037;\">\n                ADD TO BAG\n              </button>\n                        <ng-template #added>\n                            <button mat-button class=\"add\" style=\"color: white; background-color: #3371b5;\">\n                  ADDED TO BAG\n                </button>\n                        </ng-template>\n                        <button mat-button *ngIf=\"!isListed\" class=\"add\" (click)=\"addToWishlist()\" style=\"color: #0a0102; background-color: white;\">\n                WISHLIST\n              </button>\n                        <!-- <button mat-button class=\"add\" style=\"color: white; background-color: #3371b5;\">\n                IN WISHLIST\n              </button> -->\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-card>\n    <mat-card class=\"matcard2\">\n        <div fxLayout=\"column\" style=\"margin-left: 2%; margin-right: 2%;\">\n            <div style=\"font-size: 20px;\">\n                <strong>Ratings & Reviews</strong>\n            </div>\n            <div *ngFor=\"let review of reviewList\">\n                <div fxLayout=\"row\" style=\"margin-top: 4%;\">\n                    <div>\n                        <button class=\"single\" fxLayout=\"row\" style=\"\n                  font-size: 14px;\n                  text-align: center;\n                  padding-top: 0px;\n                  height: 20px;\n                  width: fit-content !important;\n                  padding-right: 1px;\n                  border-radius: 3px;\n                  color: white;\n                  background-color: rgb(16, 136, 16);\n                \">\n                <div>\n                  {{ review.rating }}\n                </div>\n                <mat-icon style=\"font-size: 14px; padding-top: 1.8px;\">\n                  star\n                </mat-icon>\n              </button>\n                    </div>\n                    <div style=\"margin-left: 20px;\">\n                        <strong>{{ review.name }}</strong>\n                    </div>\n                </div>\n                <div>{{ review.review }}</div>\n            </div>\n            <div>\n                <label *ngIf=\"totalRate == 0\" class=\"total\" style=\"color: black; background-color: white;\">\n            Be the first to write review\n          </label>\n            </div>\n        </div>\n    </mat-card>\n</div>\n<div class=\"foot\" style=\"top: 720px; margin-top: 5%; margin-right: 0;\">\n    <app-footer></app-footer>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BookModule } from 'src/app/Model/book/book.module';\nimport { BookService } from 'src/app/Service/book.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-ratereview',\n  templateUrl: './ratereview.component.html',\n  styleUrls: ['./ratereview.component.scss']\n})\nexport class RatereviewComponent implements OnInit {\n\n\n  constructor(\n    private bookService: BookService,\n    private router: Router,\n    private data: BookService,\n    public dialog: MatDialog,\n    private matSnackBar: MatSnackBar,\n    private route: ActivatedRoute,\n  ) { }\n  bookId: any;\n  ratings: Array<any> = [];\n  rate: any;\n  visible: boolean;\n  isAdded: boolean;\n  isListed: boolean;\n  book: BookModule;\n  bookImage: any;\n  bookName: any;\n  bookAuthor: any;\n  bookPrice: any;\n  bookDescription: any;\n  sellerName: any;\n  show: boolean;\n\n  totalRate = 0;\n  ratenumber: number=0;\n  color: any;\n  total: any;\n  reviewList =new Array<any>();\n  rev:string;\n  user=new Array<any>();\n\n  ngOnInit(): void {\n    this.bookId = this.route.snapshot.paramMap.get('bookId');\n    this.getBookById();\n    this.getRatings();\n    console.log('bookid ', this.bookId);\n    \n    // this.getRateOfBookById();\n  }\n\n  getBookById() {\n    this.bookService.getOneBookById(this.bookId).subscribe((response: any) => {\n      console.log(response);\n      this.book = response.obj;\n      console.log(\"get book by id:\" ,this.book);\n      console.log(this.book, 'kkkkkkkk');\n     });\n  }\n  getRateOfBookById() {\n    this.bookService.getRateOfBookById(this.bookId).subscribe((response: any) => {\n      if (response.obj != null) {\n        this.rate = response.obj ;\n        if (this.rate === undefined) {\n        console.log('book average rate ', this.rate);\n        }\n      }\n    });\n  }\n\n  rateNow() {\n    // if (this.visible) {\n      // localStorage.setItem(\"totalRate\", this.total);\n      this.router.navigate(['books/ratingandreview/' + this.bookId]);\n    // }\n  }\n\n  getRatings() {\n    this.bookService\n    .getReview(this.bookId)\n    .subscribe((response: any) => {\n      this.ratings = response.obj;\n      console.log('rate and reviews for book ' + this.ratings);\n\n      // tslint:disable-next-line: prefer-const\n      // tslint:disable-next-line: forin\n      for (const index in this.ratings) {\n        this.rate = this.ratings[index];\n        this.totalRate += this.rate.rating;\n        this.ratenumber += 1;\n        this.total = this.totalRate;\n        this.rev = this.ratings[index].review;\n        this.user = this.ratings[index].userName;\n    \n        console.log(\"user:\",this.user);\n       \n        var p={name:this.user,review:this.rev,rating:this.ratings[index].rating};\n        this.reviewList.push(p);\n        console.log(\"after push:\",this.reviewList);\n      }\n      if (this.ratenumber > 1) {\n          this.totalRate = this.totalRate / this.ratenumber;\n          this.total = Number.parseFloat(this.totalRate + '').toFixed(1);\n        }\n      if (this.totalRate >= 3 || this.totalRate >= 2) {\n          this.color = 'rgb(245, 182, 110)';\n        }\n      if (this.totalRate >= 4) {\n          this.color = 'rgb(16, 136, 16)';\n        }\n      if (this.totalRate < 2) {\n          this.color = 'rgb(216, 69, 59)';\n        }\n      });\n  }\n\n\n  addToCart(bookId: any) {\n    if (localStorage.getItem('token') === null) {\n      this.matSnackBar.open('Please Login first', 'ok', {\n        duration: 5000\n      });\n      sessionStorage.setItem(bookId, bookId);\n      this.isAdded = true;\n      this.router.navigateByUrl('login');\n    }\n    sessionStorage.setItem(bookId, bookId);\n    this.ngOnInit();\n\n    // if (this.visible) {\n    //   this.bookService.addToCart(this.bookId).subscribe((response: any) => {\n    //     this.data.changeMessage(\"count\");\n    //     console.log(response[\"obj\"]);\n    //     this.isAdded = response.obj;\n    //     this._matSnackBar.open(\"Book added to cart\", \"ok\", {\n    //       duration: 1000,\n    //     });\n    //   });\n    // } else {\n    //   const dialogRef = this.dialog.open(LoginComponent);\n    //   dialogRef.afterClosed().subscribe((result) => {\n    //     window.location.reload();\n    //   });\n    //   this._matSnackBar.open(\"please login\", \"ok\", {\n    //     duration: 1000,\n    //   });\n    // }\n  }\n\n  // adding book to wish list if user login\n  addToWishlist() {\n    // if (this.visible) {\n    //   this.bookService.addToWishList(this.bookId).subscribe((response: any) => {\n    //     console.log(response[\"obj\"]);\n    //     this.isListed = response[\"obj\"];\n    //     this._matSnackBar.open(\"Book added to wishlist\", \"ok\", {\n    //       duration: 1000,\n    //     });\n    //   });\n    // } else {\n    //   const dialogRef = this.dialog.open(LoginComponent);\n    //   dialogRef.afterClosed().subscribe((result) => {\n    //     window.location.reload();\n    //   });\n    //   this._matSnackBar.open(\"please login\", \"ok\", {\n    //     duration: 1000,\n    //   });\n    // }\n  }\n  isAddedToWishList() {\n    // this.bookService\n    //   .isAddedToWishList(this.bookId)\n    //   .subscribe((response: any) => {\n    //     this.isListed = response[\"obj\"];\n    //   });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BookService } from 'src/app/Service/book.service';\nimport {MatSnackBarModule, MatSnackBar} from '@angular/material/snack-bar';\nimport { BookModule } from 'src/app/Model/book/book.module';\nimport {  MatDialog } from '@angular/material/dialog';\nimport { BookreviewsComponent } from '../bookreviews/bookreviews.component';\n\n\n@Component({\n  selector: 'app-ratedbooks',\n  templateUrl: './ratedbooks.component.html',\n  styleUrls: ['./ratedbooks.component.scss']\n})\nexport class RatedbooksComponent implements OnInit {\n\n  bookList = Array<any>();\n  totalRate: any;\n  color: string;\n  avgRate: any;\n  bookId: any;\n  rateList = Array<any>();\n  bookSearch: any;\n\n  constructor(private service: BookService,\n              private matSnackBar: MatSnackBar, private dialog: MatDialog\n    ) { }\n\n\n  ngOnInit(): void {\n    // this.getallApprovedBooks();\n    this.getBookByRating();\n    this.totalRate = 0;\n\n    this.getColor();\n    this.getSearchBookData();\n\n  }\n\n  getBookByRating() {\n    this.service.getSortedBookByRate().subscribe(\n\n      (response: any) => {\n        console.log('response', response);\n        console.log('books:', response.obj);\n        this.bookList = response.obj;\n\n\n        },\n      (error: any) => {\n        this.matSnackBar.open(error.error.message, 'failed', {duration: 5000});\n      }\n    );\n\n  }\n\n getRateOfBook(bookId: number)  {\n    console.log('book id for avgrate:', bookId);\n    this.service.getRateOfBookById(bookId).subscribe(\n\n      (response: any) => {\n        console.log('response', response);\n        console.log('rate of books:', response.obj);\n        this.totalRate = response.obj;\n\n        },\n      (error: any) => {\n        this.matSnackBar.open(error.error.message, 'failed', {duration: 5000});\n      }\n    );\n\n  }\n\n  getallApprovedBooks() {\n    console.log('method called');\n    this.service.getallBooks().subscribe(\n\n      (response: any) => {\n        console.log('response', response);\n        console.log('books:', response.obj);\n        this.bookList = response.obj;\n\n\n        },\n      (error: any) => {\n        this.matSnackBar.open(error.error.message, 'failed', {duration: 5000});\n      }\n    );\n  }\n\n  getColor() {\n    if (this.totalRate >= 3 || this.totalRate >= 2) {\n      this.color = 'rgb(245,182,110)';\n    }\n    if (this.totalRate >= 4) {\n      this.color = 'rgb(16,136,16)';\n    }\n    if (this.totalRate < 2) {\n      this.color = 'rgb(250,0,0)';\n    }\n  }\n\n  getReviews(book) {\n    const dialogRef = this.dialog.open(BookreviewsComponent, {\n      // width: '25rem',\n      // panelClass: 'custom-dialog-container',\n      // height: '400px',\n      // width: '600px',\n      data : {bookId: book.bookId}\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n    });\n  }\n\n  getSearchBookData() {\n    this.service.getSearchBookData().subscribe((message) => {\n      console.log('search data', message.books);\n      this.bookSearch = message.books;\n    });\n  }\n}\n","<div class=\"main-container\">\n    <!-- <div class=\"container\"></div> -->\n    <div class=\"title\">Books\n    </div>\n    <br>\n\n    <div class=\"list-books\">\n\n        <div *ngFor=\"let book of bookList | booksearchpipe:bookSearch\">\n\n\n            <mat-card style=\"height: 22.5em; width: 220px;  margin-right: 40px;\" (click)=\"getReviews(book)\">\n                <mat-card-title>\n                    <img src=\"assets\\bookimage\\{{book.image}}\" style=\"height: 150px; width: 90px;\n                      margin-left: 55px; margin-right: 55px; padding-top: 20px; padding-bottom: 20px; \" />\n                </mat-card-title>\n                <mat-card-content style=\"width: 17em; \">\n                    <div class=\"out-of-stock \" *ngIf=\"!book.noOfBooks \">Out Of stock</div>\n                    <div class=\"bookname \">{{ book.bookName }}</div>\n                    <div class=\"authorname \">by {{ book.authorName }}</div>\n                    <div class=\"price \">Rs. {{ book.price }}</div>\n\n                    <div>\n\n                        <button *ngIf=\"totalRate > 0\" class=\"single\" fxLayout=\"row\" [ngStyle]=\"{ 'background-color': color }\">\n                        <div>\n                          {{ totalRate }}\n                        </div>\n                        <mat-icon\n                          style=\"font-size: 14px; padding-top: 1.8px; color: white;\"\n                        >\n                          star\n                        </mat-icon>\n                      </button>\n                    </div>\n                </mat-card-content>\n\n            </mat-card>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpserviceService } from './httpservice.service';\nimport { Subject, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WishlistService {\n\n  // tslint:disable-next-line: variable-name\n  private _autoRefresh$ = new Subject();\n  private  addwhistlistUrl = environment.WISHLIST_ADD;\n  private baseUrl = environment.BASE_URL;\n  private httpOptions = {headers: new HttpHeaders({'content-type': 'application/json'})};\n  get autoRefresh$() {\n    return this._autoRefresh$;\n  }\n  constructor(private http: HttpClient, private httpService: HttpserviceService) { }\n\n  addToWishlist(bookId: any): Observable<any> {\n     console.log('----------------bookid=  ', bookId);\n     console.log('${this.baseUrl}/${this.addwhistlistUrl}/${bookId}' + '---------------wishlist url');\n     return this.httpService\n      .post(`${this.baseUrl}/${this.addwhistlistUrl}/${bookId}`, {}, {headers: new HttpHeaders({token: localStorage.token})})\n      .pipe(\n        tap(() => {\n          this._autoRefresh$.next();\n        })\n      );\n  }\n  getWishllistBooks() {\n    // tslint:disable-next-line: max-line-length\n    // console.log(`${this.baseUrl}/${environment.WISHLIST_GET}`);\n    return this.httpService.get(`${this.baseUrl}/${environment.WISHLIST_GET}`, {headers: new HttpHeaders({token: localStorage.token})});\n  }\n  getWishlistCount(): Observable<any> {\n    console.log('get itmes from cart');\n    // tslint:disable-next-line: max-line-length\n    return this.httpService.get(`${this.baseUrl}/${environment.WISHLIST_COUNT}`, {headers: new HttpHeaders({token: localStorage.token})});\n  }\n\n  removeFromWishList(orderId: number) {\n    console.log('removeFromWishList');\n    console.log(`${this.baseUrl}/${environment.WISHLIST_REMOVE}` + orderId);\n    // tslint:disable-next-line: max-line-length\n    return this.httpService.delete(`${this.baseUrl}/${environment.WISHLIST_REMOVE}` + orderId, {headers: new HttpHeaders({token: localStorage.token})})\n    .pipe(\n      tap(() => {\n        this._autoRefresh$.next();\n      })\n    );\n  }\n}\n","import { Component, OnInit ,Inject} from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BookService } from 'src/app/Service/book.service';\nimport {MatSnackBarModule, MatSnackBar} from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-bookreviews',\n  templateUrl: './bookreviews.component.html',\n  styleUrls: ['./bookreviews.component.scss']\n})\nexport class BookreviewsComponent implements OnInit {\n\n  bookId:number;\n  constructor(@Inject(MAT_DIALOG_DATA) public data : any,private bookService: BookService , private snakbar: MatSnackBar) { \n    this.bookId = data.bookId;\n    console.log(\"bookid for review:\",this.bookId);\n  }\n\n  ngOnInit(): void {\n    this.getReviews();\n  }\n  reviews = new Array<any>();\n  reviewList =new Array<any>();\n  rev:string;\n  user=new Array<any>();\n  color: string;\n  totalRate:any;\n\n  getReviews()\n  {\n    this.getRateOfBook(this.bookId);\nthis.bookService.getReview(this.bookId).subscribe((response: any) => {\n\n  console.log(\"Review response:\",response.obj);\n  this.reviews=response.obj;\n  console.log(\"Reviews stored:\",response.obj['review']);\n  for (var index in this.reviews) {\n    this.rev = this.reviews[index].review;\n    this.user = this.reviews[index].userName;\n\n    console.log(\"user:\",this.user);\n   \n    var p={name:this.user,review:this.rev,rating:this.reviews[index].rating};\n    this.reviewList.push(p);\n    console.log(\"after push:\",this.reviewList);\n  \n  }\n\n}\n);\n  }\n\n  getRateOfBook(bookId:number)  {\n    console.log(\"book id for avgrate:\",bookId);\n    this.bookService.getRateOfBookById(bookId).subscribe(\n\n      (response: any) => {\n        console.log('response', response);\n        console.log('rate of books:', response.obj);\n        this.totalRate= response.obj;\n        \n        }\n     \n    );\n   \n  }\n\n\n  // reviewList=\n  //   [\n  //     { \n  //       name: \"Nayan\", review: \"This book is a Norse Arabian Nights. Each section is a honeycomb. Stories are nested in stories and crack open to reveal rumor and anecdote, prose poems, tendrils of myth\" \n  //     },\n  //     { \n  //       name: \"Jhon\", review: \"The opening story’s incessant hedging about language—meant, in part, to parody, ad nauseam, the almost paranoiac way that our language about identity tends to be policed\" \n  //     },\n  //     { \n  //       name: \"michael\", review: \"The book—though an absorbing and well-crafted work of fiction capable of standing on its own, without the support of biography—is almost impossible to consider independently of the knowledge of where its author’s life overlaps with his art\" \n  //     },\n  //   ]\n\n}\n","<div role=\"combobox\" flex=\"column\" >\n  <div>\n    <div>\n      <mat-card\n        class=\"matcard2\">\n        <div style=\"margin-bottom: 8px; margin-left: 27px; margin-top:20px; font: Bold 18px/15px Lato;\" *ngIf=\"reviewList.length>0\">\n          Reviews:\n          <button\n          *ngIf=\"totalRate > 0\"\n          class=\"single\"\n          fxLayout=\"row\"\n          style=\"background-color: rgb(16,136,16)\"\n        >\n          <div>\n            {{ totalRate }}\n          </div>\n          <mat-icon\n            style=\"font-size: 14px; padding-top: 1.8px; color: white;\"\n          >\n            star\n          </mat-icon>\n        </button>\n        </div>\n        <div style=\"margin-bottom: 8px; margin-left: 27px; margin-top:20px; font: Bold 18px/15px Lato;\" *ngIf=\"reviewList.length==0\">\n          Reviews: No reviews\n        </div>\n        <div *ngFor=\"let book of reviewList\">\n        <div style=\"margin-left: 27px;font: Bold 18px/15px Lato;\">{{book.name}}</div>\n        \n        <!-- <button\n        class=\"single\"\n        fxLayout=\"row\"\n        style=\"background-color: rgb(16,136,16);margin-left: 27px;\"\n      >\n      <button\n      *ngIf=\"book.rating>=2\"\n      class=\"single\"\n      fxLayout=\"row\"\n      style=\"background-color: rgb(245,182,110);margin-left: 27px;\"\n    >\n    <button\n    *ngIf=\"book.rating>=1\"\n    class=\"single\"\n    fxLayout=\"row\"\n    style=\"background-color: rgb(250,0,0);margin-left: 27px;\"\n  >\n        <div>\n          {{ book.rating }}\n        </div>\n        <mat-icon\n          style=\"font-size: 14px; padding-top: 1.8px; color: white;\"\n        >\n          star\n        </mat-icon>\n      </button> -->\n        <div style=\"margin-left: 27px;\">{{book.review}}</div>\n        <br>\n      </div>\n\n      </mat-card>\n    </div>\n  </div>\n  </div>\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Subject, Observable } from 'rxjs';\nimport { HttpserviceService } from './httpservice.service';\nimport { BookModule } from '../Model/book/book.module';\nimport { tap, map, catchError } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n\n  // tslint:disable-next-line: variable-name\n  private _autoRefresh$ = new Subject();\n\n  get autoRefresh$() {\n    return this._autoRefresh$;\n  }\n\n\n  private searchBookData = new Subject<any>();\n  private baseUrl = environment.BASE_URL;\n  private notesList = new Subject<any>();\n  private getReviewUrl = environment.getReview;\n\n  // tslint:disable-next-line: variable-name\n\n  // tslint:disable-next-line: variable-name\n  private httpOtions = {\n    headers: new HttpHeaders({ 'content-type': 'application/json' })\n  };\n\n\n  constructor(private http: HttpClient, private httpService: HttpserviceService) { }\n\n  private httpOptions = {headers: new HttpHeaders({'content-type': 'application/json'})};\n\n\n  public getAllApprovedBook(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/books/approved?order=asc`);\n  }\n  public getAllApprovedBookByPage(page: number, sortby ?: string, orderBy ?: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/books/approved?page=${page}&order=${orderBy}&sortBy=${sortby}`);\n  }\n\n  getallBooks() {\n    console.log('getting all books');\n    // tslint:disable-next-line: max-line-length\n    return this.httpService.get(`${this.baseUrl}/books/`, {headers: new HttpHeaders({token: localStorage.token})});\n  }\n\n  addBook(book: any, imageName: string): Observable<any> {\n    return this.httpService\n      .post(`${environment.BookUrl}/${environment.addbooks}/${imageName}`, book, {headers: new HttpHeaders({token: localStorage.token})})\n      .pipe(\n        tap(() => {\n          this._autoRefresh$.next();\n        })\n      );\n  }\n\n  deleteBook(bookId: any): Observable<any> {\n    return this.httpService\n      .delete(`${environment.BookUrl}/${environment.deleteBook}/${bookId}`, {headers: new HttpHeaders({token: localStorage.token})})\n      .pipe(\n        tap(() => {\n          this._autoRefresh$.next();\n        })\n      );\n  }\n\n  updateBook(bookId: any, book: any): Observable<any> {\n    return this.httpService\n    // tslint:disable-next-line: max-line-length\n    .put(`${environment.BookUrl}/${environment.editBook}/${bookId}`, book, {headers: new HttpHeaders({token: localStorage.token})})\n    .pipe(\n      tap(() => {\n        this._autoRefresh$.next();\n      })\n    );\n  }\n\n  verifyBook(bookId: any, status: any): Observable<any> {\n    console.log('url ', `${environment.BookUrl}/${environment.verifyBook}/${bookId}/${status}`);\n\n    return this.httpService\n      // tslint:disable-next-line: max-line-length\n      .put(`${environment.BookUrl}/${environment.verifyBook}/${bookId}/${status}`, ' ', {headers: new HttpHeaders({token: localStorage.token})})\n      .pipe(\n        tap(() => {\n          this._autoRefresh$.next();\n        })\n      );\n  }\n\n  uploadBookImage(bookId,  formData): Observable<any> {\n    return this.httpService\n      // tslint:disable-next-line: max-line-length\n      .post(`${environment.BookUrl}/${environment.addBookImage}/${bookId}`, formData, {headers: new HttpHeaders({token: localStorage.token})})\n      .pipe(\n        tap(() => {\n          this._autoRefresh$.next();\n        })\n      );\n  }\n  getBokkByid(Bookid: any): Observable<any> {\n    console.log('book service callerd', Bookid);\n    console.log('book url', `${this.baseUrl}/books/getbook/${Bookid}`);\n    return this.http.get(`${this.baseUrl}/books/getbook/${Bookid}`,\n       {});\n  }\n\n  setSearchBookData(message: any) {\n    console.log('set service', message);\n    return this.searchBookData.next({ books: message });\n  }\n  getSearchBookData(): Observable<any> {\n    console.log('get service');\n    return this.searchBookData.asObservable();\n  }\n  public getRateOfBookById(bookId: any): Observable<any> {\n\n    console.log( environment.BASE_URL + '/' + environment.avgrateofbook + bookId);\n    return this.http.get(\n      environment.BASE_URL + '/' + environment.avgrateofbook + bookId,\n      {}\n    );\n  }\n\n  // public getBookById(bookId: any): Observable<any> {\n  //   console.log('writring review for bookid ', bookId);\n  //   console.log( environment.BASE_URL + environment.getbookbyIdurl + bookId);\n  //   return this.http.get(\n  //     environment.BASE_URL + environment.getbookbyIdurl + bookId,\n  //     {}\n  //   );\n  // }\n  public getBookById(bookId: any): Observable<any> {\n    console.log('writring review for bookid ', bookId);\n    console.log( environment.BASE_URL + environment.getbookbyIdurl + bookId);\n    return this.http.get(\n      environment.BASE_URL + environment.getbookbyIdurl + bookId,\n      {}\n    );\n  }\n  public ratingandreview(bookId: number, data: any , token: any) {\n    console.log('ratingandreview service method bookId :', bookId);\n    console.log('ratingandreview service method rate& review dto :', data);\n    console.log('token to give rate:', token);\n    console.log('url ' + environment.BASE_URL + '/' + environment.WRITE_REVIEW + bookId);\n    const tokens = token;\n\n    return this.http\n      .put(environment.BASE_URL + '/' + environment.WRITE_REVIEW + bookId, data, {headers: new HttpHeaders({token})})\n      .pipe(\n        tap(() => {\n          this.searchBookData.next();\n        })\n      );\n  }\n\n  public getratingandreview(bookId: number) {\n    return this.http.get(environment.BASE_URL + environment.ratereview + bookId, this.httpOptions);\n  }\n\n  getInProgressOrderedBooks(): Observable<any> {\n    console.log('order status url');\n    console.log(this.httpService.get(environment.adminUrl + environment.getOrdersByseller, this.httpOptions));\n    return this.httpService.get(environment.adminUrl + environment.getOrdersByseller, {});\n   }\n\n  public getReview(bookId: number) {\n    console.log('get review url:', `${environment.BASE_URL}/${this.getReviewUrl}?bookId=${bookId}`);\n    return this.http.get(`${environment.BASE_URL}/${this.getReviewUrl}?bookId=${bookId}`, this.httpOptions);\n  }\n\n  public getSortedBookByRate(): Observable<any> {\n    return this.http.get(`${environment.BASE_URL}/${environment.getSortedBookByRate}`, this.httpOptions);\n  }\n\n  public getOneBook(bookId: number , token: any) {\n    return this.http.get(`${this.baseUrl}/books/getbook/${bookId}`,\n    {headers: new HttpHeaders({token})});\n  }\n\n  public getOneBookById(bookId: number) {\n    return this.http.get(`${this.baseUrl}/books/getbook/${bookId}`,\n    this.httpOptions);\n  }\n\n\n}\n","import { OrderService } from './../../Service/order.service';\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport {MatSnackBarModule } from '@angular/material/snack-bar';\nimport { BookService } from 'src/app/Service/book.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { BookModule } from 'src/app/Model/book/book.module';\nimport { CartService } from 'src/app/Service/cart.service';\nimport { Customer } from 'src/app/Model/customer.model';\nimport { Address } from 'src/app/Model/address.model';\nimport { UserService } from 'src/app/Service/user.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent implements OnInit {\n  constructor( private matSnackBar: MatSnackBar,\n               private formBuilder: FormBuilder,\n               private route: Router,\n               private service: BookService,\n               private cartService: CartService,\n               private userService: UserService,\n               private orderService: OrderService) { }\n  selected = false;\n  isLinear = false;\n  customerForm: FormGroup;\n  error: null;\n  book = [];\n  books: BookModule = new BookModule();\n  public isLoading = false;\n  items = [];\n  size: number;\n  valueChanged = false;\n  // tslint:disable-next-line: variable-name\n  book_id: number;\n  bookSearch: any;\n  bookName: string;\n  length: any = sessionStorage.length;\n  si: any = sessionStorage.length;\n  value: any = [];\n  UserId: number;\n  objecrtArry: any = [];\n  quantity = 1;\n  customer: Customer = new Customer();\n  userAdreessDetails: Address = new Address();\n  type = 'home';\n  bid: any;\n  user: number;\n  num = 2;\n  selectedtype: any;\n  adressId: any;\n  @Output() output: EventEmitter<any> = new EventEmitter();\nselect = false;\naddre: Address = new Address();\n    phoneNumber = new FormControl('', [Validators.required, Validators.pattern('[0-9]{10,10}')]);\n    Name = new FormControl('', [Validators.required]);\n    pincode = new FormControl('', [Validators.required]);\n    address = new FormControl('', [Validators.required]);\n    locality = new FormControl('', [Validators.required]);\n    city = new FormControl('', [Validators.required]);\n    landmark = new FormControl('', [Validators.required]);\n    Home = new FormControl('', [Validators.required]);\n    Work = new FormControl('', [Validators.required]);\n    Other = new FormControl('', [Validators.required]);\n    bookQuantityDetails = {\n      eachPrice: null,\n      quantityId: null,\n      quantityOfBook : null\n    };\n\n  ngOnInit()  {\n   this.getsession();\n   this.cartService.autoRefresh$.subscribe(() => {\n    this.getCartItemCount();\n    this. booksFromCart();\n  });\n   this.fun(this.type);\n   this.getCartItemCount();\n   this. booksFromCart();\n  }\n\n  getCartItemCount() {\n    this.cartService.getCartItemCount().subscribe((response: any) => {\n      this.length = response.obj;\n      console.log('total number of itemes are' + response.obj);\n     });\n  }\n\n  booksFromCart() {\n      this.cartService.getCartBooksFrom().subscribe((Response) => {\n        console.log('response of cart books' , Response.obj);\n        console.log('books are ', this.book);\n        this.book = Response.obj;\n        console.log('response from cat', Response.obj[0].quantityOfBook[0].quantityOfBook);\n        for (const i of this.book) {\n          console.log('vikash', i.quantityOfBook[0].quantityOfBook);\n          this.quantity = i.quantityOfBook[0].quantityOfBook;\n        }\n    });\n  }\n  increaseQuantity(bookId: any , quantityDeatils: any) {\n    console.log('increasing items ');\n    console.log('Quatity Details', quantityDeatils);\n    this.bookQuantityDetails.quantityId = quantityDeatils.quantity_id;\n    this.bookQuantityDetails.eachPrice = quantityDeatils.totalprice / quantityDeatils.quantityOfBook;\n    this.bookQuantityDetails.quantityOfBook = quantityDeatils.quantityOfBook;\n    this.cartService.increaseBooksQuantity(bookId, this.bookQuantityDetails).subscribe(\n      data => this.handleResponse(data),\n      error => this.handleError(error));\n    console.log('Book id' + bookId);\n    }\n  DecreseQuantity(bookId: any , quantityDeatils: any) {\n    console.log('increasing items ');\n    console.log('Quatity Details', quantityDeatils);\n    this.bookQuantityDetails.quantityId = quantityDeatils.quantity_id;\n    this.bookQuantityDetails.eachPrice = quantityDeatils.totalprice / quantityDeatils.quantityOfBook;\n    this.bookQuantityDetails.quantityOfBook = quantityDeatils.quantityOfBook;\n    this.cartService.decreaseBooksQuantity(bookId, this.bookQuantityDetails).subscribe(\n      data => this.handleResponse(data),\n      error => this.handleError(error)\n    );\n    console.log('Book id' + bookId);\n  }\n\n  Removecart(key) {\n    this.cartService.removeIteamFromCart(key).subscribe((Response) => {\n      console.log('removing book', Response);\n    });\n    sessionStorage.removeItem(key);\n    console.log('removinf book id is: ', key);\n  }\n\n\n  handleResponse(data: any): void {\n    this.isLoading = false;\n    console.log(data);\n    this.matSnackBar.open(data.message , 'ok', {\n    duration: 5000\n  });\n  }\n\n  handleError(error: any) {\n    this.isLoading = false;\n    this.error = error.error.message;\n    console.log(error);\n    console.log('error', this.error);\n    this.matSnackBar.open(this.error, 'ok', {\n    duration: 5000\n  });\n  }\n\n  getUserAdress() {\n    this.userService.getAdress().subscribe((Response) => {\n      console.log('address', Response);\n      for (const i of Response.obj) {\n        if (i.addressType === 'home' && this.selectedtype === 'home') {\n          this.setAddresToInput(i);\n          console.log('user adress Of Home : ', i);\n          this.adressId = i.addressId;\n        } else if (i.addressType === 'work' && this.selectedtype === 'work') {\n          this.setAddresToInput(i);\n          console.log('user adress Of wokr : ', i);\n          this.adressId = i.addressId;\n        } else if (i.addressType === 'other' && this.selectedtype === 'other') {\n          this.setAddresToInput(i);\n          console.log('user adress Of wokr : ', i);\n          this.adressId = i.addressId;\n        }\n      }\n    });\n  }\n\n\n  setAddresToInput(adressuser: Address) {\n    this.Name.setValue(adressuser.name);\n    this.phoneNumber.setValue(adressuser.phoneNumber);\n    this.pincode.setValue(adressuser.pincode);\n    this.locality.setValue(adressuser.locality);\n    this.address.setValue(adressuser.address);\n    this.city.setValue(adressuser.city);\n    this.landmark.setValue(adressuser.landmark);\n    this.phoneNumber.setValue(adressuser.phoneNumber);\n  }\n\n  addAdress() {\n    this.addre.name = this.Name.value;\n    console.log('adding adress is ', this.addre);\n  }\nToggle() {\n  if ( this.select === false) {\n    this.select = true;\n  } else if ( this.select === true) {\n    this.select = false;\n  }\n}\n\ntog() {\n  if ( this.selected === false) {\n    this.selected = true;\n  } else if ( this.selected === true) {\n    this.selected = false;\n  }\n}\n\ngetsession() {\nfor (let i = 0; i < sessionStorage.length; i++) {\n  const key = sessionStorage.key(i);\n  this.value[i] = sessionStorage.getItem(key);\n  console.log('key', key);\n}\n\n}\n fun(type) {\n  this.selectedtype = type;\n  this.addre.name = (localStorage.getItem('Name'));\n  this.addre.phoneNumber = (localStorage.getItem('phone'));\n\n  this.adressId = null;\n  this.setAddresToInput(this.addre);\n  this.getUserAdress();\n  console.log('select item is ' + type);\n}\n\n\naddtcart( user: any) {\n  for (let i = 0; i < sessionStorage.length; i++) {\n    const key = sessionStorage.key(i);\n    this.value[i] = sessionStorage.getItem(key);\n    console.log('key', key);\n    console.log('ghgvvb=====' + user);\n    console.log('---' + this.bid);\n}\n}\nplaceOrder(bookId: any) {\n  this.isLoading = true;\n  console.log('place order', bookId);\n  console.log('Address', this.address.value);\n  this.orderService.placeOrder(bookId, this.adressId).subscribe(\n    data => this.handleResponseOfPlaceOrder(data),\n    error => this.handleError(error));\n  \n}\n  handleResponseOfPlaceOrder(data: any): void {\n    this.isLoading = false;\n    console.log('data', data);\n    sessionStorage.removeItem(data.obj.booksList[0].bookId);\n    this.matSnackBar.open(data.message , 'ok', {\n      duration: 5000\n    });\n    this.route.navigateByUrl('greeting');\n  }\nOnRegisterSubmit() {\n  this.addre.name = this.Name.value;\n  this.addre.locality = this.locality.value;\n  this.addre.address = this.address.value;\n  this.addre.pincode = this.pincode.value;\n  this.addre.phoneNumber = this.phoneNumber.value;\n  this.addre.city = this.city.value;\n  this.addre.landmark = this.landmark.value;\n  if (this.adressId === null || this.adressId === undefined) {\n    this.addre.type = this.selectedtype;\n    console.log('adress is going to upadted is ' + this.addre);\n    this.userService.addAdress(this.addre).subscribe((Response) => {\n    console.log('adress address', Response);\n    window.location.reload();\n  });\n } else {\n  this.addre.addressType = this.selectedtype;\n  console.log('adress type is selected' ,   this.addre.addressType );\n  this.addre.addressId = this.adressId;\n  console.log('adress is going to upadted is ', this.addre);\n  this.userService.updateAdress(this.addre).subscribe((Response) => {\n     console.log('address updated', Response);\n   });\n }\n}\n}\n","<div *ngIf=\"isLoading\">\n    <app-spineer></app-spineer>\n</div>\n<app-toolbar [output]=\"si\" *ngIf=\"!isLoading\"></app-toolbar>\n\n<link href=\"https://fonts.googleapis.com/css2?family=Lato&display=swap\" rel=\"stylesheet\">\n<div class=\"main-conatiner\" *ngIf=\"!isLoading\">\n    <div class=\"row\">\n        <div class=\"column1\">\n            <mat-label style=\" display:flex; margin-left:6%;padding-top: 4%;font-family: 'Lato', sans-serif;\n        font-size: 18px;\n        color:black\"> Mycart({{length}})</mat-label>\n            <div>\n                <div *ngFor=\"let books of book \" fxLayout=\"row\">\n                    <img style=\"padding-top: 24px;\n                  width: 71px;\n                  height: 126px;\n                  padding-left: 0px;\n                  margin-left: 51px;\" src=\"assets\\bookimage\\{{books.booksList[0].image}}\" class=\"bookimage\">\n                    <br>\n                    <div class=\"details\" fxLayout=\"row\">\n                        <span style=\"margin-left: 11%;\n                      padding-top: 2em;\n                      font-size: 14px;\">{{books.booksList[0].bookName}}</span>\n                        <h3 style=\"margin-left: -4em;\n                      font-size: 10px;\n                      color: slategrey;\n                      padding-top: 70px;\">by:{{books.booksList[0].authorName}}</h3>\n                        <h3 style=\"margin-left: -2.3em;\n                      padding-top: 90px;\n                      font-size: 17px; font-weight: 600;\">Rs.{{books.booksList[0].price}}</h3>\n                    </div>\n                    <div style=\"display: flex; flex-direction: row; margin-left: -2.0em; margin-top: 10em; border-radius: 2em;\">\n                        <div style=\"display: flex; flex-direction: row;margin-bottom: 10px;\">\n                            <div style=\"height: 20px; width: 20px;\">\n                                <button style=\"  height: 25px;\n                                width: 25px;\n                                text-align: center;\n                                background-color: #f9f9f9;\n                                border-radius: 11em;\n                                border-color: #eee9e9;\" [disabled]=\"books.quantityOfBook[0].quantityOfBook >= books.booksList[0].noOfBooks\" (click)=\"increaseQuantity(books.booksList[0].bookId, books.quantityOfBook[0])\">  +\n                          </button>\n                            </div>\n                            <div style=\"margin-left: 13px;\n                          margin-right: 9px;\n                          height: 23px;\n                          width: 44px;\n                          margin-top: 2px;\n                          background: #FFFFFF 0% 0% no-repeat padding-box;\n                          border: 1px solid #DBDBDB;\n                          border-radius: 1px;\n                          opacity: 1;\n                          text-align: center;\n                      \">\n                                {{books.quantityOfBook[0].quantityOfBook}}\n                            </div>\n                            <div>\n                                <button style=\"height: 25px;\n                                width: 25px;\n                                text-align: center;\n                                background-color: #f9f9f9;\n                                border-radius: 11em;\n                                border-color: #eee9e9;\" [disabled]=\"books.quantityOfBook[0].quantityOfBook < 2\" (click)=\"DecreseQuantity(books.booksList[0].bookId, books.quantityOfBook[0])\">-\n                            </button>\n                            </div>\n                            <div>\n                                <button style=\"height: 30px; width: 60px;font-size: 12px;\n                                background-color:white;padding-top: 0em; margin-left: 10px; border: transparent;\n                               \" (click)=\"Removecart(books.booksList[0].bookId)\">Remove\n                               </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n            <button class=\"button1\" *ngIf=\"!select\" (click)=\"Toggle()\">CONTINUE</button>\n        </div>\n    </div>\n    <div class=\"form-conatiner\">\n        <a style=\"font-size:15px ;margin-left: 40px;margin-top: 6%;font-family: 'Lato', sans-serif; \">Customer Details</a>\n        <br>\n        <br>\n        <div fxLayoutAlign=\"center center\" fxLayout=\"column\" *ngIf=\"select\">\n            <form>\n                <mat-card-content>\n                    <div class=\"name-contact\">\n                        <div fxFlex=\"45\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Name</mat-label>\n                                <input style=\"height: 20px;\" matInput placeholder=\"Name\" matInput [formControl]=\"Name\" autocomplete=\"off\" required>\n                                <mat-error required>Please enter valid name</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div fxFlex=\"45\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Phone Number</mat-label>\n                                <input style=\"height: 20px;\" id=\"contact\" maxlength='10' placeholder=\"Phone number\" matInput [formControl]=\"phoneNumber\" required />\n                                <mat-error required>Please enter valid number </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"name-contact\" style=\"margin-top: 10px;\">\n                        <div fxFlex=\"45\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>Pincode</mat-label>\n                                <input style=\"height: 20px;\" id=\"pinCode\" maxlength='6' placeholder=\"Pincode\" matInput [formControl]=\"pincode\" autocomplete=\"off\" required/>\n                                <mat-error required>Please enter valid pincode </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div fxFlex=\"45\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>locality</mat-label>\n                                <input style=\"height: 20px;\" id=\"locality\" matInput [formControl]=\"locality\" placeholder=\"Locality\" autocomplete=\"off\" required/>\n                                <mat-error required>Please enter valid locality </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"address\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Address</mat-label>\n                            <input style=\"height: 30px;\" id=\"address\" placeholder=\"Address\" matInput [formControl]=\"address\" autocomplete=\"off\" required/>\n                            <mat-error required>Please enter valid Address </mat-error>\n\n                        </mat-form-field>\n                    </div>\n                    <div class=\"name-contact\">\n                        <div fxFlex=\"45\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>City</mat-label>\n                                <input style=\"height: 20px;\" id=\"city\" placeholder=\"City\" matInput [formControl]=\"city\" autocomplete=\"off\" required/>\n                                <mat-error required>Please enter valid City name</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div fxFlex=\"45\">\n                            <mat-form-field appearance=\"outline\">\n                                <mat-label>land Mark</mat-label>\n                                <input style=\"height: 20px;\" id=\"landMark\" placeholder=\"Landmark\" matInput [formControl]=\"landmark\" autocomplete=\"off\" required/>\n                                <mat-error required>Please enter valid land Mark </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"example-section\">\n                        <label class=\"example-margin\" style=\"margin-left: -3em;font-family: 'Lato', sans-serif;\">Type:</label>\n                        <mat-radio-group class=\"example-margin\" style=\"margin-top: 4em; margin-left: 2em;\">\n                            <mat-radio-button checked style=\"margin-left: 40%;background-color: white; \" (click)=\"fun('home')\" value=\"Home\" #type>Home</mat-radio-button>\n                            <mat-radio-button style=\"margin-left: 60%;\" (click)=\"fun('work')\" value=\"work\" #type>Work</mat-radio-button>\n                            <mat-radio-button style=\"margin-left: 60%;\" (click)=\"fun('other')\" value=\"other\" #type>Other</mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </mat-card-content>\n                <div class=\"buttons\" *ngIf=\"!selected\" (click)=\"tog()\">\n                    <button class=\"button3\" style=\"font-family: 'Lato', sans-serif;margin-left: 75%;\n                  margin-bottom: 0%;\" (click)=\"OnRegisterSubmit()\">CONTINUE</button>\n                </div>\n            </form>\n        </div>\n    </div>\n    <div class=\"row2\" style=\"padding: 10px;\">\n        <div>\n            <div>\n                <a style=\"font-size:15px ; font-family: 'Lato', sans-serif; margin-left: 18px;margin-top: 2%;padding: 20px;\">Order Summary</a>\n            </div>\n            <div class=\"column\" *ngIf=\"selected\">\n                <div *ngFor=\"let books of book \" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n                    <img style=\"    padding-top: 14px;\n              width: 81px;\n              height: 126px;\n              padding-left: 1px;\n              margin-left: 61px;\" src=\"assets\\bookimage\\{{books.booksList[0].image}}\" class=\"bookimage\">\n                    <br>\n                    <div class=\"details\">\n                        <div style=\"margin-left: 1%; padding-top: 0em; font-size: 16px;\">\n                            <span>{{books.booksList[0].bookName}}</span></div>\n                        <div style=\"padding-top: 17px;margin-left: -69px;\">\n                            <h2 style=\" font-size: 10px;\n                          color: slategrey;\">by: {{books.booksList[0].authorName}}</h2>\n                        </div>\n                        <div>\n                            <h1 style=\"margin-left: -41px; padding-top: 42PX; font-size: 16px;\n                        font-weight: 500\">Total Price Rs.{{books.quantityOfBook[0].totalprice}}</h1>\n                        </div>\n                    </div>\n                    <div>\n                        <button class=\"button2\" (click)=\"placeOrder(books.booksList[0].bookId)\">CHECKOUT</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"bottom\" style=\"height: 10%;\">\n        Copyright &copy; 2020, Bookstore All rights reserved\n    </div>","<div fxLayoutAlign=\"center center\" fxFlexFill>\n    <div *ngIf=\"isloading\">\n        <app-spineer></app-spineer>\n    </div>\n    <mat-card fxFlex=\"35\" *ngIf=\"!isloading\">\n        <div style=\"text-align: center;\">\n\n            <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\" fxLayoutAlign=\"flex-start\" style=\"background-color: #A03037; padding-top: 16px;\">\n                <div class=\"imgLogo\">\n                    <img src=\"assets\\education.svg\" alt=\"\">\n                </div>\n                <h2 class=\"title\">Bookstore</h2>\n            </div>\n        </div>\n        <br>\n\n        <h2>Create Your Account</h2>\n\n        <!-- form  -->\n        <form #regForm=ngForm (ngSubmit)=\"onSubmit(); regForm.resetForm();\" *ngIf=\"!isloading\">\n            <div *ngIf=\"name.touched && !name.valid\">\n                <div *ngIf=\"name.errors.minlength\">\n                    <small><mat-error>First Name is minimum {{ name.errors.minlength.requiredLength }} character.</mat-error></small>\n                </div>\n            </div>\n\n            <div *ngIf=\"phoneNumber.touched && !phoneNumber.valid\">\n                <div *ngIf=\"phoneNumber.errors.maxlength\">\n                    <small><mat-error>last Name is maximum 10 character.</mat-error></small>\n                </div>\n                <div *ngIf=\"phoneNumber.errors.pattern\">\n                    <small><mat-error>Must Be valid number start b/w 6-9</mat-error></small>\n                </div>\n            </div>\n            <div *ngIf=\"password.touched && !password.valid\">\n                <div *ngIf=\"password.errors.minlength\">\n                    <small><mat-error>Password must contain 6 character.</mat-error></small>\n                </div>\n                <div *ngIf=\"password.errors.pattern\">\n                    <small><mat-error>must contain at least one letter, at least one number, and be longer than six charaters.</mat-error></small>\n                </div>\n            </div>\n            <div *ngIf=\"confirmpassword.touched && !confirmpassword.valid\">\n                <div *ngIf=\"confirmpassword.errors.minlength\">\n                    <small><mat-error>Password must contain 6 character.</mat-error></small>\n                </div>\n                <div *ngIf=\"confirmpassword.errors.pattern\">\n                    <small><mat-error>Password & Confirm Password does not match.</mat-error></small>\n                </div>\n            </div>\n            <!-- Ending Validation of all the input -->\n\n\n            <div class=\"example-container\">\n                <!-- displaying error from backend -->\n                <div class=\"alert alert-danger text-justify\" [hidden]=\"!error\">{{error}}</div>\n                <div class=\"alert alert-success text-justify\" [hidden]=\"!message\">{{message}}</div>\n                <mat-form-field appearance=\"outline\" fxLayout=\"column\" style=\"width: 100%;\">\n                    <mat-label>Enter Your name</mat-label>\n                    <input matInput minlength=\"3\" maxlength=\"20\" #name=\"ngModel\" required [(ngModel)]=\"form.name\" name=\"name\">\n                    <mat-error>Please Enter valid Name </mat-error>\n\n                </mat-form-field>\n            </div>\n            <mat-form-field appearance=\"outline\" fxLayout=\"column\" style=\"width: 100%;\">\n                <mat-label>Enter your Email</mat-label>\n                <input email required matInput type=\"email\" placeholder=\"Email\" [(ngModel)]=\"form.email\" name=\"email\">\n                <mat-icon style=\"color: #e1e4e4;\" matSuffix>email</mat-icon>\n                <mat-error>Please Enter valid email </mat-error>\n            </mat-form-field>\n            <div class=\"example-container\">\n                <mat-form-field style=\"width: 220px;\" appearance=\"outline\">\n                    <mat-label>Enter password</mat-label>\n                    <input #password=\"ngModel\" matInput required type=\"password\" minlength=\"5\" [(ngModel)]=\"form.password\" name=\"password\" pattern=\"^(?=.*[0-9]+.*)(?=.*[a-zA-Z]+.*)[0-9a-zA-Z]{6,}$\">\n                    <mat-error>Please Enter Strong Password</mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" style=\"width: 220px; padding-left: 6px;\">\n                    <mat-label>Confirm password</mat-label>\n                    <input [(ngModel)]=\"form.confirmPassword\" #pasword=\"ngModel\" name=\"confirmPassword\" matInput required type=\"password\" #confirmpassword=\"ngModel\" pattern=\"{{ password.value }}\">\n                    <mat-error required>Please Enter valid Password</mat-error>\n                </mat-form-field>\n            </div>\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                <mat-label>Enter your Phone Number </mat-label>\n                <input #phoneNumber=\"ngModel\" pattern=\"^[6-9]\\d{9}$\" [(ngModel)]=\"form.mobileNumber\" minlength=\"10\" maxlength=\"10\" name=\"mobileNumber\" matInput placeholder=\"Placeholder\" required>\n                <mat-icon style=\"color: #e1e4e4;\" matSuffix>phone</mat-icon>\n                <mat-error>Enter valid Phone number </mat-error>\n            </mat-form-field>\n            <h4 style=\"margin-right: 130px;\">Register as</h4>\n            <mat-radio-group aria-label=\"Select an option\" [(ngModel)]=\"form.role\" name=\"role\">\n                <mat-radio-button id=\"userRadio\" value=\"user\" required=\"required\"> User </mat-radio-button> &nbsp;\n                <mat-radio-button id=\"sellerRadio\" value=\"seller\" required=\"required\">Seller </mat-radio-button> &nbsp;\n            </mat-radio-group>\n\n            <br>\n            <br>\n            <div class=\"text-right\">\n                <button type=\"submit\" style=\"\n                background-color: #a03037;\n                border-radius: 5px;\n                text-decoration-color:#FFFFFF;\n                font-size: 20px;\n                font-weight: 500;\n                color: whitesmoke;\n                width: 106px;\n                height: 40px;\n                \" [disabled]=\"!regForm.valid\" id=\"registrationBtn\" mat-raised-button>Register</button>\n            </div>\n        </form>\n    </mat-card>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\nimport { UserService } from 'src/app/Service/user.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n  public error = null;\n  message = null;\n  public isloading = false;\n  public form = {\n    name: null,\n    email: null,\n    password: null,\n    confirmPassword: null,\n    mobileNumber: null,\n    role: null,\n  };\n  constructor(private user: UserService,\n              private route: Router,\n              private matSnakeBar: MatSnackBar\n  ) {\n  }\n  ngOnInit() {\n  }\n  handleError(error) {\n    this.isloading = false;\n    this.error = error.error.message;\n    console.log(error);\n    this.matSnakeBar.open(this.error, 'ok', {\n      duration: 5000\n    });\n  }\n  onSubmit() {\n    this.isloading = true;\n    this.user.signUp(this.form).subscribe(\n      data => this.handleResponse(data),\n      error => this.handleError(error)\n    );\n  }\n  handleResponse(data) {\n    this.message = data.message;\n    this.isloading = false;\n    console.log(data);\n    this.route.navigateByUrl('/login');\n    this.matSnakeBar.open('Sucessfull Registration Done ', 'ok', {\n      duration: 5000\n    });\n\n  }\n}\n","import { DashboardComponent } from './Component/dashboard/dashboard.component';\nimport { SellerComponent } from './Component/seller/seller/seller.component';\nimport { AdminComponent } from './Component/admin/admin/admin.component';\nimport { RegistrationComponent } from './Component/auth/registration/registration.component';\nimport { LoginComponentComponent } from './Component/auth/login-component/login-component.component';\nimport { ForgetPasswordComponent } from './Component/auth/forget-password/forget-password.component';\nimport { ResetPasswordComponent } from './Component/auth/reset-password/reset-password.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CartComponent } from './Component/cart/cart.component';\nimport { OrdergreetingComponent } from './Component/ordergreeting/ordergreeting.component';\nimport { GiverateComponent } from './Component/giverate/giverate.component';\nimport { AdminunverifiedbooksComponent } from './Component/adminunverifiedbooks/adminunverifiedbooks.component';\nimport { RatereviewComponent } from './Component/ratereview/ratereview.component';\nimport { OrderstatusComponent } from './Component/orderstatus/orderstatus.component';\nimport { RatedbooksComponent } from './Component/ratedbooks/ratedbooks.component';\nimport { BookreviewsComponent } from './Component/bookreviews/bookreviews.component';\nimport { WishComponent } from './Component/wish/wish.component';\n//import { PagenotfoundComponent } from './component/pagenotfound/pagenotfound.component';\n\nconst routes: Routes = [\n\n  {\n    path: '', redirectTo: 'books',\n    pathMatch: 'full'\n  },\n  {path: 'books', component: DashboardComponent},\n  {path: 'cart', component: CartComponent},\n  {path: 'greeting', component: OrdergreetingComponent},\n  {path: 'update-password/:token', component: ResetPasswordComponent},\n  {path: 'forget-password', component: ForgetPasswordComponent},\n  {path: 'login', component: LoginComponentComponent},\n  {path: 'seller', component: SellerComponent},\n  {path: 'wish', component: WishComponent},\n  {path: 'register', component: RegistrationComponent},\n  {path: 'books/rateandreview/:bookId', component: GiverateComponent},\n  {path: 'verifybook', component: AdminunverifiedbooksComponent},\n  {path: 'books/info/:bookId', component: RatereviewComponent},\n  {path: 'books/:book', component: SellerComponent},\n  {path: 'admin', component: AdminComponent},\n  {path: 'register', component: RegistrationComponent},\n  {path: 'books/rateandreview/:bookId/:token', component: GiverateComponent},\n  {path: 'verifybook', component: AdminunverifiedbooksComponent},\n  {path: 'books/reviews/:bookId', component: RatereviewComponent},\n  {path: 'books/orders', component: OrderstatusComponent},\n  {path: 'ratedbooks', component: RatedbooksComponent},\n  {path: 'bookreviews', component: BookreviewsComponent},\n  //{path: '**', component: PagenotfoundComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n  public valideUser = false;\n  public loggedIn = false;\n  constructor() { }\n  public handle(data) {\n    this.set(data);\n  }\n  // setting token in local\n  public set(data) {\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('email', data.obj.email);\n    localStorage.setItem('Name', data.obj.name);\n    localStorage.setItem('phone', data.obj.mobileNumber);\n  }\n  // getting token from the local storage\n public get() {\n   return localStorage.getItem('token');\n  }\n  // Removing item from the local storage\n  remove() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('email');\n    localStorage.removeItem('Name');\n    localStorage.removeItem('role');\n    localStorage.removeItem('phone');\n    sessionStorage.clear();\n  }\n  logedIn(value: boolean) {\n  if ( this.get() != null) {\n    return this.loggedIn = true;\n  }\n  }\n  loggedStatus() {\n  return this.logedIn(this.loggedIn);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}